{"problemMap":{"436:F":{"contestId":436,"index":"F","name":"Banners","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["brute force","data structures","dp"]},"1332:G":{"contestId":1332,"index":"G","name":"No Monotone Triples","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["data structures"]},"960:H":{"contestId":960,"index":"H","name":"Santa's Gift","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["data structures","trees"]},"643:G":{"contestId":643,"index":"G","name":"Choosing Ads","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["data structures"]},"1270:I":{"contestId":1270,"index":"I","name":"Xor on Figures","type":"PROGRAMMING","points":4500,"rating":3500,"tags":["constructive algorithms","fft","math"]},"704:E":{"contestId":704,"index":"E","name":"Iron Man","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["data structures","geometry","trees"]},"914:E":{"contestId":914,"index":"E","name":"Palindromes in a Tree","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","trees"]},"1270:H":{"contestId":1270,"index":"H","name":"Number of Components","type":"PROGRAMMING","points":4000,"rating":3300,"tags":["data structures"]},"1270:G":{"contestId":1270,"index":"G","name":"Subset with Zero Sum","type":"PROGRAMMING","points":3750,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs","math"]},"1270:F":{"contestId":1270,"index":"F","name":"Awesome Substrings","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["math","strings"]},"1270:E":{"contestId":1270,"index":"E","name":"Divide Points","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["constructive algorithms","geometry","math"]},"1270:D":{"contestId":1270,"index":"D","name":"Strange Device","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","interactive","math","sortings"]},"1017:G":{"contestId":1017,"index":"G","name":"The Tree","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["data structures"]},"432:D":{"contestId":432,"index":"D","name":"Prefixes and Suffixes","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["dp","string suffix structures","strings","two pointers"]},"1726:E":{"contestId":1726,"index":"E","name":"Almost Perfect","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["combinatorics","fft","math"]},"1344:E":{"contestId":1344,"index":"E","name":"Train Tracks","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["data structures","trees"]},"718:E":{"contestId":718,"index":"E","name":"Matvey's Birthday","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["bitmasks","graphs"]},"1608:G":{"contestId":1608,"index":"G","name":"Alphabetic Tree","type":"PROGRAMMING","points":2750,"rating":3500,"tags":["binary search","data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},"986:E":{"contestId":986,"index":"E","name":"Prince's Problem","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["brute force","data structures","math","number theory","trees"]},"1721:D":{"contestId":1721,"index":"D","name":"Maximum AND","type":"PROGRAMMING","rating":1800,"tags":["bitmasks","dfs and similar","divide and conquer","greedy","sortings"]},"1721:E":{"contestId":1721,"index":"E","name":"Prefix Function Queries","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","dp","hashing","string suffix structures","strings","trees"]},"1721:C":{"contestId":1721,"index":"C","name":"Min-Max Array Transformation","type":"PROGRAMMING","rating":1400,"tags":["binary search","greedy","two pointers"]},"1721:B":{"contestId":1721,"index":"B","name":"Deadly Laser","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"1721:A":{"contestId":1721,"index":"A","name":"Image","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation"]},"1721:F":{"contestId":1721,"index":"F","name":"Matching Reduction","type":"PROGRAMMING","rating":2800,"tags":["brute force","constructive algorithms","dfs and similar","flows","graph matchings","graphs","interactive"]},"1043:G":{"contestId":1043,"index":"G","name":"Speckled Band","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["data structures","divide and conquer","hashing","string suffix structures","strings"]},"936:E":{"contestId":936,"index":"E","name":"Iqea","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},"1718:D":{"contestId":1718,"index":"D","name":"Permutation for Burenka","type":"PROGRAMMING","points":2250,"rating":3300,"tags":["data structures","graph matchings","greedy","math","trees"]},"1718:C":{"contestId":1718,"index":"C","name":"Tonya and Burenka-179","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["data structures","greedy","math","number theory"]},"1718:B":{"contestId":1718,"index":"B","name":"Fibonacci Strings","type":"PROGRAMMING","points":1250,"rating":2000,"tags":["greedy","implementation","math","number theory"]},"1718:A2":{"contestId":1718,"index":"A2","name":"Burenka and Traditions (hard version)","type":"PROGRAMMING","points":500,"rating":1900,"tags":["data structures","dp","greedy"]},"1718:A1":{"contestId":1718,"index":"A1","name":"Burenka and Traditions (easy version)","type":"PROGRAMMING","points":500,"rating":1800,"tags":["dp","greedy"]},"1175:F":{"contestId":1175,"index":"F","name":"The Number of Subpermutations","type":"PROGRAMMING","rating":2500,"tags":["brute force","data structures","divide and conquer","hashing","math"]},"1628:E":{"contestId":1628,"index":"E","name":"Groceries in Meteor Town","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["binary search","data structures","dsu","trees"]},"1608:F":{"contestId":1608,"index":"F","name":"MEX counting","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["combinatorics","dp","implementation"]},"1704:A":{"contestId":1704,"index":"A","name":"Two 0-1 Sequences","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy"]},"526:D":{"contestId":526,"index":"D","name":"Om Nom and Necklace","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["hashing","string suffix structures","strings"]},"1707:D":{"contestId":1707,"index":"D","name":"Partial Virtual Trees","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["combinatorics","dfs and similar","dp","math","trees"]},"1707:C":{"contestId":1707,"index":"C","name":"DFS Trees","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["dfs and similar","dsu","graphs","greedy","sortings","trees"]},"1707:A":{"contestId":1707,"index":"A","name":"Doremy's IQ","type":"PROGRAMMING","points":500,"rating":1600,"tags":["binary search","constructive algorithms","greedy","implementation"]},"1707:B":{"contestId":1707,"index":"B","name":"Difference Array","type":"PROGRAMMING","points":750,"rating":1900,"tags":["brute force","data structures","implementation","sortings"]},"1654:F":{"contestId":1654,"index":"F","name":"Minimal String Xoration","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["bitmasks","data structures","divide and conquer","greedy","hashing","sortings","strings"]},"662:C":{"contestId":662,"index":"C","name":"Binary Table","type":"PROGRAMMING","points":2250,"rating":2600,"tags":["bitmasks","brute force","divide and conquer","dp","fft","math"]},"150:E":{"contestId":150,"index":"E","name":"Freezing with Style","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["binary search","data structures","divide and conquer","trees"]},"1446:D2":{"contestId":1446,"index":"D2","name":"Frequency Problem (Hard Version)","type":"PROGRAMMING","points":750,"rating":3000,"tags":["data structures","greedy","two pointers"]},"1446:D1":{"contestId":1446,"index":"D1","name":"Frequency Problem (Easy Version)","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["data structures","greedy"]},"603:E":{"contestId":603,"index":"E","name":"Pastoral Oddities","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","divide and conquer","dsu","math","trees"]},"464:E":{"contestId":464,"index":"E","name":"The Classic Problem","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["data structures","graphs","shortest paths"]},"997:E":{"contestId":997,"index":"E","name":"Good Subsegments","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures"]},"526:F":{"contestId":526,"index":"F","name":"Pudding Monsters","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","divide and conquer"]},"639:F":{"contestId":639,"index":"F","name":"Bear and Chemistry","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["data structures","dfs and similar","graphs","trees"]},"103:E":{"contestId":103,"index":"E","name":"Buying Sets","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["flows","graph matchings"]},"1603:C":{"contestId":1603,"index":"C","name":"Extreme Extension","type":"PROGRAMMING","points":1750,"rating":2300,"tags":["dp","greedy","math","number theory"]},"1073:G":{"contestId":1073,"index":"G","name":"Yet Another LCP Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","string suffix structures"]},"1209:F":{"contestId":1209,"index":"F","name":"Koala and Notebook","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","dfs and similar","graphs","shortest paths","strings","trees"]},"601:E":{"contestId":601,"index":"E","name":"A Museum Robbery","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","dp"]},"1437:F":{"contestId":1437,"index":"F","name":"Emotional Fishermen","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","dp","math","two pointers"]},"712:E":{"contestId":712,"index":"E","name":"Memory and Casinos","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","math","probabilities"]},"822:E":{"contestId":822,"index":"E","name":"Liar","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["binary search","dp","hashing","string suffix structures"]},"1139:E":{"contestId":1139,"index":"E","name":"Maximize Mex","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["flows","graph matchings","graphs"]},"191:D":{"contestId":191,"index":"D","name":"Metro Scheme","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["graphs","greedy"]},"1684:C":{"contestId":1684,"index":"C","name":"Column Swapping","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["brute force","constructive algorithms","greedy","implementation","sortings"]},"1684:B":{"contestId":1684,"index":"B","name":"Z mod X = C","type":"PROGRAMMING","points":750,"rating":800,"tags":["constructive algorithms","math"]},"1684:D":{"contestId":1684,"index":"D","name":"Traps","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["constructive algorithms","greedy","sortings"]},"1684:E":{"contestId":1684,"index":"E","name":"MEX vs DIFF","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","brute force","constructive algorithms","data structures","greedy","two pointers"]},"1684:F":{"contestId":1684,"index":"F","name":"Diverse Segments","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","two pointers"]},"1684:G":{"contestId":1684,"index":"G","name":"Euclid Guess","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["constructive algorithms","flows","graph matchings","math","number theory"]},"1684:A":{"contestId":1684,"index":"A","name":"Digit Minimization","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","games","math","strings"]},"1806:E":{"contestId":1806,"index":"E","name":"Tree Master","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["brute force","data structures","dfs and similar","trees"]},"1844:G":{"contestId":1844,"index":"G","name":"Tree Weights","type":"PROGRAMMING","points":3500,"rating":3000,"tags":["bitmasks","constructive algorithms","data structures","dfs and similar","implementation","math","matrices","number theory","trees"]},"436:E":{"contestId":436,"index":"E","name":"Cardboard Box","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","greedy"]},"1804:G":{"contestId":1804,"index":"G","name":"Flow Control","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["data structures","dsu","implementation"]},"321:D":{"contestId":321,"index":"D","name":"Ciel and Flipboard","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["dp","greedy","math"]},"1019:C":{"contestId":1019,"index":"C","name":"Sergey's problem","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["constructive algorithms","graphs"]},"1870:E":{"contestId":1870,"index":"E","name":"Another MEX Problem","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["bitmasks","brute force","dp","shortest paths"]},"1870:G":{"contestId":1870,"index":"G","name":"MEXanization","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["data structures"]},"364:D":{"contestId":364,"index":"D","name":"Ghd","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["brute force","math","probabilities"]},"1458:D":{"contestId":1458,"index":"D","name":"Flip and Reverse","type":"PROGRAMMING","points":2000,"rating":3100,"tags":["data structures","graphs","greedy"]},"1868:D":{"contestId":1868,"index":"D","name":"Flower-like Pseudotree","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["constructive algorithms","graphs","greedy","implementation","trees"]},"1868:B1":{"contestId":1868,"index":"B1","name":"Candy Party (Easy Version)","type":"PROGRAMMING","points":500,"rating":1700,"tags":["bitmasks","constructive algorithms","graphs","greedy","implementation","math"]},"1868:C":{"contestId":1868,"index":"C","name":"Travel Plan","type":"PROGRAMMING","points":1000,"rating":2400,"tags":["combinatorics","dp","implementation","math","trees"]},"1868:B2":{"contestId":1868,"index":"B2","name":"Candy Party (Hard Version)","type":"PROGRAMMING","points":750,"rating":2100,"tags":["bitmasks","constructive algorithms","dp","greedy","implementation","math"]},"1868:A":{"contestId":1868,"index":"A","name":"Fill in the Matrix","type":"PROGRAMMING","points":500,"rating":1300,"tags":["constructive algorithms","implementation"]},"11:E":{"contestId":11,"index":"E","name":"Forward, march!","type":"PROGRAMMING","rating":2800,"tags":["binary search","dp","greedy"]},"48:G":{"contestId":48,"index":"G","name":"Galaxy Union","type":"PROGRAMMING","rating":2700,"tags":["dp","trees","two pointers"]},"101:E":{"contestId":101,"index":"E","name":"Candies and Stones","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["divide and conquer","dp"]},"1863:D":{"contestId":1863,"index":"D","name":"Two-Colored Dominoes","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","greedy"]},"1863:E":{"contestId":1863,"index":"E","name":"Speedrun","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["brute force","dfs and similar","dp","graphs","greedy","math","sortings","two pointers"]},"1863:C":{"contestId":1863,"index":"C","name":"MEX Repetition","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["implementation","math"]},"1863:A":{"contestId":1863,"index":"A","name":"Channel","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1863:B":{"contestId":1863,"index":"B","name":"Split Sort","type":"PROGRAMMING","points":750,"rating":1100,"tags":["greedy","math","sortings"]},"1864:A":{"contestId":1864,"index":"A","name":"Increasing and Decreasing","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","implementation","math"]},"1864:B":{"contestId":1864,"index":"B","name":"Swap and Reverse","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","greedy","sortings","strings"]},"1864:D":{"contestId":1864,"index":"D","name":"Matrix Cascade","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["brute force","constructive algorithms","data structures","dp","greedy","math"]},"1864:C":{"contestId":1864,"index":"C","name":"Divisor Chain","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["bitmasks","constructive algorithms","math","number theory"]},"1863:G":{"contestId":1863,"index":"G","name":"Swaps","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["combinatorics","dp","graphs","math"]},"1864:E":{"contestId":1864,"index":"E","name":"Guess Game","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["bitmasks","data structures","games","math","probabilities","sortings","strings","trees"]},"1864:F":{"contestId":1864,"index":"F","name":"Exotic Queries","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["data structures","implementation","sortings"]},"1864:H":{"contestId":1864,"index":"H","name":"Asterism Stream","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["dp","math","matrices"]},"1864:G":{"contestId":1864,"index":"G","name":"Magic Square","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["combinatorics","constructive algorithms","implementation"]},"1716:F":{"contestId":1716,"index":"F","name":"Bags with Balls","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","dp","math","number theory"]},"1716:E":{"contestId":1716,"index":"E","name":"Swap and Maximum Block","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","data structures","dfs and similar","divide and conquer","dp"]},"1709:D":{"contestId":1709,"index":"D","name":"Rorororobot","type":"PROGRAMMING","rating":1700,"tags":["binary search","data structures","greedy","math"]},"1709:E":{"contestId":1709,"index":"E","name":"XOR Tree","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","data structures","dfs and similar","dsu","greedy","trees"]},"487:E":{"contestId":487,"index":"E","name":"Tourists","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["data structures","dfs and similar","graphs","trees"]},"1361:E":{"contestId":1361,"index":"E","name":"James and the Chase","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["dfs and similar","graphs","probabilities","trees"]},"1716:C":{"contestId":1716,"index":"C","name":"Robot in a Hallway","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp","greedy","implementation","ternary search"]},"1716:D":{"contestId":1716,"index":"D","name":"Chip Move","type":"PROGRAMMING","rating":2000,"tags":["brute force","dp","math"]},"1267:I":{"contestId":1267,"index":"I","name":"Intriguing Selection","type":"PROGRAMMING","rating":2600,"tags":["brute force","constructive algorithms","implementation","interactive","sortings"]},"1709:F":{"contestId":1709,"index":"F","name":"Multiset of Strings","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","brute force","dp","fft","flows","graphs","math","meet-in-the-middle","trees"]},"1849:F":{"contestId":1849,"index":"F","name":"XOR Partition","type":"PROGRAMMING","rating":2700,"tags":["binary search","bitmasks","data structures","divide and conquer","greedy","trees"]},"1854:A1":{"contestId":1854,"index":"A1","name":"Dual (Easy Version)","type":"PROGRAMMING","points":750,"rating":1400,"tags":["constructive algorithms","math"]},"1854:A2":{"contestId":1854,"index":"A2","name":"Dual (Hard Version)","type":"PROGRAMMING","points":750,"rating":1900,"tags":["constructive algorithms","math"]},"1854:D":{"contestId":1854,"index":"D","name":"Michael and Hotel","type":"PROGRAMMING","points":2000,"rating":3000,"tags":["binary search","interactive","trees"]},"1854:E":{"contestId":1854,"index":"E","name":"Game Bundles","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["brute force","constructive algorithms","dp","greedy","math"]},"1854:C":{"contestId":1854,"index":"C","name":"Expected Destruction","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["combinatorics","dp","math","probabilities"]},"1854:B":{"contestId":1854,"index":"B","name":"Earn or Unlock","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["bitmasks","brute force","dp"]},"1849:A":{"contestId":1849,"index":"A","name":"Morning Sandwich","type":"PROGRAMMING","rating":800,"tags":["implementation","math"]},"1849:C":{"contestId":1849,"index":"C","name":"Binary String Copying","type":"PROGRAMMING","rating":1600,"tags":["binary search","brute force","data structures","hashing","strings"]},"1849:B":{"contestId":1849,"index":"B","name":"Monsters","type":"PROGRAMMING","rating":1000,"tags":["greedy","math","sortings"]},"1514:E":{"contestId":1514,"index":"E","name":"Baby Ehab's Hyper Apartment","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["binary search","graphs","interactive","sortings","two pointers"]},"685:D":{"contestId":685,"index":"D","name":"Kay and Eternity","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["brute force","implementation","sortings"]},"1709:C":{"contestId":1709,"index":"C","name":"Recover an RBS","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","implementation","strings"]},"1709:B":{"contestId":1709,"index":"B","name":"Also Try Minecraft","type":"PROGRAMMING","rating":900,"tags":["data structures","dp","implementation"]},"1709:A":{"contestId":1709,"index":"A","name":"Three Doors","type":"PROGRAMMING","rating":800,"tags":["brute force","greedy","implementation","math"]},"1036:G":{"contestId":1036,"index":"G","name":"Sources and Sinks","type":"PROGRAMMING","rating":2700,"tags":["bitmasks","brute force","dfs and similar"]},"1153:F":{"contestId":1153,"index":"F","name":"Serval and Bonus Problem","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["combinatorics","dp","math","probabilities"]},"480:D":{"contestId":480,"index":"D","name":"Parcels","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["dp","graphs"]},"848:C":{"contestId":848,"index":"C","name":"Goodbye Souvenir","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["data structures","divide and conquer"]},"269:D":{"contestId":269,"index":"D","name":"Maximum Waterfall","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","dp","graphs","sortings"]},"83:E":{"contestId":83,"index":"E","name":"Two Subsequences","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["bitmasks","dp"]},"144:E":{"contestId":144,"index":"E","name":"Competition","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["data structures","greedy"]},"1844:F2":{"contestId":1844,"index":"F2","name":"Min Cost Permutation (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2800,"tags":["binary search","constructive algorithms","data structures","greedy","math","sortings"]},"1844:E":{"contestId":1844,"index":"E","name":"Great Grids","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs"]},"1844:D":{"contestId":1844,"index":"D","name":"Row Major","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","greedy","math","number theory","strings"]},"1844:C":{"contestId":1844,"index":"C","name":"Particles","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["dp","greedy","implementation","math"]},"1844:B":{"contestId":1844,"index":"B","name":"Permutations & Primes","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","math"]},"1735:D":{"contestId":1735,"index":"D","name":"Meta-set","type":"PROGRAMMING","points":1750,"rating":1700,"tags":["brute force","combinatorics","data structures","hashing","math"]},"232:D":{"contestId":232,"index":"D","name":"Fence","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["binary search","data structures","string suffix structures"]},"1361:C":{"contestId":1361,"index":"C","name":"Johnny and Megan's Necklace","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["binary search","bitmasks","constructive algorithms","dfs and similar","dsu","graphs"]},"1735:C":{"contestId":1735,"index":"C","name":"Phase Shift","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["dfs and similar","dsu","graphs","greedy","implementation","strings"]},"1735:B":{"contestId":1735,"index":"B","name":"Tea with Tangerines","type":"PROGRAMMING","points":750,"rating":900,"tags":["greedy","math"]},"1735:A":{"contestId":1735,"index":"A","name":"Working Week","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","math"]},"1735:F":{"contestId":1735,"index":"F","name":"Pebbles and Beads","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["data structures","geometry"]},"1658:A":{"contestId":1658,"index":"A","name":"Marin and Photoshoot","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","implementation","math"]},"1104:A":{"contestId":1104,"index":"A","name":"Splitting into digits","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","implementation","math"]},"1657:A":{"contestId":1657,"index":"A","name":"Integer Moves","type":"PROGRAMMING","rating":800,"tags":["brute force","math"]},"1651:B":{"contestId":1651,"index":"B","name":"Prove Him Wrong","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy"]},"814:E":{"contestId":814,"index":"E","name":"An unavoidable detour for home","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","dp","graphs","shortest paths"]},"555:E":{"contestId":555,"index":"E","name":"Case of Computer Network","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["dfs and similar","graphs","trees"]},"1736:D":{"contestId":1736,"index":"D","name":"Equal Binary Subsequences","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["constructive algorithms","geometry","greedy","implementation","strings"]},"1736:C2":{"contestId":1736,"index":"C2","name":"Good Subarrays (Hard Version)","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["binary search","data structures","dp","two pointers"]},"1736:E":{"contestId":1736,"index":"E","name":"Swap and Take","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["dp","greedy"]},"1736:C1":{"contestId":1736,"index":"C1","name":"Good Subarrays (Easy Version)","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["binary search","data structures","schedules","two pointers"]},"1736:B":{"contestId":1736,"index":"B","name":"Playing with GCD","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["math","number theory"]},"1736:A":{"contestId":1736,"index":"A","name":"Make A Equal to B","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","sortings"]},"1290:E":{"contestId":1290,"index":"E","name":"Cartesian Tree ","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["data structures"]},"1845:D":{"contestId":1845,"index":"D","name":"Rating System","type":"PROGRAMMING","rating":1800,"tags":["binary search","brute force","data structures","dp","dsu","greedy","math","two pointers"]},"1845:E":{"contestId":1845,"index":"E","name":"Boxes and Balls","type":"PROGRAMMING","rating":2500,"tags":["dp","implementation","math"]},"1845:F":{"contestId":1845,"index":"F","name":"Swimmers in the Pool","type":"PROGRAMMING","rating":2800,"tags":["dp","fft","math","number theory"]},"855:E":{"contestId":855,"index":"E","name":"Salazar Slytherin's Locket","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["bitmasks","dp"]},"42:C":{"contestId":42,"index":"C","name":"Safe cracking","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["brute force","constructive algorithms"]},"538:E":{"contestId":538,"index":"E","name":"Demiurges Play Again","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["dfs and similar","dp","math","trees"]},"1674:E":{"contestId":1674,"index":"E","name":"Breaking the Wall","type":"PROGRAMMING","rating":2000,"tags":["binary search","brute force","constructive algorithms","greedy","math"]},"671:E":{"contestId":671,"index":"E","name":"Organizing a Race","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["data structures","greedy"]},"568:D":{"contestId":568,"index":"D","name":"Sign Posts","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["brute force","geometry","math"]},"1621:H":{"contestId":1621,"index":"H","name":"Trains and Airplanes","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["dfs and similar","graphs","shortest paths","trees"]},"1842:G":{"contestId":1842,"index":"G","name":"Tenzing and Random Operations","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["combinatorics","dp","math","probabilities"]},"500:G":{"contestId":500,"index":"G","name":"New Year Running","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["number theory","trees"]},"117:E":{"contestId":117,"index":"E","name":"Tree or not Tree","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["data structures","divide and conquer","implementation","trees"]},"576:E":{"contestId":576,"index":"E","name":"Painting Edges","type":"PROGRAMMING","points":2750,"rating":3300,"tags":["binary search","data structures"]},"1442:E":{"contestId":1442,"index":"E","name":"Black, White and Grey Tree","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["binary search","constructive algorithms","dfs and similar","dp","greedy","trees"]},"351:D":{"contestId":351,"index":"D","name":"Jeff and Removing Periods","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["data structures"]},"311:D":{"contestId":311,"index":"D","name":"Interval Cubing","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","math"]},"140:F":{"contestId":140,"index":"F","name":"New Year Snowflake","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["geometry","sortings"]},"1842:E":{"contestId":1842,"index":"E","name":"Tenzing and Triangle","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["data structures","dp","geometry","greedy","math"]},"1842:H":{"contestId":1842,"index":"H","name":"Tenzing and Random Real Numbers","type":"PROGRAMMING","points":3750,"rating":3000,"tags":["bitmasks","dp","graphs","math","probabilities"]},"1539:F":{"contestId":1539,"index":"F","name":"Strange Array","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","greedy","sortings"]},"690:F2":{"contestId":690,"index":"F2","name":"Tree of Life (medium)","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","hashing","trees"]},"756:D":{"contestId":756,"index":"D","name":"Bacterial Melee","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["brute force","combinatorics","dp","string suffix structures"]},"359:E":{"contestId":359,"index":"E","name":"Neatness","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["constructive algorithms","dfs and similar"]},"1768:D":{"contestId":1768,"index":"D","name":"Lucky Permutation","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},"1768:E":{"contestId":1768,"index":"E","name":"Partial Sorting","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","math","number theory"]},"1768:F":{"contestId":1768,"index":"F","name":"Wonderful Jump","type":"PROGRAMMING","points":3250,"rating":2900,"tags":["dp","greedy"]},"1768:A":{"contestId":1768,"index":"A","name":"Greatest Convex","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math","number theory"]},"51:F":{"contestId":51,"index":"F","name":"Caterpillar","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["dfs and similar","dp","graphs","trees"]},"336:E":{"contestId":336,"index":"E","name":"Vasily the Bear and Painting Square","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["bitmasks","combinatorics","dp","implementation"]},"1778:A":{"contestId":1778,"index":"A","name":"Flip Flop Sum","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1778:E":{"contestId":1778,"index":"E","name":"The Tree Has Fallen!","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["bitmasks","dfs and similar","math","trees"]},"1778:F":{"contestId":1778,"index":"F","name":"Maximizing Root","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["dfs and similar","dp","graphs","math","number theory","trees"]},"1795:B":{"contestId":1795,"index":"B","name":"Ideal Point","type":"PROGRAMMING","rating":900,"tags":["brute force","geometry","greedy"]},"1795:C":{"contestId":1795,"index":"C","name":"Tea Tasting","type":"PROGRAMMING","rating":1500,"tags":["binary search","data structures","implementation"]},"1795:D":{"contestId":1795,"index":"D","name":"Triangle Coloring","type":"PROGRAMMING","rating":1600,"tags":["combinatorics","math"]},"1795:A":{"contestId":1795,"index":"A","name":"Two Towers","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation","strings"]},"1789:C":{"contestId":1789,"index":"C","name":"Serval and Toxel's Arrays","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["combinatorics","dp","implementation","math"]},"1789:D":{"contestId":1789,"index":"D","name":"Serval and Shift-Shift-Shift","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["bitmasks","brute force","constructive algorithms","implementation"]},"1789:B":{"contestId":1789,"index":"B","name":"Serval and Inversion Magic","type":"PROGRAMMING","points":1000,"rating":800,"tags":["brute force","implementation","strings","two pointers"]},"1789:A":{"contestId":1789,"index":"A","name":"Serval and Mocha's Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","math","number theory"]},"1789:F":{"contestId":1789,"index":"F","name":"Serval and Brain Power","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["bitmasks","brute force","dp","greedy","implementation","strings"]},"1796:F":{"contestId":1796,"index":"F","name":"Strange Triples","type":"PROGRAMMING","rating":2900,"tags":["brute force","math","number theory"]},"1796:D":{"contestId":1796,"index":"D","name":"Maximum Subarray","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp","greedy","two pointers"]},"1796:C":{"contestId":1796,"index":"C","name":"Maximum Set","type":"PROGRAMMING","rating":1600,"tags":["binary search","math"]},"1796:B":{"contestId":1796,"index":"B","name":"Asterisk-Minor Template","type":"PROGRAMMING","rating":1000,"tags":["implementation","strings"]},"1796:A":{"contestId":1796,"index":"A","name":"Typical Interview Problem","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation","strings"]},"1794:B":{"contestId":1794,"index":"B","name":"Not Dividing","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms","greedy","math"]},"1794:A":{"contestId":1794,"index":"A","name":"Prefix and Suffix Array","type":"PROGRAMMING","points":750,"rating":800,"tags":["strings"]},"1794:E":{"contestId":1794,"index":"E","name":"Labeling the Tree with Distances","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["data structures","dp","greedy","hashing","implementation","trees"]},"1804:H":{"contestId":1804,"index":"H","name":"Code Lock","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["bitmasks","dp"]},"1801:G":{"contestId":1801,"index":"G","name":"A task for substrings","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["data structures","string suffix structures","strings"]},"1810:H":{"contestId":1810,"index":"H","name":"Last Number","type":"PROGRAMMING","points":3500,"rating":2900,"tags":["combinatorics","math"]},"1841:E":{"contestId":1841,"index":"E","name":"Fill the Matrix","type":"PROGRAMMING","rating":2200,"tags":["data structures","greedy","math"]},"1841:D":{"contestId":1841,"index":"D","name":"Pairs of Segments","type":"PROGRAMMING","rating":2000,"tags":["data structures","greedy","sortings","two pointers"]},"1841:C":{"contestId":1841,"index":"C","name":"Ranom Numbers","type":"PROGRAMMING","rating":1800,"tags":["brute force","dp","greedy","math","strings"]},"1841:B":{"contestId":1841,"index":"B","name":"Keep it Beautiful","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"1801:F":{"contestId":1801,"index":"F","name":"Another n-dimensional chocolate bar","type":"PROGRAMMING","points":3500,"rating":2700,"tags":["dp","math","meet-in-the-middle","number theory"]},"1801:E":{"contestId":1801,"index":"E","name":"Gasoline prices","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["data structures","divide and conquer","dsu","hashing","trees"]},"1801:D":{"contestId":1801,"index":"D","name":"The way home","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","data structures","dp","graphs","greedy","shortest paths","sortings"]},"1801:B":{"contestId":1801,"index":"B","name":"Buying gifts","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["data structures","greedy","sortings"]},"1801:A":{"contestId":1801,"index":"A","name":"The Very Beautiful Blanket","type":"PROGRAMMING","points":500,"rating":1600,"tags":["bitmasks","constructive algorithms"]},"1811:G2":{"contestId":1811,"index":"G2","name":"Vlad and the Nice Paths (hard version)","type":"PROGRAMMING","rating":2200,"tags":["binary search","combinatorics","data structures","dp","math","two pointers"]},"1804:F":{"contestId":1804,"index":"F","name":"Approximate Diameter","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["binary search","divide and conquer","graphs","shortest paths"]},"1804:E":{"contestId":1804,"index":"E","name":"Routing","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["bitmasks","brute force","dfs and similar","dp","graphs"]},"1804:D":{"contestId":1804,"index":"D","name":"Accommodation","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["brute force","dp","greedy","implementation"]},"1804:C":{"contestId":1804,"index":"C","name":"Pull Your Luck","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["brute force","greedy","math","number theory"]},"1806:F1":{"contestId":1806,"index":"F1","name":"GCD Master (easy version)","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["greedy","math","number theory","sortings"]},"1806:D":{"contestId":1806,"index":"D","name":"DSU Master","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["combinatorics","dp","dsu","math"]},"1806:C":{"contestId":1806,"index":"C","name":"Sequence Master","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["brute force","constructive algorithms","math"]},"1806:B":{"contestId":1806,"index":"B","name":"Mex Master","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms","greedy"]},"1806:A":{"contestId":1806,"index":"A","name":"Walking Master","type":"PROGRAMMING","points":500,"rating":800,"tags":["geometry","greedy","math"]},"1806:F2":{"contestId":1806,"index":"F2","name":"GCD Master (hard version)","type":"PROGRAMMING","points":1500,"rating":2900,"tags":["greedy","math","sortings"]},"888:G":{"contestId":888,"index":"G","name":"Xor-MST","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","constructive algorithms","data structures"]},"1822:G2":{"contestId":1822,"index":"G2","name":"Magic Triples (Hard Version)","type":"PROGRAMMING","rating":2200,"tags":["brute force","data structures","math","number theory"]},"1798:F":{"contestId":1798,"index":"F","name":"Gifts from Grandfather Ahmed","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["dp","math","number theory"]},"1798:E":{"contestId":1798,"index":"E","name":"Multitest Generator","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["brute force","dp"]},"1798:D":{"contestId":1798,"index":"D","name":"Shocking Arrangement","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["constructive algorithms","greedy","math"]},"1798:C":{"contestId":1798,"index":"C","name":"Candy Store","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["greedy","math","number theory"]},"1798:B":{"contestId":1798,"index":"B","name":"Three Sevens","type":"PROGRAMMING","points":750,"rating":1000,"tags":["brute force","data structures","greedy","implementation"]},"1798:A":{"contestId":1798,"index":"A","name":"Showstopper","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation","sortings"]},"1838:F":{"contestId":1838,"index":"F","name":"Stuck Conveyor","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["binary search","constructive algorithms","interactive"]},"1838:E":{"contestId":1838,"index":"E","name":"Count Supersequences","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["combinatorics","dp","math"]},"1838:D":{"contestId":1838,"index":"D","name":"Bracket Walk","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["data structures","greedy","strings"]},"1838:C":{"contestId":1838,"index":"C","name":"No Prime Differences","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","math","number theory"]},"1838:B":{"contestId":1838,"index":"B","name":"Minimize Permutation Subarrays","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","math"]},"1840:F":{"contestId":1840,"index":"F","name":"Railguns","type":"PROGRAMMING","rating":2200,"tags":["brute force","dfs and similar","dp","graphs"]},"1840:G2":{"contestId":1840,"index":"G2","name":"In Search of Truth (Hard Version)","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","interactive","math","meet-in-the-middle","probabilities"]},"1839:E":{"contestId":1839,"index":"E","name":"Decreasing Game","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["constructive algorithms","dfs and similar","dp","greedy","interactive"]},"1839:D":{"contestId":1839,"index":"D","name":"Ball Sorting","type":"PROGRAMMING","points":2250,"rating":2100,"tags":["data structures","dp","sortings"]},"1839:C":{"contestId":1839,"index":"C","name":"Insert Zero and Invert Prefix","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms"]},"1839:B":{"contestId":1839,"index":"B","name":"Lamps","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["greedy","sortings"]},"1839:A":{"contestId":1839,"index":"A","name":"The Good Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation","math"]},"1808:E3":{"contestId":1808,"index":"E3","name":"Minibuses on Venus (hard version)","type":"PROGRAMMING","points":750,"rating":2800,"tags":["brute force","combinatorics","dp","math"]},"1808:D":{"contestId":1808,"index":"D","name":"Petya, Petya, Petr, and Palindromes","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","brute force","data structures","two pointers"]},"1808:C":{"contestId":1808,"index":"C","name":"Unlucky Numbers","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["brute force","dp","greedy","implementation"]},"1808:B":{"contestId":1808,"index":"B","name":"Playing in a Casino","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["math","sortings"]},"1808:A":{"contestId":1808,"index":"A","name":"Lucky Numbers","type":"PROGRAMMING","points":750,"rating":900,"tags":["brute force","implementation"]},"1808:E2":{"contestId":1808,"index":"E2","name":"Minibuses on Venus (medium version)","type":"PROGRAMMING","points":1000,"rating":2500,"tags":["combinatorics","divide and conquer","dp","matrices"]},"1805:F2":{"contestId":1805,"index":"F2","name":"Survival of the Weakest (hard version)","type":"PROGRAMMING","points":1750,"rating":3100,"tags":["greedy","math","sortings","two pointers"]},"1805:C":{"contestId":1805,"index":"C","name":"Place for a Selfie","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["binary search","data structures","geometry","math"]},"1805:B":{"contestId":1805,"index":"B","name":"The String Has a Target","type":"PROGRAMMING","points":750,"rating":800,"tags":["greedy","strings"]},"1805:A":{"contestId":1805,"index":"A","name":"We Need the Zero","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","brute force"]},"1827:E":{"contestId":1827,"index":"E","name":"Bus Routes","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["binary search","constructive algorithms","dfs and similar","greedy","trees"]},"1827:D":{"contestId":1827,"index":"D","name":"Two Centroids","type":"PROGRAMMING","points":1750,"rating":2800,"tags":["data structures","dfs and similar","greedy","trees"]},"1163:F":{"contestId":1163,"index":"F","name":"Indecisive Taxi Fee","type":"PROGRAMMING","points":3250,"rating":3000,"tags":["data structures","graphs","shortest paths"]},"1830:B":{"contestId":1830,"index":"B","name":"The BOSS Can Count Pairs","type":"PROGRAMMING","points":1000,"rating":2000,"tags":["brute force","math"]},"1830:C":{"contestId":1830,"index":"C","name":"Hyperregular Bracket Strings","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["combinatorics","greedy","hashing","math","number theory","sortings"]},"1830:D":{"contestId":1830,"index":"D","name":"Mex Tree","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["brute force","dp","trees"]},"1830:E":{"contestId":1830,"index":"E","name":"Bully Sort","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["data structures","math"]},"1830:F":{"contestId":1830,"index":"F","name":"The Third Grace","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["data structures","dp"]},"1830:A":{"contestId":1830,"index":"A","name":"Copil Copac Draws Trees","type":"PROGRAMMING","points":500,"rating":1400,"tags":["dfs and similar","dp","graphs","trees"]},"1810:F":{"contestId":1810,"index":"F","name":"M-tree","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","math","sortings","trees"]},"1810:E":{"contestId":1810,"index":"E","name":"Monsters","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["brute force","data structures","dfs and similar","dsu","graphs","greedy"]},"1837:D":{"contestId":1837,"index":"D","name":"Bracket Coloring","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","greedy"]},"1837:B":{"contestId":1837,"index":"B","name":"Comparison String","type":"PROGRAMMING","rating":900,"tags":["greedy"]},"1837:C":{"contestId":1837,"index":"C","name":"Best Binary String","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","greedy"]},"1837:E":{"contestId":1837,"index":"E","name":"Playoff Fixing","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","trees"]},"1837:F":{"contestId":1837,"index":"F","name":"Editorial for Two","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures","greedy","implementation"]},"1837:A":{"contestId":1837,"index":"A","name":"Grasshopper on a Line","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},"1168:D":{"contestId":1168,"index":"D","name":"Anagram Paths","type":"PROGRAMMING","points":2000,"rating":3000,"tags":["dp","implementation","trees"]},"1169:B":{"contestId":1169,"index":"B","name":"Pairs","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["graphs","implementation"]},"1169:A":{"contestId":1169,"index":"A","name":"Circle Metro","type":"PROGRAMMING","points":500,"rating":900,"tags":["implementation","math"]},"1168:A":{"contestId":1168,"index":"A","name":"Increasing by Modulo","type":"PROGRAMMING","points":500,"rating":1700,"tags":["binary search","greedy"]},"1168:B":{"contestId":1168,"index":"B","name":"Good Triple","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["brute force","two pointers"]},"1168:C":{"contestId":1168,"index":"C","name":"And Reachability","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["bitmasks","dp"]},"1168:E":{"contestId":1168,"index":"E","name":"Xor Permutations","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["constructive algorithms","math"]},"1828:B":{"contestId":1828,"index":"B","name":"Permutation Swap","type":"PROGRAMMING","points":1000,"rating":900,"tags":["math","number theory"]},"1827:C":{"contestId":1827,"index":"C","name":"Palindrome Partition","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["binary search","brute force","data structures","dp","hashing","strings"]},"1828:A":{"contestId":1828,"index":"A","name":"Divisible Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"1832:F":{"contestId":1832,"index":"F","name":"Zombies","type":"PROGRAMMING","rating":3200,"tags":["binary search","dp"]},"1832:D2":{"contestId":1832,"index":"D2","name":"Red-Blue Operations (Hard Version)","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","greedy","implementation","math"]},"1832:D1":{"contestId":1832,"index":"D1","name":"Red-Blue Operations (Easy Version)","type":"PROGRAMMING","rating":2100,"tags":["binary search","greedy","implementation","math"]},"1825:A":{"contestId":1825,"index":"A","name":"LuoTianyi and the Palindrome String","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","strings"]},"1825:B":{"contestId":1825,"index":"B","name":"LuoTianyi and the Table","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["greedy","math"]},"1824:D":{"contestId":1824,"index":"D","name":"LuoTianyi and the Function","type":"PROGRAMMING","points":2250,"rating":3000,"tags":["data structures"]},"1466:H":{"contestId":1466,"index":"H","name":"Finding satisfactory solutions","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["combinatorics","dp","graphs","greedy","math"]},"1466:G":{"contestId":1466,"index":"G","name":"Song of the Sirens","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","divide and conquer","hashing","math","string suffix structures","strings"]},"1817:F":{"contestId":1817,"index":"F","name":"Entangled Substrings","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["string suffix structures","strings"]},"1818:B":{"contestId":1818,"index":"B","name":"Indivisible","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms"]},"1818:A":{"contestId":1818,"index":"A","name":"Politics","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1809:G":{"contestId":1809,"index":"G","name":"Prediction","type":"PROGRAMMING","rating":2800,"tags":["combinatorics","dp","math"]},"103743:G":{"contestId":103743,"index":"G","name":"GCD on Bipartite Graph","type":"PROGRAMMING","tags":[]},"103637:D":{"contestId":103637,"index":"D","name":"Dull game","type":"PROGRAMMING","tags":[]},"1821:F":{"contestId":1821,"index":"F","name":"Timber","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","dp","fft","math"]},"1819:D":{"contestId":1819,"index":"D","name":"Misha and Apples","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["brute force","data structures","dp","two pointers"]},"1819:C":{"contestId":1819,"index":"C","name":"The Fox and the Complete Tree Traversal","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["constructive algorithms","dp","implementation","math","trees"]},"1819:F":{"contestId":1819,"index":"F","name":"Willy-nilly, Crack, Into Release!","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["data structures","dp"]},"1819:E":{"contestId":1819,"index":"E","name":"Roads in E City","type":"PROGRAMMING","points":2750,"rating":3200,"tags":["interactive","math","probabilities","trees"]},"1820:A":{"contestId":1820,"index":"A","name":"Yura's New Name","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation","strings"]},"1820:B":{"contestId":1820,"index":"B","name":"JoJo's Incredible Adventures","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["math","strings","two pointers"]},"1815:F":{"contestId":1815,"index":"F","name":"OH NO1 (-2-3-4)","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["constructive algorithms","graphs","math"]},"1816:B":{"contestId":1816,"index":"B","name":"Grid Reconstruction","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","greedy"]},"1816:A":{"contestId":1816,"index":"A","name":"Ian Visits Mary","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","geometry","number theory"]},"1815:D":{"contestId":1815,"index":"D","name":"XOR Counting","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","combinatorics","dp","math"]},"1797:F":{"contestId":1797,"index":"F","name":"Li Hua and Path","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","dfs and similar","divide and conquer","dsu","trees"]},"1797:E":{"contestId":1797,"index":"E","name":"Li Hua and Array","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["brute force","data structures","dsu","math","number theory","two pointers"]},"1814:D":{"contestId":1814,"index":"D","name":"Balancing Weapons","type":"PROGRAMMING","rating":2500,"tags":["binary search","brute force","data structures","math","two pointers"]},"1814:F":{"contestId":1814,"index":"F","name":"Communication Towers","type":"PROGRAMMING","rating":2700,"tags":["brute force","divide and conquer","dsu"]},"1805:F1":{"contestId":1805,"index":"F1","name":"Survival of the Weakest (easy version)","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["binary search","brute force","implementation","math","sortings"]},"1812:I":{"contestId":1812,"index":"I","name":"Mountain Climber","type":"PROGRAMMING","tags":["*special"]},"1812:G":{"contestId":1812,"index":"G","name":"Colour Vision","type":"PROGRAMMING","tags":["*special","implementation"]},"1810:G":{"contestId":1810,"index":"G","name":"The Maximum Prefix","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["dp"]},"1799:H":{"contestId":1799,"index":"H","name":"Tree Cutting","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["bitmasks","dfs and similar","dp"]},"1802:A":{"contestId":1802,"index":"A","name":"Likes","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1802:B":{"contestId":1802,"index":"B","name":"Settlement of Guinea Pigs","type":"PROGRAMMING","points":750,"rating":1000,"tags":["greedy","implementation","math"]},"1800:G":{"contestId":1800,"index":"G","name":"Symmetree","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","hashing","implementation","trees"]},"1789:E":{"contestId":1789,"index":"E","name":"Serval and Music Game","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["brute force","dp","implementation","math","number theory"]},"1785:F":{"contestId":1785,"index":"F","name":"Minimums or Medians","type":"PROGRAMMING","points":4000,"rating":3400,"tags":["combinatorics","two pointers"]},"1793:F":{"contestId":1793,"index":"F","name":"Rebrending","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["brute force","data structures","divide and conquer","implementation"]},"1793:E":{"contestId":1793,"index":"E","name":"Velepin and Marketing","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},"1788:F":{"contestId":1788,"index":"F","name":"XOR, Tree, and Queries","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["bitmasks","constructive algorithms","dfs and similar","dsu","graphs","greedy","implementation","trees"]},"1785:E":{"contestId":1785,"index":"E","name":"Infinite Game","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["bitmasks","brute force","dp","games"]},"1782:G":{"contestId":1782,"index":"G","name":"Diverse Coloring","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["constructive algorithms","dp","greedy","trees"]},"1785:D":{"contestId":1785,"index":"D","name":"Wooden Spoon","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["combinatorics","dp","fft","math"]},"1786:A2":{"contestId":1786,"index":"A2","name":"Alternating Deck (hard version)","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation"]},"1786:A1":{"contestId":1786,"index":"A1","name":"Non-alternating Deck (easy version)","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation"]},"1786:B":{"contestId":1786,"index":"B","name":"Cake Assembly Line","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["brute force","sortings"]},"1534:H":{"contestId":1534,"index":"H","name":"Lost Nodes","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["constructive algorithms","dp","graphs","interactive","sortings","trees"]},"1787:H":{"contestId":1787,"index":"H","name":"Codeforces Scoreboard","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["binary search","data structures","dp","geometry"]},"1614:E":{"contestId":1614,"index":"E","name":"Divan and a Cottage","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["binary search","data structures"]},"1787:I":{"contestId":1787,"index":"I","name":"Treasure Hunt","type":"PROGRAMMING","points":3750,"rating":3400,"tags":["data structures","divide and conquer","two pointers"]},"1787:G":{"contestId":1787,"index":"G","name":"Colorful Tree Again","type":"PROGRAMMING","points":3250,"rating":3000,"tags":["brute force","data structures","trees"]},"1534:G":{"contestId":1534,"index":"G","name":"A New Beginning","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["data structures","dp","geometry","sortings"]},"1534:F2":{"contestId":1534,"index":"F2","name":"Falling Sand (Hard Version)","type":"PROGRAMMING","points":1250,"rating":3000,"tags":["dfs and similar","dp","graphs","greedy"]},"1534:F1":{"contestId":1534,"index":"F1","name":"Falling Sand (Easy Version)","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["dfs and similar","graphs","greedy"]},"1792:B":{"contestId":1792,"index":"B","name":"Stand-up Comedian","type":"PROGRAMMING","rating":1200,"tags":["greedy","math"]},"1458:E":{"contestId":1458,"index":"E","name":"Nim Shortcuts","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["data structures","games"]},"1777:F":{"contestId":1777,"index":"F","name":"Comfortably Numb","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","strings","trees"]},"1777:E":{"contestId":1777,"index":"E","name":"Edge Reverse","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["binary search","dfs and similar","graphs","trees"]},"1781:G":{"contestId":1781,"index":"G","name":"Diverse Coloring","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["constructive algorithms","trees"]},"883:B":{"contestId":883,"index":"B","name":"Berland Army","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms","graphs","greedy"]},"551:B":{"contestId":551,"index":"B","name":"ZgukistringZ","type":"PROGRAMMING","points":1250,"rating":1800,"tags":["brute force","constructive algorithms","implementation","strings"]},"1774:F1":{"contestId":1774,"index":"F1","name":"Magician and Pigs (Easy Version)","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["brute force","data structures","implementation"]},"1697:D":{"contestId":1697,"index":"D","name":"Guess The String","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","interactive"]},"1468:F":{"contestId":1468,"index":"F","name":"Full Turn","type":"PROGRAMMING","rating":1700,"tags":["geometry","hashing","number theory"]},"852:A":{"contestId":852,"index":"A","name":"Digits","type":"PROGRAMMING","rating":2500,"tags":["brute force","implementation","math"]},"954:G":{"contestId":954,"index":"G","name":"Castle Defense","type":"PROGRAMMING","rating":2000,"tags":["binary search","data structures","greedy","two pointers"]},"1004:E":{"contestId":1004,"index":"E","name":"Sonya and Ice Cream","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["binary search","data structures","dp","greedy","shortest paths","trees"]},"903:D":{"contestId":903,"index":"D","name":"Almost Difference","type":"PROGRAMMING","rating":2200,"tags":["data structures","math"]},"1006:B":{"contestId":1006,"index":"B","name":"Polycarp's Practice","type":"PROGRAMMING","rating":1200,"tags":["greedy","implementation","sortings"]},"1029:D":{"contestId":1029,"index":"D","name":"Concatenated Multiples","type":"PROGRAMMING","rating":1900,"tags":["implementation","math"]},"1029:A":{"contestId":1029,"index":"A","name":"Many Equal Substrings","type":"PROGRAMMING","rating":1300,"tags":["implementation","strings"]},"1770:G":{"contestId":1770,"index":"G","name":"Koxia and Bracket","type":"PROGRAMMING","points":3250,"rating":3400,"tags":["divide and conquer","fft","math"]},"351:A":{"contestId":351,"index":"A","name":"Jeff and Rounding","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["dp","greedy","implementation","math"]},"762:A":{"contestId":762,"index":"A","name":"k-th divisor","type":"PROGRAMMING","rating":1400,"tags":["math","number theory"]},"706:D":{"contestId":706,"index":"D","name":"Vasiliy's Multiset","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["binary search","bitmasks","data structures","trees"]},"567:F":{"contestId":567,"index":"F","name":"Mausoleum","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["dp"]},"698:C":{"contestId":698,"index":"C","name":"LRU","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["bitmasks","dp","math","probabilities"]},"1619:G":{"contestId":1619,"index":"G","name":"Unusual Minesweeper","type":"PROGRAMMING","rating":2000,"tags":["binary search","dfs and similar","dsu","greedy","sortings"]},"799:C":{"contestId":799,"index":"C","name":"Fountains","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["binary search","data structures","implementation"]},"1166:D":{"contestId":1166,"index":"D","name":"Cute Sequences","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["binary search","brute force","greedy","math"]},"911:G":{"contestId":911,"index":"G","name":"Mass Change Queries","type":"PROGRAMMING","rating":2500,"tags":["data structures"]},"505:C":{"contestId":505,"index":"C","name":"Mr. Kitayuta, the Treasure Hunter","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["dfs and similar","dp","two pointers"]},"1671:F":{"contestId":1671,"index":"F","name":"Permutation Counting","type":"PROGRAMMING","rating":2700,"tags":["brute force","combinatorics","dp","fft","math"]},"525:D":{"contestId":525,"index":"D","name":"Arthur and Walls","type":"PROGRAMMING","points":3000,"rating":2400,"tags":["constructive algorithms","data structures","graphs","greedy","shortest paths"]},"1767:E":{"contestId":1767,"index":"E","name":"Algebra Flash","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","brute force","dp","graphs","math","meet-in-the-middle","trees"]},"1767:D":{"contestId":1767,"index":"D","name":"Playoff","type":"PROGRAMMING","rating":1500,"tags":["combinatorics","constructive algorithms","dp","greedy","math"]},"1763:D":{"contestId":1763,"index":"D","name":"Valid Bitonic Permutations","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["combinatorics","dp","implementation","math","number theory"]},"1763:E":{"contestId":1763,"index":"E","name":"Node Pairs","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["dp","graphs","math","number theory"]},"1763:C":{"contestId":1763,"index":"C","name":"Another Array Problem","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["brute force","constructive algorithms","greedy"]},"1771:F":{"contestId":1771,"index":"F","name":"Hossam and Range Minimum Query","type":"PROGRAMMING","points":3500,"rating":2500,"tags":["binary search","bitmasks","data structures","hashing","probabilities","strings","trees"]},"1167:E":{"contestId":1167,"index":"E","name":"Range Deleting","type":"PROGRAMMING","rating":2100,"tags":["binary search","combinatorics","data structures","two pointers"]},"1059:B":{"contestId":1059,"index":"B","name":"Forgery","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["implementation"]},"1214:A":{"contestId":1214,"index":"A","name":"Optimal Currency Exchange","type":"PROGRAMMING","points":500,"rating":1400,"tags":["brute force","math"]},"906:B":{"contestId":906,"index":"B","name":"Seating of Students","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["brute force","constructive algorithms","math"]},"837:E":{"contestId":837,"index":"E","name":"Vasya's Function","type":"PROGRAMMING","rating":2100,"tags":["binary search","implementation","math"]},"862:C":{"contestId":862,"index":"C","name":"Mahmoud and Ehab and the xor","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["constructive algorithms"]},"1010:B":{"contestId":1010,"index":"B","name":"Rocket","type":"PROGRAMMING","points":750,"rating":1800,"tags":["binary search","interactive"]},"1061:D":{"contestId":1061,"index":"D","name":"TV Shows","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["data structures","greedy","implementation","sortings"]},"1622:E":{"contestId":1622,"index":"E","name":"Math Test","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","brute force","greedy"]},"1700:E":{"contestId":1700,"index":"E","name":"Serega the Pirate","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["brute force","constructive algorithms"]},"461:D":{"contestId":461,"index":"D","name":"Appleman and Complicated Task","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["dsu","math"]},"1070:L":{"contestId":1070,"index":"L","name":"Odd Federalization","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms"]},"1761:D":{"contestId":1761,"index":"D","name":"Carry Bit","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["combinatorics","math"]},"1098:C":{"contestId":1098,"index":"C","name":"Construct a tree","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},"633:E":{"contestId":633,"index":"E","name":"Startup Funding","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["binary search","constructive algorithms","data structures","probabilities","two pointers"]},"1741:G":{"contestId":1741,"index":"G","name":"Kirill and Company","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","brute force","dfs and similar","dp","flows","graphs","shortest paths"]},"1536:F":{"contestId":1536,"index":"F","name":"Omkar and Akmar","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["chinese remainder theorem","combinatorics","constructive algorithms","fft","games","geometry","math","meet-in-the-middle","string suffix structures"]},"550:E":{"contestId":550,"index":"E","name":"Brackets in Implications","type":"PROGRAMMING","points":3000,"rating":2200,"tags":["constructive algorithms","greedy","implementation","math"]},"837:F":{"contestId":837,"index":"F","name":"Prefix Sums","type":"PROGRAMMING","rating":2400,"tags":["binary search","brute force","combinatorics","math","matrices"]},"1468:J":{"contestId":1468,"index":"J","name":"Road Reform","type":"PROGRAMMING","rating":1800,"tags":["dsu","graphs","greedy"]},"1695:D1":{"contestId":1695,"index":"D1","name":"Tree Queries (Easy Version)","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["brute force","constructive algorithms","dfs and similar","dp","greedy","trees"]},"1748:D":{"contestId":1748,"index":"D","name":"ConstructOR ","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["bitmasks","chinese remainder theorem","combinatorics","constructive algorithms","math","number theory"]},"1748:E":{"contestId":1748,"index":"E","name":"Yet Another Array Counting Problem","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["binary search","data structures","divide and conquer","dp","flows","math","trees"]},"1748:F":{"contestId":1748,"index":"F","name":"Circular Xor Reversal","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["bitmasks","constructive algorithms"]},"109:E":{"contestId":109,"index":"E","name":"Lucky Interval","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["brute force","math"]},"1750:G":{"contestId":1750,"index":"G","name":"Doping","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["combinatorics","dp","math"]},"1251:F":{"contestId":1251,"index":"F","name":"Red-White Fence","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","fft"]},"722:D":{"contestId":722,"index":"D","name":"Generating Sets","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["binary search","data structures","dfs and similar","greedy","strings","trees"]},"1046:I":{"contestId":1046,"index":"I","name":"Say Hello","type":"PROGRAMMING","rating":2300,"tags":["geometry"]},"1204:D2":{"contestId":1204,"index":"D2","name":"Kirk and a Binary String (hard version)","type":"PROGRAMMING","points":750,"rating":2100,"tags":["data structures","greedy","math","strings"]},"1740:F":{"contestId":1740,"index":"F","name":"Conditional Mix","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","dp","math"]},"1238:E":{"contestId":1238,"index":"E","name":"Keyboard Purchase","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","dp"]},"1201:E2":{"contestId":1201,"index":"E2","name":"Knightmare (hard)","type":"PROGRAMMING","points":1000,"rating":3000,"tags":["graphs","interactive","shortest paths"]},"1201:E1":{"contestId":1201,"index":"E1","name":"Knightmare (easy)","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["graphs","interactive","shortest paths"]},"1468:L":{"contestId":1468,"index":"L","name":"Prime Divisors Selection","type":"PROGRAMMING","rating":2700,"tags":["binary search","greedy","math","number theory"]},"793:E":{"contestId":793,"index":"E","name":"Problem of offices","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["constructive algorithms","dfs and similar","dp","trees"]},"103861:H":{"contestId":103861,"index":"H","name":"Check Pattern is Good","type":"PROGRAMMING","tags":[]},"1202:F":{"contestId":1202,"index":"F","name":"You Are Given Some Letters...","type":"PROGRAMMING","rating":2700,"tags":["binary search","implementation","math"]},"57:E":{"contestId":57,"index":"E","name":"Chess","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["math","shortest paths"]},"103994:A":{"contestId":103994,"index":"A","name":"Фальшивая стопка","type":"PROGRAMMING","tags":[]},"1186:E":{"contestId":1186,"index":"E","name":"Vus the Cossack and a Field","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["divide and conquer","implementation","math"]},"1310:F":{"contestId":1310,"index":"F","name":"Bad Cryptography","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["math","number theory"]},"1749:F":{"contestId":1749,"index":"F","name":"Distance to the Path","type":"PROGRAMMING","rating":2800,"tags":["data structures","dfs and similar","trees"]},"1100:F":{"contestId":1100,"index":"F","name":"Ivan and Burgers","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","divide and conquer","greedy","math"]},"1407:E":{"contestId":1407,"index":"E","name":"Egor in the Republic of Dagestan","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","shortest paths"]},"1734:F":{"contestId":1734,"index":"F","name":"Zeros and Ones","type":"PROGRAMMING","points":3250,"rating":2500,"tags":["bitmasks","divide and conquer","dp","math"]},"930:D":{"contestId":930,"index":"D","name":"Game with Tokens","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["data structures","games","implementation"]},"1732:D2":{"contestId":1732,"index":"D2","name":"Balance (Hard version)","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["brute force","data structures","number theory"]},"1732:D1":{"contestId":1732,"index":"D1","name":"Balance (Easy version)","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["brute force","data structures","implementation","number theory"]},"1732:C2":{"contestId":1732,"index":"C2","name":"Sheikh (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2100,"tags":["binary search","bitmasks","brute force","greedy","implementation","two pointers"]},"1732:C1":{"contestId":1732,"index":"C1","name":"Sheikh (Easy version)","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["binary search","bitmasks","greedy","two pointers"]},"1667:E":{"contestId":1667,"index":"E","name":"Centroid Probabilities","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["combinatorics","dp","fft","math"]},"1744:F":{"contestId":1744,"index":"F","name":"MEX vs MED","type":"PROGRAMMING","rating":2000,"tags":["math","two pointers"]},"1744:E2":{"contestId":1744,"index":"E2","name":"Divisible Numbers (hard version)","type":"PROGRAMMING","rating":1900,"tags":["brute force","math","number theory"]},"1574:F":{"contestId":1574,"index":"F","name":"Occurrences","type":"PROGRAMMING","rating":2700,"tags":["combinatorics","dfs and similar","dp","dsu","fft","graphs"]},"1396:E":{"contestId":1396,"index":"E","name":"Distance Matching","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["constructive algorithms","dfs and similar","trees"]},"852:C":{"contestId":852,"index":"C","name":"Property","type":"PROGRAMMING","rating":2100,"tags":["greedy","sortings"]},"1612:G":{"contestId":1612,"index":"G","name":"Max Sum Array","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","constructive algorithms","greedy","sortings"]},"1735:E":{"contestId":1735,"index":"E","name":"House Planning","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["constructive algorithms","data structures","graph matchings","greedy"]},"20:C":{"contestId":20,"index":"C","name":"Dijkstra?","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["graphs","shortest paths"]},"856:C":{"contestId":856,"index":"C","name":"Eleventh Birthday","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dp","math"]},"622:E":{"contestId":622,"index":"E","name":"Ants in Leaves","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","greedy","sortings","trees"]},"1188:A2":{"contestId":1188,"index":"A2","name":"Add on a Tree: Revolution","type":"PROGRAMMING","points":750,"rating":2500,"tags":["constructive algorithms","dfs and similar","implementation","trees"]},"1272:F":{"contestId":1272,"index":"F","name":"Two Bracket Sequences","type":"PROGRAMMING","rating":2200,"tags":["dp","strings","two pointers"]},"1495:D":{"contestId":1495,"index":"D","name":"BFS Trees","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["combinatorics","dfs and similar","graphs","math","shortest paths","trees"]},"1131:F":{"contestId":1131,"index":"F","name":"Asya And Kittens","type":"PROGRAMMING","points":3000,"rating":1700,"tags":["constructive algorithms","dsu"]},"1119:H":{"contestId":1119,"index":"H","name":"Triple","type":"PROGRAMMING","points":3750,"rating":3200,"tags":["fft","math"]},"1119:G":{"contestId":1119,"index":"G","name":"Get Ready for the Battle","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["constructive algorithms","implementation"]},"1119:F":{"contestId":1119,"index":"F","name":"Niyaz and Small Degrees","type":"PROGRAMMING","points":3250,"rating":3400,"tags":["data structures","dp","trees"]},"1119:E":{"contestId":1119,"index":"E","name":"Pavel and Triangles","type":"PROGRAMMING","points":2500,"rating":1900,"tags":["brute force","dp","fft","greedy","ternary search"]},"1119:D":{"contestId":1119,"index":"D","name":"Frets On Fire","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["binary search","sortings"]},"1119:C":{"contestId":1119,"index":"C","name":"Ramesses and Corner Inversion","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["constructive algorithms","greedy","implementation","math"]},"1119:B":{"contestId":1119,"index":"B","name":"Alyona and a Narrow Fridge","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["binary search","flows","greedy","sortings"]},"1119:A":{"contestId":1119,"index":"A","name":"Ilya and a Colorful Walk","type":"PROGRAMMING","points":500,"rating":1100,"tags":["greedy","implementation"]},"990:G":{"contestId":990,"index":"G","name":"GCD Counting","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","dsu","number theory","trees"]},"1716:B":{"contestId":1716,"index":"B","name":"Permutation Chain","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},"1716:A":{"contestId":1716,"index":"A","name":"2-3 Moves","type":"PROGRAMMING","rating":800,"tags":["greedy","math"]},"1704:E":{"contestId":1704,"index":"E","name":"Count Seconds","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["brute force","constructive algorithms","dp","graphs","implementation","math"]},"1704:D":{"contestId":1704,"index":"D","name":"Magical Array","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["constructive algorithms","hashing","implementation","math"]},"1704:B":{"contestId":1704,"index":"B","name":"Luke is a Foodie","type":"PROGRAMMING","points":750,"rating":1000,"tags":["brute force","greedy","implementation"]},"1704:C":{"contestId":1704,"index":"C","name":"Virus","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["greedy","implementation","sortings"]},"865:E":{"contestId":865,"index":"E","name":"Hex Dyslexia","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["bitmasks","brute force","dp","graphs"]},"568:B":{"contestId":568,"index":"B","name":"Symmetric and Transitive","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["combinatorics","dp","math"]},"1710:C":{"contestId":1710,"index":"C","name":"XOR Triangle","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["bitmasks","brute force","constructive algorithms","dp","greedy","math"]},"1710:B":{"contestId":1710,"index":"B","name":"Rain","type":"PROGRAMMING","points":1000,"rating":2100,"tags":["binary search","brute force","data structures","geometry","greedy","implementation","math"]},"1710:A":{"contestId":1710,"index":"A","name":"Color the Picture","type":"PROGRAMMING","points":500,"rating":1500,"tags":["constructive algorithms","greedy","math"]},"101242:A":{"contestId":101242,"index":"A","name":"Balanced Diet","type":"PROGRAMMING","tags":[]},"280:C":{"contestId":280,"index":"C","name":"Game on Tree","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["implementation","math","probabilities","trees"]},"1407:A":{"contestId":1407,"index":"A","name":"Ahahahahahahahaha","type":"PROGRAMMING","points":500,"rating":1100,"tags":["constructive algorithms","math"]},"101221:G":{"contestId":101221,"index":"G","name":"Metal Processing Plant","type":"PROGRAMMING","tags":[]},"101242:K":{"contestId":101242,"index":"K","name":"String Theory","type":"PROGRAMMING","tags":[]},"101239:L":{"contestId":101239,"index":"L","name":"Weather Report","type":"PROGRAMMING","tags":[]},"101221:I":{"contestId":101221,"index":"I","name":"Sensor Network","type":"PROGRAMMING","tags":[]},"1407:B":{"contestId":1407,"index":"B","name":"Big Vova","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["brute force","greedy","math","number theory"]},"914:H":{"contestId":914,"index":"H","name":"Ember and Storm's Tree Game","type":"PROGRAMMING","points":3750,"rating":3400,"tags":["combinatorics","dp","games","trees"]},"1305:F":{"contestId":1305,"index":"F","name":"Kuroni and the Punishment","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["math","number theory","probabilities"]},"627:F":{"contestId":627,"index":"F","name":"Island Puzzle","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["dfs and similar","dsu","graphs","trees"]},"101142:I":{"contestId":101142,"index":"I","name":"Integral Polygons","type":"PROGRAMMING","tags":[]},"1193:B":{"contestId":1193,"index":"B","name":"Magic Tree","type":"PROGRAMMING","tags":["*special","data structures","dp","trees"]},"101239:E":{"contestId":101239,"index":"E","name":"Evolution in Parallel","type":"PROGRAMMING","tags":[]},"101612:E":{"contestId":101612,"index":"E","name":"Equal Numbers","type":"PROGRAMMING","tags":[]},"1407:D":{"contestId":1407,"index":"D","name":"Discrete Centrifugal Jumps","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["data structures","dp","graphs"]},"1407:C":{"contestId":1407,"index":"C","name":"Chocolate Bunny","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["constructive algorithms","interactive","math","two pointers"]},"101612:C":{"contestId":101612,"index":"C","name":"Consonant Fencity","type":"PROGRAMMING","tags":[]},"1257:F":{"contestId":1257,"index":"F","name":"Make Them Similar","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","brute force","hashing","meet-in-the-middle"]},"1526:D":{"contestId":1526,"index":"D","name":"Kill Anton","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["brute force","constructive algorithms","data structures","math","strings"]},"1687:E":{"contestId":1687,"index":"E","name":"Become Big For Me","type":"PROGRAMMING","points":2000,"rating":3500,"tags":["combinatorics","constructive algorithms","greedy","math","number theory"]},"1264:E":{"contestId":1264,"index":"E","name":"Beautiful League","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["constructive algorithms","flows","graph matchings"]},"1526:F":{"contestId":1526,"index":"F","name":"Median Queries","type":"PROGRAMMING","points":3500,"rating":3000,"tags":["constructive algorithms","interactive","probabilities"]},"1292:E":{"contestId":1292,"index":"E","name":"Rin and The Unknown Flower","type":"PROGRAMMING","points":2250,"rating":3500,"tags":["constructive algorithms","greedy","interactive","math"]},"804:E":{"contestId":804,"index":"E","name":"The same permutation ","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["constructive algorithms"]},"1268:D":{"contestId":1268,"index":"D","name":"Invertation in Tournament","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["brute force","divide and conquer","graphs","math"]},"1477:D":{"contestId":1477,"index":"D","name":"Nezzar and Hidden Permutations","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["constructive algorithms","dfs and similar","graphs"]},"1033:G":{"contestId":1033,"index":"G","name":"Chip Game","type":"PROGRAMMING","points":4000,"rating":3500,"tags":["games"]},"1442:F":{"contestId":1442,"index":"F","name":"Differentiating Games","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["games","interactive"]},"1464:F":{"contestId":1464,"index":"F","name":"My Beautiful Madness","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["data structures","trees"]},"1286:E":{"contestId":1286,"index":"E","name":"Fedya the Potter Strikes Back","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["data structures","strings"]},"1696:F":{"contestId":1696,"index":"F","name":"Tree Recovery","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","trees"]},"1696:E":{"contestId":1696,"index":"E","name":"Placing Jinas","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["combinatorics","math"]},"1696:D":{"contestId":1696,"index":"D","name":"Permutation Graph","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["binary search","constructive algorithms","data structures","divide and conquer","greedy","shortest paths"]},"1696:C":{"contestId":1696,"index":"C","name":"Fishingprince Plays With Array","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","greedy","implementation","math"]},"1696:B":{"contestId":1696,"index":"B","name":"NIT Destroys the Universe","type":"PROGRAMMING","points":1000,"rating":900,"tags":["greedy"]},"1696:A":{"contestId":1696,"index":"A","name":"NIT orz!","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","greedy"]},"101190:I":{"contestId":101190,"index":"I","name":"Indiana Jones and the Uniform Cave","type":"PROGRAMMING","tags":[]},"1129:E":{"contestId":1129,"index":"E","name":"Legendary Tree","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["binary search","interactive","trees"]},"1012:F":{"contestId":1012,"index":"F","name":"Passports","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["dp","implementation"]},"549:E":{"contestId":549,"index":"E","name":"Sasha Circle","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["geometry","math"]},"1666:E":{"contestId":1666,"index":"E","name":"Even Split","type":"PROGRAMMING","rating":2500,"tags":["binary search","constructive algorithms","greedy","math"]},"1666:D":{"contestId":1666,"index":"D","name":"Deletive Editing","type":"PROGRAMMING","rating":900,"tags":["greedy"]},"1666:F":{"contestId":1666,"index":"F","name":"Fancy Stack","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","dp","implementation"]},"1019:E":{"contestId":1019,"index":"E","name":"Raining season","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["data structures","divide and conquer","trees"]},"896:E":{"contestId":896,"index":"E","name":"Welcome home, Chtholly","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["data structures","dsu"]},"920:B":{"contestId":920,"index":"B","name":"Tea Queue","type":"PROGRAMMING","rating":1200,"tags":["implementation"]},"920:F":{"contestId":920,"index":"F","name":"SUM and REPLACE","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dsu","number theory"]},"920:G":{"contestId":920,"index":"G","name":"List Of Integers","type":"PROGRAMMING","rating":2200,"tags":["binary search","bitmasks","brute force","combinatorics","math","number theory"]},"920:A":{"contestId":920,"index":"A","name":"Water The Garden","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"920:C":{"contestId":920,"index":"C","name":"Swap Adjacent Elements","type":"PROGRAMMING","rating":1400,"tags":["dfs and similar","greedy","math","sortings","two pointers"]},"920:D":{"contestId":920,"index":"D","name":"Tanks","type":"PROGRAMMING","rating":2400,"tags":["dp","greedy","implementation"]},"920:E":{"contestId":920,"index":"E","name":"Connected Components?","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs"]},"1229:E2":{"contestId":1229,"index":"E2","name":"Marek and Matching (hard version)","type":"PROGRAMMING","points":1250,"rating":3200,"tags":["brute force","probabilities"]},"1229:E1":{"contestId":1229,"index":"E1","name":"Marek and Matching (easy version)","type":"PROGRAMMING","points":1500,"rating":3100,"tags":["brute force","probabilities"]},"1229:D":{"contestId":1229,"index":"D","name":"Wojtek and Card Tricks","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["math"]},"1775:C":{"contestId":1775,"index":"C","name":"Interesting Sequence","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["bitmasks","math"]},"1775:B":{"contestId":1775,"index":"B","name":"Gardener and the Array","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["bitmasks","constructive algorithms"]},"1775:A2":{"contestId":1775,"index":"A2","name":"Gardener and the Capybaras (hard version)","type":"PROGRAMMING","points":500,"rating":900,"tags":["constructive algorithms","greedy"]},"1775:A1":{"contestId":1775,"index":"A1","name":"Gardener and the Capybaras (easy version)","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","constructive algorithms","implementation"]},"1782:F":{"contestId":1782,"index":"F","name":"Bracket Insertion","type":"PROGRAMMING","points":3250,"rating":2700,"tags":["combinatorics","dp","probabilities","trees"]},"104065:E":{"contestId":104065,"index":"E","name":"Hammer to Fall","type":"PROGRAMMING","tags":[]},"1705:F":{"contestId":1705,"index":"F","name":"Mark and the Online Exam","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["bitmasks","constructive algorithms","interactive","probabilities"]},"104076:B":{"contestId":104076,"index":"B","name":"Torch","type":"PROGRAMMING","tags":[]},"1746:F":{"contestId":1746,"index":"F","name":"Kazaee","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","hashing","probabilities"]},"103470:I":{"contestId":103470,"index":"I","name":"Cloud Retainer's Game","type":"PROGRAMMING","tags":[]},"1764:G3":{"contestId":1764,"index":"G3","name":"Doremy's Perfect DS Class (Hard Version)","type":"PROGRAMMING","points":500,"rating":3300,"tags":["binary search","interactive"]},"1704:F":{"contestId":1704,"index":"F","name":"Colouring Game","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["constructive algorithms","dp","games"]},"1750:F":{"contestId":1750,"index":"F","name":"Majority","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["combinatorics","dp","math","strings"]},"103470:B":{"contestId":103470,"index":"B","name":"Puzzle in Inazuma","type":"PROGRAMMING","tags":[]},"1083:F":{"contestId":1083,"index":"F","name":"The Fair Nut and Amusing Xor","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["data structures"]},"721:E":{"contestId":721,"index":"E","name":"Road to Home","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["binary search","dp"]},"1239:F":{"contestId":1239,"index":"F","name":"Swiper, no swiping!","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["graphs","implementation"]},"643:C":{"contestId":643,"index":"C","name":"Levels and Regions","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["dp"]},"627:D":{"contestId":627,"index":"D","name":"Preorder Test","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["binary search","dfs and similar","dp","graphs","greedy","trees"]},"623:B":{"contestId":623,"index":"B","name":"Array GCD","type":"PROGRAMMING","points":1000,"rating":2300,"tags":["dp","greedy","number theory"]},"617:E":{"contestId":617,"index":"E","name":"XOR and Favorite Number","type":"PROGRAMMING","points":2750,"rating":2200,"tags":["data structures"]},"724:G":{"contestId":724,"index":"G","name":"Xor-matic Number of the Graph","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","graphs","math","number theory","trees"]},"650:C":{"contestId":650,"index":"C","name":"Table Compression","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["dfs and similar","dp","dsu","graphs","greedy"]},"643:E":{"contestId":643,"index":"E","name":"Bear and Destroying Subtrees","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["dp","math","probabilities","trees"]},"785:D":{"contestId":785,"index":"D","name":"Anton and School - 2","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","dp","math","number theory"]},"749:E":{"contestId":749,"index":"E","name":"Inversions After Shuffle","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["data structures","probabilities"]},"734:E":{"contestId":734,"index":"E","name":"Anton and Tree","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["dfs and similar","dp","trees"]},"819:E":{"contestId":819,"index":"E","name":"Mister B and Flight to the Moon","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["constructive algorithms","graphs"]},"817:F":{"contestId":817,"index":"F","name":"MEX Queries","type":"PROGRAMMING","rating":2300,"tags":["binary search","data structures","trees"]},"808:G":{"contestId":808,"index":"G","name":"Anthem of Berland","type":"PROGRAMMING","rating":2300,"tags":["dp","strings"]},"788:E":{"contestId":788,"index":"E","name":"New task","type":"PROGRAMMING","points":2250,"rating":2900,"tags":["data structures"]},"840:D":{"contestId":840,"index":"D","name":"Destiny","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["data structures","probabilities"]},"840:C":{"contestId":840,"index":"C","name":"On the Bench","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["combinatorics","dp"]},"833:B":{"contestId":833,"index":"B","name":"The Bakery","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["binary search","data structures","divide and conquer","dp","two pointers"]},"1770:H":{"contestId":1770,"index":"H","name":"Koxia, Mahiru and Winter Festival","type":"PROGRAMMING","points":4000,"rating":3500,"tags":["constructive algorithms"]},"1770:F":{"contestId":1770,"index":"F","name":"Koxia and Sequence","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["bitmasks","combinatorics","dp","math","number theory"]},"1770:E":{"contestId":1770,"index":"E","name":"Koxia and Tree","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["combinatorics","dfs and similar","dp","dsu","math","probabilities","trees"]},"1770:D":{"contestId":1770,"index":"D","name":"Koxia and Game","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["constructive algorithms","data structures","dfs and similar","dsu","flows","games","graph matchings","graphs","implementation"]},"1770:C":{"contestId":1770,"index":"C","name":"Koxia and Number Theory","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["brute force","chinese remainder theorem","math","number theory"]},"1770:B":{"contestId":1770,"index":"B","name":"Koxia and Permutation","type":"PROGRAMMING","points":750,"rating":1000,"tags":["constructive algorithms"]},"1770:A":{"contestId":1770,"index":"A","name":"Koxia and Whiteboards","type":"PROGRAMMING","points":500,"rating":1000,"tags":["brute force","greedy"]},"1774:H":{"contestId":1774,"index":"H","name":"Maximum Permutation","type":"PROGRAMMING","points":4000,"rating":3500,"tags":["constructive algorithms"]},"1774:F2":{"contestId":1774,"index":"F2","name":"Magician and Pigs (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2700,"tags":["binary search","brute force","data structures","implementation"]},"1774:D":{"contestId":1774,"index":"D","name":"Same Count One","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["brute force","constructive algorithms","greedy","implementation","two pointers"]},"1774:E":{"contestId":1774,"index":"E","name":"Two Chess Pieces","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["dfs and similar","dp","greedy","trees"]},"1774:C":{"contestId":1774,"index":"C","name":"Ice and Fire","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms","dp","greedy"]},"1774:B":{"contestId":1774,"index":"B","name":"Coloring","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["constructive algorithms","greedy","math"]},"1774:A":{"contestId":1774,"index":"A","name":"Add Plus Minus Sign","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"886:E":{"contestId":886,"index":"E","name":"Maximum Element","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["combinatorics","dp","math"]},"863:F":{"contestId":863,"index":"F","name":"Almost Permutation","type":"PROGRAMMING","rating":2200,"tags":["flows"]},"906:D":{"contestId":906,"index":"D","name":"Power Tower","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["chinese remainder theorem","math","number theory"]},"893:F":{"contestId":893,"index":"F","name":"Subtree Minimum Query","type":"PROGRAMMING","rating":2300,"tags":["data structures","trees"]},"894:E":{"contestId":894,"index":"E","name":"Ralph and Mushrooms","type":"PROGRAMMING","points":2500,"rating":2100,"tags":["dp","graphs"]},"908:G":{"contestId":908,"index":"G","name":"New Year and Original Order","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["dp","math"]},"908:D":{"contestId":908,"index":"D","name":"New Year and Arbitrary Arrangement","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["dp","math","probabilities"]},"1534:E":{"contestId":1534,"index":"E","name":"Lost Array","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["graphs","greedy","interactive","shortest paths"]},"1580:B":{"contestId":1580,"index":"B","name":"Mathematics Curriculum","type":"PROGRAMMING","points":1000,"rating":2600,"tags":["brute force","combinatorics","dp","trees"]},"1313:D":{"contestId":1313,"index":"D","name":"Happy New Year","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["bitmasks","dp","implementation"]},"1491:H":{"contestId":1491,"index":"H","name":"Yuezheng Ling and Dynamic Tree","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["data structures","trees"]},"241:B":{"contestId":241,"index":"B","name":"Friends","type":"PROGRAMMING","rating":2700,"tags":["binary search","bitmasks","data structures","math"]},"25:E":{"contestId":25,"index":"E","name":"Test","type":"PROGRAMMING","rating":2200,"tags":["hashing","strings"]},"1764:G1":{"contestId":1764,"index":"G1","name":"Doremy's Perfect DS Class (Easy Version)","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["binary search","interactive"]},"1764:H":{"contestId":1764,"index":"H","name":"Doremy's Paint 2","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["data structures"]},"1764:G2":{"contestId":1764,"index":"G2","name":"Doremy's Perfect DS Class (Medium Version)","type":"PROGRAMMING","points":500,"rating":3000,"tags":["binary search","interactive"]},"1764:F":{"contestId":1764,"index":"F","name":"Doremy's Experimental Tree","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","sortings","trees"]},"1764:A":{"contestId":1764,"index":"A","name":"Doremy's Paint","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy"]},"1764:B":{"contestId":1764,"index":"B","name":"Doremy's Perfect Math Class","type":"PROGRAMMING","points":1000,"rating":900,"tags":["math","number theory"]},"1764:C":{"contestId":1764,"index":"C","name":"Doremy's City Construction","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["graphs","greedy"]},"1764:D":{"contestId":1764,"index":"D","name":"Doremy's Pegging Game","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["combinatorics","dp","math"]},"1764:E":{"contestId":1764,"index":"E","name":"Doremy's Number Line","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["dp","greedy","sortings"]},"1761:G":{"contestId":1761,"index":"G","name":"Centroid Guess","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["interactive","probabilities","trees"]},"1761:F2":{"contestId":1761,"index":"F2","name":"Anti-median (Hard Version)","type":"PROGRAMMING","points":2000,"rating":3500,"tags":["combinatorics","dp","math"]},"1761:F1":{"contestId":1761,"index":"F1","name":"Anti-median (Easy Version)","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["dp","math"]},"1761:E":{"contestId":1761,"index":"E","name":"Make It Connected","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["binary search","brute force","constructive algorithms","dsu","graphs","greedy","matrices","trees","two pointers"]},"1761:C":{"contestId":1761,"index":"C","name":"Set Construction","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},"1761:B":{"contestId":1761,"index":"B","name":"Elimination of a Ring","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","greedy","implementation"]},"1761:A":{"contestId":1761,"index":"A","name":"Two Permutations","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","constructive algorithms"]},"963:E":{"contestId":963,"index":"E","name":"Circles of Waiting","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["math"]},"865:C":{"contestId":865,"index":"C","name":"Gotta Go Fast","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["binary search","dp"]},"1151:F":{"contestId":1151,"index":"F","name":"Sonya and Informatics","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["combinatorics","dp","matrices","probabilities"]},"123:E":{"contestId":123,"index":"E","name":"Maze","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["dfs and similar","dp","probabilities","trees"]},"398:B":{"contestId":398,"index":"B","name":"Painting The Wall","type":"PROGRAMMING","points":1000,"tags":["dp","probabilities"]},"1540:B":{"contestId":1540,"index":"B","name":"Tree Array","type":"PROGRAMMING","points":1250,"rating":2300,"tags":["brute force","combinatorics","dp","graphs","math","probabilities","trees"]},"605:E":{"contestId":605,"index":"E","name":"Intergalaxy Trips","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["probabilities","shortest paths"]},"1750:H":{"contestId":1750,"index":"H","name":"BinaryStringForces","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["constructive algorithms","data structures","dp"]},"1750:E":{"contestId":1750,"index":"E","name":"Bracket Cost","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["binary search","data structures","divide and conquer","dp","greedy","strings"]},"1750:D":{"contestId":1750,"index":"D","name":"Count GCD","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["combinatorics","math","number theory"]},"1750:C":{"contestId":1750,"index":"C","name":"Complementary XOR","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","implementation"]},"1750:B":{"contestId":1750,"index":"B","name":"Maximum Substring","type":"PROGRAMMING","points":750,"rating":800,"tags":["brute force","greedy","implementation"]},"1750:A":{"contestId":1750,"index":"A","name":"Indirect Sort","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","implementation","math"]},"1654:E":{"contestId":1654,"index":"E","name":"Arithmetic Operations","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["brute force","data structures","graphs","math"]},"1654:D":{"contestId":1654,"index":"D","name":"Potion Brewing Class","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["dfs and similar","math","number theory","trees"]},"1654:C":{"contestId":1654,"index":"C","name":"Alice and the Cake","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["data structures","greedy","implementation","sortings"]},"1654:B":{"contestId":1654,"index":"B","name":"Prefix Removals","type":"PROGRAMMING","points":750,"rating":800,"tags":["strings"]},"1654:A":{"contestId":1654,"index":"A","name":"Maximum Cake Tastiness","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","implementation","sortings"]},"1654:G":{"contestId":1654,"index":"G","name":"Snowy Mountain","type":"PROGRAMMING","points":3500,"rating":2900,"tags":["data structures","dfs and similar","graphs","greedy","shortest paths","trees"]},"93:E":{"contestId":93,"index":"E","name":"Lostborn","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["dp","math","number theory"]},"1371:F":{"contestId":1371,"index":"F","name":"Raging Thunder","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["data structures","divide and conquer","implementation"]},"425:E":{"contestId":425,"index":"E","name":"Sereja and Sets","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["dp"]},"898:F":{"contestId":898,"index":"F","name":"Restoring the Expression","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["brute force","hashing","math"]},"1866:G":{"contestId":1866,"index":"G","name":"Grouped Carriages","type":"PROGRAMMING","rating":2100,"tags":["binary search","data structures","dp","flows","greedy"]},"1866:E":{"contestId":1866,"index":"E","name":"Elevators of Tamem","type":"PROGRAMMING","rating":2700,"tags":["dp"]},"1866:K":{"contestId":1866,"index":"K","name":"Keen Tree Calculation","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","dp","geometry","graphs","implementation","trees"]},"1866:I":{"contestId":1866,"index":"I","name":"Imagination Castle","type":"PROGRAMMING","rating":2300,"tags":["dp","games","two pointers"]},"1866:L":{"contestId":1866,"index":"L","name":"Lihmuf Balling","type":"PROGRAMMING","rating":2400,"tags":["binary search","brute force","math"]},"1866:J":{"contestId":1866,"index":"J","name":"Jackets and Packets","type":"PROGRAMMING","rating":2800,"tags":["dp"]},"1866:M":{"contestId":1866,"index":"M","name":"Mighty Rock Tower","type":"PROGRAMMING","rating":2400,"tags":["brute force","combinatorics","dp","math","probabilities"]},"1863:F":{"contestId":1863,"index":"F","name":"Divide, XOR, and Conquer","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","dp","math"]},"1866:F":{"contestId":1866,"index":"F","name":"Freak Joker Process","type":"PROGRAMMING","rating":3100,"tags":["binary search","data structures","sortings"]},"1866:D":{"contestId":1866,"index":"D","name":"Digital Wallet","type":"PROGRAMMING","rating":2300,"tags":["dp","greedy"]},"416:E":{"contestId":416,"index":"E","name":"President's Path","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["dp","graphs","shortest paths"]},"1331:D":{"contestId":1331,"index":"D","name":"Again?","type":"PROGRAMMING","tags":["*special","implementation"]},"727:A":{"contestId":727,"index":"A","name":"Transformation: from A to B","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["brute force","dfs and similar","math"]},"1081:G":{"contestId":1081,"index":"G","name":"Mergesort Strikes Back","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["math","probabilities"]},"1672:G":{"contestId":1672,"index":"G","name":"Cross Xor","type":"PROGRAMMING","points":2750,"rating":3200,"tags":["constructive algorithms","graphs","math","matrices"]},"360:E":{"contestId":360,"index":"E","name":"Levko and Game","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["graphs","greedy","shortest paths"]},"1394:D":{"contestId":1394,"index":"D","name":"Boboniu and Jianghu","type":"PROGRAMMING","points":1750,"rating":2800,"tags":["dp","greedy","sortings","trees"]},"830:E":{"contestId":830,"index":"E","name":"Perpetual Motion Machine","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["constructive algorithms","dp","graphs","implementation","math","trees"]},"1175:G":{"contestId":1175,"index":"G","name":"Yet Another Partiton Problem","type":"PROGRAMMING","rating":3000,"tags":["data structures","divide and conquer","dp","geometry","two pointers"]},"1158:F":{"contestId":1158,"index":"F","name":"Density of subarrays","type":"PROGRAMMING","points":2750,"rating":3500,"tags":["dp","math"]},"1250:D":{"contestId":1250,"index":"D","name":"Conference Problem","type":"PROGRAMMING","rating":3000,"tags":["dp"]},"1556:G":{"contestId":1556,"index":"G","name":"Gates to Another World","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["bitmasks","data structures","dsu","two pointers"]},"566:E":{"contestId":566,"index":"E","name":"Restoring Map","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["bitmasks","constructive algorithms","trees"]},"925:E":{"contestId":925,"index":"E","name":"May Holidays","type":"PROGRAMMING","points":2750,"rating":2900,"tags":["data structures","trees"]},"1316:E":{"contestId":1316,"index":"E","name":"Team Building","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["bitmasks","dp","greedy","sortings"]},"1681:E":{"contestId":1681,"index":"E","name":"Labyrinth Adventures","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","matrices","shortest paths"]},"1774:G":{"contestId":1774,"index":"G","name":"Segment Covering","type":"PROGRAMMING","points":3250,"rating":3200,"tags":["brute force","combinatorics","constructive algorithms","data structures","dp","trees"]},"1835:D":{"contestId":1835,"index":"D","name":"Doctor's Brown Hypothesis","type":"PROGRAMMING","points":1750,"rating":2900,"tags":["dfs and similar","graphs","math","number theory"]},"1835:B":{"contestId":1835,"index":"B","name":"Lottery","type":"PROGRAMMING","points":1250,"rating":2500,"tags":["binary search","brute force","greedy","math","two pointers"]},"755:G":{"contestId":755,"index":"G","name":"PolandBall and Many Other Balls","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["combinatorics","divide and conquer","dp","fft","math","number theory"]},"438:E":{"contestId":438,"index":"E","name":"The Child and Binary Tree","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["combinatorics","divide and conquer","fft","number theory"]},"163:E":{"contestId":163,"index":"E","name":"e-Government","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","dfs and similar","dp","strings","trees"]},"1511:G":{"contestId":1511,"index":"G","name":"Chips on a Board","type":"PROGRAMMING","rating":2700,"tags":["bitmasks","brute force","data structures","dp","games","two pointers"]},"1583:F":{"contestId":1583,"index":"F","name":"Defender of Childhood Dreams","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["bitmasks","constructive algorithms","divide and conquer"]},"1228:E":{"contestId":1228,"index":"E","name":"Another Filling the Grid","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","dp","math"]},"1156:E":{"contestId":1156,"index":"E","name":"Special Segments of Permutation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dsu","two pointers"]},"213:E":{"contestId":213,"index":"E","name":"Two Permutations","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["data structures","hashing","strings"]},"1322:C":{"contestId":1322,"index":"C","name":"Instant Noodles","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["graphs","hashing","math","number theory"]},"1693:D":{"contestId":1693,"index":"D","name":"Decinc Dividing","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["brute force","data structures","divide and conquer","dp","greedy"]},"1815:B":{"contestId":1815,"index":"B","name":"Sum Graph","type":"PROGRAMMING","points":1250,"rating":2000,"tags":["brute force","constructive algorithms","graphs","implementation","interactive","shortest paths","trees"]},"538:H":{"contestId":538,"index":"H","name":"Summer Dichotomy","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["2-sat","data structures","dfs and similar","greedy"]},"1500:C":{"contestId":1500,"index":"C","name":"Matrix Sorting","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["bitmasks","brute force","constructive algorithms","greedy","two pointers"]},"1572:B":{"contestId":1572,"index":"B","name":"Xor of 3","type":"PROGRAMMING","points":1250,"rating":2500,"tags":["brute force","constructive algorithms","greedy","two pointers"]},"1780:F":{"contestId":1780,"index":"F","name":"Three Chairs","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["bitmasks","brute force","combinatorics","data structures","dp","number theory","sortings"]},"103451:B":{"contestId":103451,"index":"B","name":"Sum of sums","type":"PROGRAMMING","tags":[]},"1588:B":{"contestId":1588,"index":"B","name":"Guess the Permutation","type":"PROGRAMMING","points":1000,"rating":2000,"tags":["binary search","combinatorics","implementation","interactive"]},"1495:B":{"contestId":1495,"index":"B","name":"Let's Go Hiking","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["games","greedy"]},"1783:G":{"contestId":1783,"index":"G","name":"Weighed Tree Radius","type":"PROGRAMMING","rating":2800,"tags":["data structures","divide and conquer","implementation","trees"]},"1548:A":{"contestId":1548,"index":"A","name":"Web of Lies","type":"PROGRAMMING","points":500,"rating":1400,"tags":["brute force","graphs","greedy"]},"860:D":{"contestId":860,"index":"D","name":"Wizard's Tour","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["dfs and similar","graphs","greedy"]},"1508:B":{"contestId":1508,"index":"B","name":"Almost Sorted","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["binary search","combinatorics","constructive algorithms","implementation"]},"1685:C":{"contestId":1685,"index":"C","name":"Bring Balance","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["brute force","constructive algorithms","greedy"]},"1290:C":{"contestId":1290,"index":"C","name":"Prefix Enlightenment","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["dfs and similar","dsu","graphs"]},"954:H":{"contestId":954,"index":"H","name":"Path Counting","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","dp"]},"1763:A":{"contestId":1763,"index":"A","name":"Absolute Maximization","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","constructive algorithms","greedy","math"]},"1763:B":{"contestId":1763,"index":"B","name":"Incinerate","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["binary search","brute force","data structures","implementation","math","sortings"]},"845:E":{"contestId":845,"index":"E","name":"Fire in the City","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures"]},"1073:F":{"contestId":1073,"index":"F","name":"Choosing Two Paths","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","dp","greedy","trees"]},"104023:F":{"contestId":104023,"index":"F","name":"Mooncake Delivery","type":"PROGRAMMING","tags":[]},"1379:F2":{"contestId":1379,"index":"F2","name":"Chess Strikes Back (hard version)","type":"PROGRAMMING","points":1500,"rating":2800,"tags":["data structures","divide and conquer"]},"1000:G":{"contestId":1000,"index":"G","name":"Two-Paths","type":"PROGRAMMING","rating":2700,"tags":["data structures","dp","trees"]},"908:F":{"contestId":908,"index":"F","name":"New Year and Rainbow Roads","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["graphs","greedy","implementation"]},"962:E":{"contestId":962,"index":"E","name":"Byteland, Berland and Disputed Cities","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy"]},"1455:G":{"contestId":1455,"index":"G","name":"Forbidden Value","type":"PROGRAMMING","rating":2900,"tags":["data structures","dp"]},"612:F":{"contestId":612,"index":"F","name":"Simba on the Circle","type":"PROGRAMMING","rating":2600,"tags":["dp"]},"1340:D":{"contestId":1340,"index":"D","name":"Nastya and Time Machine","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},"860:E":{"contestId":860,"index":"E","name":"Arkady and a Nobody-men","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["data structures","dfs and similar","trees"]},"1104:B":{"contestId":1104,"index":"B","name":"Game with string","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["data structures","implementation","math"]},"963:D":{"contestId":963,"index":"D","name":"Frequency of String","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["hashing","string suffix structures","strings"]},"1731:F":{"contestId":1731,"index":"F","name":"Function Sum","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["brute force","combinatorics","dp","fft","math"]},"1334:F":{"contestId":1334,"index":"F","name":"Strange Function","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","dp","greedy"]},"1766:E":{"contestId":1766,"index":"E","name":"Decomposition","type":"PROGRAMMING","rating":2300,"tags":["binary search","brute force","data structures","divide and conquer","dp","two pointers"]},"1766:D":{"contestId":1766,"index":"D","name":"Lucky Chains","type":"PROGRAMMING","rating":1600,"tags":["math","number theory"]},"1766:C":{"contestId":1766,"index":"C","name":"Hamiltonian Wall","type":"PROGRAMMING","rating":1300,"tags":["dp","implementation"]},"1766:B":{"contestId":1766,"index":"B","name":"Notepad#","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"1766:A":{"contestId":1766,"index":"A","name":"Extremely Round","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation"]},"797:F":{"contestId":797,"index":"F","name":"Mice and Holes","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","greedy","sortings"]},"1327:G":{"contestId":1327,"index":"G","name":"Letters and Question Marks","type":"PROGRAMMING","rating":2800,"tags":["bitmasks","dp","string suffix structures"]},"710:F":{"contestId":710,"index":"F","name":"String Set Queries","type":"PROGRAMMING","rating":2400,"tags":["brute force","data structures","hashing","interactive","string suffix structures","strings"]},"1763:F":{"contestId":1763,"index":"F","name":"Edge Queries","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","dfs and similar","dp","dsu","graphs","trees"]},"911:F":{"contestId":911,"index":"F","name":"Tree Destruction","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},"961:F":{"contestId":961,"index":"F","name":"k-substrings","type":"PROGRAMMING","rating":2700,"tags":["binary search","hashing","string suffix structures"]},"976:F":{"contestId":976,"index":"F","name":"Minimal k-covering","type":"PROGRAMMING","rating":2500,"tags":["flows","graphs"]},"1772:G":{"contestId":1772,"index":"G","name":"Gaining Rating","type":"PROGRAMMING","rating":2200,"tags":["binary search","greedy","implementation","math","sortings","two pointers"]},"1535:F":{"contestId":1535,"index":"F","name":"String Distance","type":"PROGRAMMING","rating":3000,"tags":["binary search","brute force","data structures","hashing","implementation","strings"]},"1380:G":{"contestId":1380,"index":"G","name":"Circular Dungeon","type":"PROGRAMMING","rating":2600,"tags":["greedy","math","probabilities"]},"845:F":{"contestId":845,"index":"F","name":"Guards In The Storehouse","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","dp"]},"1622:F":{"contestId":1622,"index":"F","name":"Quadratic Set","type":"PROGRAMMING","rating":2900,"tags":["constructive algorithms","hashing","math","number theory"]},"665:F":{"contestId":665,"index":"F","name":"Four Divisors","type":"PROGRAMMING","rating":2400,"tags":["data structures","dp","math","number theory","sortings","two pointers"]},"1194:G":{"contestId":1194,"index":"G","name":"Another Meme Problem","type":"PROGRAMMING","rating":2700,"tags":["dp"]},"1194:F":{"contestId":1194,"index":"F","name":"Crossword Expert","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dp","number theory","probabilities","two pointers"]},"1187:G":{"contestId":1187,"index":"G","name":"Gang Up","type":"PROGRAMMING","rating":2500,"tags":["flows","graphs"]},"102916:C":{"contestId":102916,"index":"C","name":"Cyclically Shifted Maze","type":"PROGRAMMING","tags":[]},"1739:C":{"contestId":1739,"index":"C","name":"Card Game","type":"PROGRAMMING","rating":1500,"tags":["combinatorics","constructive algorithms","dp","games"]},"1739:B":{"contestId":1739,"index":"B","name":"Array Recovery","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","greedy","math"]},"1739:A":{"contestId":1739,"index":"A","name":"Immobile Knight","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1739:D":{"contestId":1739,"index":"D","name":"Reset K Edges","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","dfs and similar","graphs","greedy","trees"]},"1739:F":{"contestId":1739,"index":"F","name":"Keyboard Design","type":"PROGRAMMING","rating":2600,"tags":["bitmasks","data structures","dp","string suffix structures","strings"]},"1740:E":{"contestId":1740,"index":"E","name":"Hanging Hearts","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["constructive algorithms","data structures","dfs and similar","dp","greedy","trees"]},"1740:D":{"contestId":1740,"index":"D","name":"Knowledge Cards","type":"PROGRAMMING","points":1750,"rating":1500,"tags":["constructive algorithms","data structures"]},"1740:C":{"contestId":1740,"index":"C","name":"Bricks and Bags","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","games","greedy","sortings"]},"1740:B":{"contestId":1740,"index":"B","name":"Jumbo Extra Cheese 2","type":"PROGRAMMING","points":1000,"rating":800,"tags":["geometry","greedy","sortings"]},"1740:A":{"contestId":1740,"index":"A","name":"Factorise N+M","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","number theory"]},"103990:E":{"contestId":103990,"index":"E","name":"Etched Emerald Orbs","type":"PROGRAMMING","tags":[]},"103990:H":{"contestId":103990,"index":"H","name":"Heximal","type":"PROGRAMMING","tags":[]},"102576:K":{"contestId":102576,"index":"K","name":"To argue, or not to argue","type":"PROGRAMMING","tags":[]},"1749:E":{"contestId":1749,"index":"E","name":"Cactus Wall","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},"1741:A":{"contestId":1741,"index":"A","name":"Compare T-Shirt Sizes","type":"PROGRAMMING","rating":800,"tags":["implementation","implementation","strings"]},"1741:B":{"contestId":1741,"index":"B","name":"Funny Permutation","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},"1741:C":{"contestId":1741,"index":"C","name":"Minimize the Thickness","type":"PROGRAMMING","rating":1100,"tags":["brute force","greedy","math","two pointers"]},"1741:D":{"contestId":1741,"index":"D","name":"Masha and a Beautiful Tree","type":"PROGRAMMING","rating":1300,"tags":["dfs and similar","divide and conquer","graphs","sortings","trees"]},"1741:E":{"contestId":1741,"index":"E","name":"Sending a Sequence Over the Network","type":"PROGRAMMING","rating":1600,"tags":["dp"]},"1741:F":{"contestId":1741,"index":"F","name":"Multi-Colored Segments","type":"PROGRAMMING","rating":2000,"tags":["binary search","data structures","math","sortings"]},"1404:E":{"contestId":1404,"index":"E","name":"Bricks","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["flows","graph matchings","graphs"]},"1307:G":{"contestId":1307,"index":"G","name":"Cow and Exercise","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["flows","graphs","shortest paths"]},"1737:F":{"contestId":1737,"index":"F","name":"Ela and Prime GCD","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["constructive algorithms","math","number theory"]},"1737:E":{"contestId":1737,"index":"E","name":"Ela Goes Hiking","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["combinatorics","dp","math","probabilities"]},"1737:C":{"contestId":1737,"index":"C","name":"Ela and Crickets","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["constructive algorithms","games","implementation","math"]},"1737:B":{"contestId":1737,"index":"B","name":"Ela's Fitness and the Luxury Number","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["binary search","implementation","math"]},"1737:A":{"contestId":1737,"index":"A","name":"Ela Sorting Books","type":"PROGRAMMING","points":500,"rating":900,"tags":["greedy","implementation","strings"]},"1737:D":{"contestId":1737,"index":"D","name":"Ela and the Wiring Wizard","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["brute force","dp","graphs","greedy","implementation","shortest paths"]},"1195:F":{"contestId":1195,"index":"F","name":"Geometers Anonymous Club","type":"PROGRAMMING","points":3500,"rating":2500,"tags":["data structures","geometry","math","sortings"]},"582:E":{"contestId":582,"index":"E","name":"Boolean Function","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["bitmasks","dp","expression parsing"]},"101161:J":{"contestId":101161,"index":"J","name":"Printing Press","type":"PROGRAMMING","tags":[]},"103861:D":{"contestId":103861,"index":"D","name":"Two Walls","type":"PROGRAMMING","tags":[]},"585:E":{"contestId":585,"index":"E","name":"Present for Vitalik the Philatelist ","type":"PROGRAMMING","points":2250,"rating":2900,"tags":["combinatorics","math","number theory"]},"100257:E":{"contestId":100257,"index":"E","name":"Edges Are Too Sharp!","type":"PROGRAMMING","tags":[]}},"problemFreq":{"436:F":9,"1332:G":7,"960:H":7,"643:G":8,"1270:I":1,"704:E":2,"914:E":2,"1270:H":2,"1270:G":9,"1270:F":14,"1270:E":1,"1270:D":1,"1017:G":4,"432:D":1,"1726:E":2,"1344:E":7,"718:E":2,"1608:G":1,"986:E":10,"1721:D":1,"1721:E":1,"1721:C":1,"1721:B":1,"1721:A":1,"1721:F":10,"1043:G":1,"936:E":1,"1718:D":2,"1718:C":2,"1718:B":1,"1718:A2":1,"1718:A1":1,"1175:F":5,"1628:E":7,"1608:F":4,"1704:A":2,"526:D":1,"1707:D":14,"1707:C":4,"1707:A":1,"1707:B":1,"1654:F":11,"662:C":19,"150:E":2,"1446:D2":2,"1446:D1":10,"603:E":2,"464:E":2,"997:E":2,"526:F":2,"639:F":1,"103:E":4,"1603:C":7,"1073:G":17,"1209:F":10,"601:E":7,"1437:F":10,"712:E":10,"822:E":9,"1139:E":9,"191:D":9,"1684:C":1,"1684:B":1,"1684:D":1,"1684:E":1,"1684:F":10,"1684:G":9,"1684:A":1,"1806:E":1,"1844:G":9,"436:E":1,"1804:G":8,"321:D":7,"1019:C":9,"1870:E":1,"1870:G":9,"364:D":7,"1458:D":11,"1868:D":9,"1868:B1":1,"1868:C":1,"1868:B2":1,"1868:A":1,"11:E":4,"48:G":2,"101:E":1,"1863:D":2,"1863:E":2,"1863:C":2,"1863:A":2,"1863:B":2,"1864:A":2,"1864:B":2,"1864:D":2,"1864:C":2,"1863:G":11,"1864:E":2,"1864:F":2,"1864:H":18,"1864:G":20,"1716:F":11,"1716:E":11,"1709:D":1,"1709:E":1,"487:E":9,"1361:E":10,"1716:C":3,"1716:D":3,"1267:I":2,"1709:F":1,"1849:F":4,"1854:A1":1,"1854:A2":1,"1854:D":10,"1854:E":20,"1854:C":1,"1854:B":1,"1849:A":1,"1849:C":2,"1849:B":1,"1514:E":7,"685:D":4,"1709:C":1,"1709:B":1,"1709:A":1,"1036:G":7,"1153:F":4,"480:D":4,"848:C":13,"269:D":4,"83:E":9,"144:E":1,"1844:F2":9,"1844:E":1,"1844:D":1,"1844:C":1,"1844:B":1,"1735:D":2,"232:D":10,"1361:C":2,"1735:C":1,"1735:B":1,"1735:A":1,"1735:F":10,"1658:A":1,"1104:A":1,"1657:A":1,"1651:B":1,"814:E":4,"555:E":9,"1736:D":1,"1736:C2":1,"1736:E":4,"1736:C1":1,"1736:B":1,"1736:A":1,"1290:E":4,"1845:D":1,"1845:E":2,"1845:F":9,"855:E":1,"42:C":1,"538:E":1,"1674:E":1,"671:E":4,"568:D":9,"1621:H":1,"1842:G":9,"500:G":7,"117:E":10,"576:E":4,"1442:E":10,"351:D":7,"311:D":4,"140:F":4,"1842:E":1,"1842:H":10,"1539:F":4,"690:F2":7,"756:D":1,"359:E":1,"1768:D":1,"1768:E":1,"1768:F":10,"1768:A":1,"51:F":9,"336:E":7,"1778:A":1,"1778:E":2,"1778:F":4,"1795:B":1,"1795:C":1,"1795:D":1,"1795:A":1,"1789:C":1,"1789:D":1,"1789:B":1,"1789:A":1,"1789:F":14,"1796:F":10,"1796:D":1,"1796:C":1,"1796:B":1,"1796:A":1,"1794:B":1,"1794:A":1,"1794:E":2,"1804:H":13,"1801:G":6,"1810:H":17,"1841:E":1,"1841:D":1,"1841:C":1,"1841:B":1,"1801:F":14,"1801:E":20,"1801:D":2,"1801:B":1,"1801:A":1,"1811:G2":1,"1804:F":11,"1804:E":2,"1804:D":1,"1804:C":1,"1806:F1":17,"1806:D":3,"1806:C":1,"1806:B":1,"1806:A":1,"1806:F2":17,"888:G":1,"1822:G2":1,"1798:F":2,"1798:E":1,"1798:D":1,"1798:C":1,"1798:B":1,"1798:A":1,"1838:F":10,"1838:E":2,"1838:D":1,"1838:C":1,"1838:B":1,"1840:F":1,"1840:G2":2,"1839:E":1,"1839:D":1,"1839:C":1,"1839:B":1,"1839:A":1,"1808:E3":9,"1808:D":1,"1808:C":1,"1808:B":1,"1808:A":1,"1808:E2":2,"1805:F2":19,"1805:C":1,"1805:B":1,"1805:A":1,"1827:E":2,"1827:D":9,"1163:F":10,"1830:B":1,"1830:C":1,"1830:D":9,"1830:E":1,"1830:F":7,"1830:A":1,"1810:F":9,"1810:E":2,"1837:D":1,"1837:B":1,"1837:C":1,"1837:E":2,"1837:F":1,"1837:A":1,"1168:D":2,"1169:B":1,"1169:A":1,"1168:A":1,"1168:B":1,"1168:C":1,"1168:E":4,"1828:B":1,"1827:C":1,"1828:A":1,"1832:F":7,"1832:D2":1,"1832:D1":1,"1825:A":1,"1825:B":1,"1824:D":2,"1466:H":9,"1466:G":5,"1817:F":10,"1818:B":1,"1818:A":1,"1809:G":4,"103743:G":1,"103637:D":1,"1821:F":5,"1819:D":4,"1819:C":1,"1819:F":4,"1819:E":10,"1820:A":1,"1820:B":1,"1815:F":4,"1816:B":1,"1816:A":1,"1815:D":1,"1797:F":10,"1797:E":1,"1814:D":1,"1814:F":4,"1805:F1":2,"1812:I":1,"1812:G":1,"1810:G":9,"1799:H":9,"1802:A":1,"1802:B":1,"1800:G":1,"1789:E":2,"1785:F":2,"1793:F":4,"1793:E":4,"1788:F":2,"1785:E":9,"1782:G":7,"1785:D":1,"1786:A2":1,"1786:A1":1,"1786:B":1,"1534:H":1,"1787:H":4,"1614:E":4,"1787:I":2,"1787:G":10,"1534:G":4,"1534:F2":10,"1534:F1":2,"1792:B":1,"1458:E":10,"1777:F":1,"1777:E":1,"1781:G":9,"883:B":1,"551:B":1,"1774:F1":5,"1697:D":1,"1468:F":1,"852:A":1,"954:G":1,"1004:E":1,"903:D":1,"1006:B":1,"1029:D":1,"1029:A":1,"1770:G":8,"351:A":1,"762:A":1,"706:D":1,"567:F":1,"698:C":1,"1619:G":1,"799:C":1,"1166:D":1,"911:G":1,"505:C":1,"1671:F":4,"525:D":1,"1767:E":1,"1767:D":2,"1763:D":2,"1763:E":2,"1763:C":2,"1771:F":1,"1167:E":1,"1059:B":1,"1214:A":1,"906:B":1,"837:E":1,"862:C":1,"1010:B":1,"1061:D":1,"1622:E":1,"1700:E":4,"461:D":9,"1070:L":4,"1761:D":3,"1098:C":1,"633:E":1,"1741:G":1,"1536:F":1,"550:E":1,"837:F":1,"1468:J":1,"1695:D1":1,"1748:D":1,"1748:E":2,"1748:F":9,"109:E":2,"1750:G":11,"1251:F":1,"722:D":1,"1046:I":1,"1204:D2":1,"1740:F":11,"1238:E":1,"1201:E2":7,"1201:E1":4,"1468:L":1,"793:E":4,"103861:H":2,"1202:F":1,"57:E":7,"103994:A":1,"1186:E":1,"1310:F":9,"1749:F":2,"1100:F":1,"1407:E":1,"1734:F":1,"930:D":1,"1732:D2":1,"1732:D1":1,"1732:C2":1,"1732:C1":1,"1667:E":10,"1744:F":1,"1744:E2":2,"1574:F":2,"1396:E":9,"852:C":1,"1612:G":1,"1735:E":1,"20:C":1,"856:C":1,"622:E":2,"1188:A2":1,"1272:F":1,"1495:D":2,"1131:F":1,"1119:H":1,"1119:G":1,"1119:F":1,"1119:E":1,"1119:D":1,"1119:C":1,"1119:B":1,"1119:A":1,"990:G":10,"1716:B":1,"1716:A":1,"1704:E":7,"1704:D":1,"1704:B":1,"1704:C":1,"865:E":1,"568:B":2,"1710:C":9,"1710:B":7,"1710:A":1,"101242:A":1,"280:C":9,"1407:A":1,"101221:G":1,"101242:K":1,"101239:L":1,"101221:I":1,"1407:B":1,"914:H":1,"1305:F":9,"627:F":1,"101142:I":1,"1193:B":1,"101239:E":1,"101612:E":1,"1407:D":9,"1407:C":1,"101612:C":1,"1257:F":10,"1526:D":9,"1687:E":1,"1264:E":4,"1526:F":1,"1292:E":1,"804:E":1,"1268:D":1,"1477:D":2,"1033:G":1,"1442:F":1,"1464:F":1,"1286:E":1,"1696:F":7,"1696:E":4,"1696:D":2,"1696:C":1,"1696:B":1,"1696:A":1,"101190:I":1,"1129:E":1,"1012:F":1,"549:E":1,"1666:E":2,"1666:D":1,"1666:F":9,"1019:E":1,"896:E":1,"920:B":1,"920:F":10,"920:G":9,"920:A":1,"920:C":1,"920:D":4,"920:E":10,"1229:E2":2,"1229:E1":4,"1229:D":10,"1775:C":1,"1775:B":1,"1775:A2":1,"1775:A1":1,"1782:F":10,"104065:E":1,"1705:F":10,"104076:B":1,"1746:F":19,"103470:I":1,"1764:G3":2,"1704:F":7,"1750:F":9,"103470:B":1,"1083:F":2,"721:E":9,"1239:F":1,"643:C":2,"627:D":7,"623:B":1,"617:E":1,"724:G":7,"650:C":1,"643:E":9,"785:D":1,"749:E":2,"734:E":1,"819:E":10,"817:F":1,"808:G":1,"788:E":10,"840:D":7,"840:C":7,"833:B":1,"1770:H":1,"1770:F":4,"1770:E":4,"1770:D":1,"1770:C":1,"1770:B":1,"1770:A":1,"1774:H":1,"1774:F2":10,"1774:D":1,"1774:E":1,"1774:C":1,"1774:B":1,"1774:A":1,"886:E":4,"863:F":1,"906:D":10,"893:F":2,"894:E":1,"908:G":10,"908:D":1,"1534:E":2,"1580:B":9,"1313:D":7,"1491:H":1,"241:B":10,"25:E":1,"1764:G1":19,"1764:H":1,"1764:G2":7,"1764:F":7,"1764:A":1,"1764:B":1,"1764:C":1,"1764:D":1,"1764:E":4,"1761:G":1,"1761:F2":1,"1761:F1":1,"1761:E":9,"1761:C":1,"1761:B":1,"1761:A":1,"963:E":1,"865:C":9,"1151:F":7,"123:E":10,"398:B":1,"1540:B":7,"605:E":9,"1750:H":1,"1750:E":9,"1750:D":1,"1750:C":1,"1750:B":1,"1750:A":1,"1654:E":9,"1654:D":4,"1654:C":1,"1654:B":1,"1654:A":1,"1654:G":2,"93:E":9,"1371:F":4,"425:E":10,"898:F":1,"1866:G":1,"1866:E":4,"1866:K":1,"1866:I":1,"1866:L":1,"1866:J":7,"1866:M":1,"1863:F":2,"1866:F":10,"1866:D":1,"416:E":1,"1331:D":1,"727:A":1,"1081:G":7,"1672:G":7,"360:E":9,"1394:D":9,"830:E":9,"1175:G":10,"1158:F":1,"1250:D":10,"1556:G":2,"566:E":4,"925:E":10,"1316:E":1,"1681:E":7,"1774:G":4,"1835:D":10,"1835:B":4,"755:G":7,"438:E":9,"163:E":9,"1511:G":7,"1583:F":2,"1228:E":1,"1156:E":1,"213:E":7,"1322:C":1,"1693:D":9,"1815:B":1,"538:H":7,"1500:C":4,"1572:B":2,"1780:F":1,"103451:B":1,"1588:B":1,"1495:B":1,"1783:G":10,"1548:A":1,"860:D":2,"1508:B":1,"1685:C":9,"1290:C":4,"954:H":7,"1763:A":1,"1763:B":1,"845:E":4,"1073:F":7,"104023:F":1,"1379:F2":10,"1000:G":10,"908:F":4,"962:E":1,"1455:G":9,"612:F":9,"1340:D":9,"860:E":10,"1104:B":1,"963:D":4,"1731:F":4,"1334:F":4,"1766:E":1,"1766:D":1,"1766:C":1,"1766:B":1,"1766:A":1,"797:F":7,"1327:G":10,"710:F":2,"1763:F":9,"911:F":2,"961:F":9,"976:F":4,"1772:G":1,"1535:F":9,"1380:G":7,"845:F":4,"1622:F":10,"665:F":2,"1194:G":9,"1194:F":2,"1187:G":4,"102916:C":1,"1739:C":1,"1739:B":1,"1739:A":1,"1739:D":1,"1739:F":10,"1740:E":1,"1740:D":1,"1740:C":1,"1740:B":1,"1740:A":1,"103990:E":1,"103990:H":1,"102576:K":1,"1749:E":7,"1741:A":1,"1741:B":1,"1741:C":1,"1741:D":1,"1741:E":1,"1741:F":1,"1404:E":9,"1307:G":2,"1737:F":1,"1737:E":9,"1737:C":1,"1737:B":1,"1737:A":1,"1737:D":2,"1195:F":9,"582:E":4,"101161:J":1,"103861:D":1,"585:E":7,"100257:E":1},"skippedUsers":[{"country":"China","lastOnlineTimeSeconds":1695733037,"city":"Shanghai","rating":2812,"friendOfCount":21,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"20333333333","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"","rank":"international grandmaster","maxRating":2812,"registrationTimeSeconds":1615703773,"maxRank":"international grandmaster"},{"country":"Japan","lastOnlineTimeSeconds":1695694814,"city":"Tokyo","rating":3125,"friendOfCount":746,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"maspy","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"","rank":"legendary grandmaster","maxRating":3163,"registrationTimeSeconds":1621878251,"maxRank":"legendary grandmaster"},{"lastName":"Korotkevich","country":"Belarus","lastOnlineTimeSeconds":1695745703,"city":"Gomel","rating":3751,"friendOfCount":58730,"titlePhoto":"https://userpic.codeforces.org/422/title/50a270ed4a722867.jpg","handle":"tourist","avatar":"https://userpic.codeforces.org/422/avatar/2b5dbe87f0d859a2.jpg","firstName":"Gennady","contribution":0,"organization":"ITMO University","rank":"legendary grandmaster","maxRating":3979,"registrationTimeSeconds":1265987288,"maxRank":"legendary grandmaster"},{"lastName":"Kaviani","country":"Iran","lastOnlineTimeSeconds":1695748007,"city":"Tehran","rating":2811,"friendOfCount":702,"titlePhoto":"https://userpic.codeforces.org/638924/title/68826f92daccbefa.jpg","handle":"alireza_kaviani","avatar":"https://userpic.codeforces.org/638924/avatar/a1e0f95db56a4015.jpg","firstName":"Alireza","contribution":0,"organization":"Allame Helli","rank":"international grandmaster","maxRating":2898,"registrationTimeSeconds":1508494021,"maxRank":"international grandmaster"},{"country":"Japan","lastOnlineTimeSeconds":1695500942,"rating":3085,"friendOfCount":774,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"heno239","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"Kyoto University","rank":"legendary grandmaster","maxRating":3385,"registrationTimeSeconds":1522850054,"maxRank":"legendary grandmaster"},{"lastName":"Esin","country":"Russia","lastOnlineTimeSeconds":1695693000,"city":"Sochi","rating":2936,"friendOfCount":615,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"Vercingetorix","avatar":"https://userpic.codeforces.org/no-avatar.jpg","firstName":"Aleksei","contribution":0,"organization":"","rank":"international grandmaster","maxRating":3213,"registrationTimeSeconds":1396696219,"email":"imbard7@gmail.com","maxRank":"legendary grandmaster"},{"lastName":"Jiang","country":"China","lastOnlineTimeSeconds":1695693759,"city":"Chongqing","rating":3632,"friendOfCount":19012,"titlePhoto":"https://userpic.codeforces.org/887306/title/6bdbf0688dc4dc03.jpg","handle":"jiangly","avatar":"https://userpic.codeforces.org/887306/avatar/af00ced3c14f5ba7.jpg","firstName":"Lingyu","contribution":0,"organization":"Jiangly Fan Club","rank":"legendary grandmaster","maxRating":3859,"registrationTimeSeconds":1547985852,"maxRank":"legendary grandmaster"},{"lastName":"Op de Beek","country":"Netherlands","lastOnlineTimeSeconds":1695741495,"city":"Delft","rating":2771,"friendOfCount":364,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"jeroenodb","avatar":"https://userpic.codeforces.org/no-avatar.jpg","firstName":"Jeroen","contribution":0,"organization":"Delft University of Technology","rank":"international grandmaster","maxRating":2844,"registrationTimeSeconds":1589797475,"maxRank":"international grandmaster"},{"lastName":"Romashov","country":"Russia","lastOnlineTimeSeconds":1695638818,"city":"Barnaul","vkId":"259250989","rating":3261,"friendOfCount":1209,"titlePhoto":"https://userpic.codeforces.org/1250517/title/d3b47822f3860824.jpg","handle":"Ormlis","avatar":"https://userpic.codeforces.org/1250517/avatar/5b32008c179f4f98.jpg","firstName":"Fedor","contribution":0,"organization":"Higher School of Economics","rank":"legendary grandmaster","maxRating":3410,"registrationTimeSeconds":1568806149,"email":"rom.fedor@bk.ru","maxRank":"legendary grandmaster"}]}