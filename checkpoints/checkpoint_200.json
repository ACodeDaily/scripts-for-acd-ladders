{"problemMap":{"436:F":{"contestId":436,"index":"F","name":"Banners","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["brute force","data structures","dp"]},"1332:G":{"contestId":1332,"index":"G","name":"No Monotone Triples","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["data structures"]},"960:H":{"contestId":960,"index":"H","name":"Santa's Gift","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["data structures","trees"]},"643:G":{"contestId":643,"index":"G","name":"Choosing Ads","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["data structures"]},"1270:I":{"contestId":1270,"index":"I","name":"Xor on Figures","type":"PROGRAMMING","points":4500,"rating":3500,"tags":["constructive algorithms","fft","math"]},"704:E":{"contestId":704,"index":"E","name":"Iron Man","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["data structures","geometry","trees"]},"914:E":{"contestId":914,"index":"E","name":"Palindromes in a Tree","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","trees"]},"1270:H":{"contestId":1270,"index":"H","name":"Number of Components","type":"PROGRAMMING","points":4000,"rating":3300,"tags":["data structures"]},"1270:G":{"contestId":1270,"index":"G","name":"Subset with Zero Sum","type":"PROGRAMMING","points":3750,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs","math"]},"1270:F":{"contestId":1270,"index":"F","name":"Awesome Substrings","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["math","strings"]},"1270:E":{"contestId":1270,"index":"E","name":"Divide Points","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["constructive algorithms","geometry","math"]},"1270:D":{"contestId":1270,"index":"D","name":"Strange Device","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","interactive","math","sortings"]},"1017:G":{"contestId":1017,"index":"G","name":"The Tree","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["data structures"]},"432:D":{"contestId":432,"index":"D","name":"Prefixes and Suffixes","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["dp","string suffix structures","strings","two pointers"]},"1726:E":{"contestId":1726,"index":"E","name":"Almost Perfect","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["combinatorics","fft","math"]},"1344:E":{"contestId":1344,"index":"E","name":"Train Tracks","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["data structures","trees"]},"718:E":{"contestId":718,"index":"E","name":"Matvey's Birthday","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["bitmasks","graphs"]},"1608:G":{"contestId":1608,"index":"G","name":"Alphabetic Tree","type":"PROGRAMMING","points":2750,"rating":3500,"tags":["binary search","data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},"986:E":{"contestId":986,"index":"E","name":"Prince's Problem","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["brute force","data structures","math","number theory","trees"]},"1721:D":{"contestId":1721,"index":"D","name":"Maximum AND","type":"PROGRAMMING","rating":1800,"tags":["bitmasks","dfs and similar","divide and conquer","greedy","sortings"]},"1721:E":{"contestId":1721,"index":"E","name":"Prefix Function Queries","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","dp","hashing","string suffix structures","strings","trees"]},"1721:C":{"contestId":1721,"index":"C","name":"Min-Max Array Transformation","type":"PROGRAMMING","rating":1400,"tags":["binary search","greedy","two pointers"]},"1721:B":{"contestId":1721,"index":"B","name":"Deadly Laser","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"1721:A":{"contestId":1721,"index":"A","name":"Image","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation"]},"1721:F":{"contestId":1721,"index":"F","name":"Matching Reduction","type":"PROGRAMMING","rating":2800,"tags":["brute force","constructive algorithms","dfs and similar","flows","graph matchings","graphs","interactive"]},"1043:G":{"contestId":1043,"index":"G","name":"Speckled Band","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["data structures","divide and conquer","hashing","string suffix structures","strings"]},"936:E":{"contestId":936,"index":"E","name":"Iqea","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},"1718:D":{"contestId":1718,"index":"D","name":"Permutation for Burenka","type":"PROGRAMMING","points":2250,"rating":3300,"tags":["data structures","graph matchings","greedy","math","trees"]},"1718:C":{"contestId":1718,"index":"C","name":"Tonya and Burenka-179","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["data structures","greedy","math","number theory"]},"1718:B":{"contestId":1718,"index":"B","name":"Fibonacci Strings","type":"PROGRAMMING","points":1250,"rating":2000,"tags":["greedy","implementation","math","number theory"]},"1718:A2":{"contestId":1718,"index":"A2","name":"Burenka and Traditions (hard version)","type":"PROGRAMMING","points":500,"rating":1900,"tags":["data structures","dp","greedy"]},"1718:A1":{"contestId":1718,"index":"A1","name":"Burenka and Traditions (easy version)","type":"PROGRAMMING","points":500,"rating":1800,"tags":["dp","greedy"]},"1175:F":{"contestId":1175,"index":"F","name":"The Number of Subpermutations","type":"PROGRAMMING","rating":2500,"tags":["brute force","data structures","divide and conquer","hashing","math"]},"1628:E":{"contestId":1628,"index":"E","name":"Groceries in Meteor Town","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["binary search","data structures","dsu","trees"]},"1608:F":{"contestId":1608,"index":"F","name":"MEX counting","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["combinatorics","dp","implementation"]},"1704:A":{"contestId":1704,"index":"A","name":"Two 0-1 Sequences","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy"]},"526:D":{"contestId":526,"index":"D","name":"Om Nom and Necklace","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["hashing","string suffix structures","strings"]},"1707:D":{"contestId":1707,"index":"D","name":"Partial Virtual Trees","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["combinatorics","dfs and similar","dp","math","trees"]},"1707:C":{"contestId":1707,"index":"C","name":"DFS Trees","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["dfs and similar","dsu","graphs","greedy","sortings","trees"]},"1707:A":{"contestId":1707,"index":"A","name":"Doremy's IQ","type":"PROGRAMMING","points":500,"rating":1600,"tags":["binary search","constructive algorithms","greedy","implementation"]},"1707:B":{"contestId":1707,"index":"B","name":"Difference Array","type":"PROGRAMMING","points":750,"rating":1900,"tags":["brute force","data structures","implementation","sortings"]},"1654:F":{"contestId":1654,"index":"F","name":"Minimal String Xoration","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["bitmasks","data structures","divide and conquer","greedy","hashing","sortings","strings"]},"662:C":{"contestId":662,"index":"C","name":"Binary Table","type":"PROGRAMMING","points":2250,"rating":2600,"tags":["bitmasks","brute force","divide and conquer","dp","fft","math"]},"150:E":{"contestId":150,"index":"E","name":"Freezing with Style","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["binary search","data structures","divide and conquer","trees"]},"1446:D2":{"contestId":1446,"index":"D2","name":"Frequency Problem (Hard Version)","type":"PROGRAMMING","points":750,"rating":3000,"tags":["data structures","greedy","two pointers"]},"1446:D1":{"contestId":1446,"index":"D1","name":"Frequency Problem (Easy Version)","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["data structures","greedy"]},"603:E":{"contestId":603,"index":"E","name":"Pastoral Oddities","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","divide and conquer","dsu","math","trees"]},"464:E":{"contestId":464,"index":"E","name":"The Classic Problem","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["data structures","graphs","shortest paths"]},"997:E":{"contestId":997,"index":"E","name":"Good Subsegments","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures"]},"526:F":{"contestId":526,"index":"F","name":"Pudding Monsters","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","divide and conquer"]},"639:F":{"contestId":639,"index":"F","name":"Bear and Chemistry","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["data structures","dfs and similar","graphs","trees"]},"103:E":{"contestId":103,"index":"E","name":"Buying Sets","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["flows","graph matchings"]},"1603:C":{"contestId":1603,"index":"C","name":"Extreme Extension","type":"PROGRAMMING","points":1750,"rating":2300,"tags":["dp","greedy","math","number theory"]},"1073:G":{"contestId":1073,"index":"G","name":"Yet Another LCP Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","string suffix structures"]},"1209:F":{"contestId":1209,"index":"F","name":"Koala and Notebook","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","dfs and similar","graphs","shortest paths","strings","trees"]},"601:E":{"contestId":601,"index":"E","name":"A Museum Robbery","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","dp"]},"1437:F":{"contestId":1437,"index":"F","name":"Emotional Fishermen","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","dp","math","two pointers"]},"712:E":{"contestId":712,"index":"E","name":"Memory and Casinos","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","math","probabilities"]},"822:E":{"contestId":822,"index":"E","name":"Liar","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["binary search","dp","hashing","string suffix structures"]},"1139:E":{"contestId":1139,"index":"E","name":"Maximize Mex","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["flows","graph matchings","graphs"]},"191:D":{"contestId":191,"index":"D","name":"Metro Scheme","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["graphs","greedy"]},"1684:C":{"contestId":1684,"index":"C","name":"Column Swapping","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["brute force","constructive algorithms","greedy","implementation","sortings"]},"1684:B":{"contestId":1684,"index":"B","name":"Z mod X = C","type":"PROGRAMMING","points":750,"rating":800,"tags":["constructive algorithms","math"]},"1684:D":{"contestId":1684,"index":"D","name":"Traps","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["constructive algorithms","greedy","sortings"]},"1684:E":{"contestId":1684,"index":"E","name":"MEX vs DIFF","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","brute force","constructive algorithms","data structures","greedy","two pointers"]},"1684:F":{"contestId":1684,"index":"F","name":"Diverse Segments","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","two pointers"]},"1684:G":{"contestId":1684,"index":"G","name":"Euclid Guess","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["constructive algorithms","flows","graph matchings","math","number theory"]},"1684:A":{"contestId":1684,"index":"A","name":"Digit Minimization","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","games","math","strings"]},"1806:E":{"contestId":1806,"index":"E","name":"Tree Master","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["brute force","data structures","dfs and similar","trees"]},"1844:G":{"contestId":1844,"index":"G","name":"Tree Weights","type":"PROGRAMMING","points":3500,"rating":3000,"tags":["bitmasks","constructive algorithms","data structures","dfs and similar","implementation","math","matrices","number theory","trees"]},"436:E":{"contestId":436,"index":"E","name":"Cardboard Box","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","greedy"]},"1804:G":{"contestId":1804,"index":"G","name":"Flow Control","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["data structures","dsu","implementation"]},"321:D":{"contestId":321,"index":"D","name":"Ciel and Flipboard","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["dp","greedy","math"]},"1019:C":{"contestId":1019,"index":"C","name":"Sergey's problem","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["constructive algorithms","graphs"]},"1870:E":{"contestId":1870,"index":"E","name":"Another MEX Problem","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["bitmasks","brute force","dp","shortest paths"]},"1870:G":{"contestId":1870,"index":"G","name":"MEXanization","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["data structures"]},"364:D":{"contestId":364,"index":"D","name":"Ghd","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["brute force","math","probabilities"]},"1458:D":{"contestId":1458,"index":"D","name":"Flip and Reverse","type":"PROGRAMMING","points":2000,"rating":3100,"tags":["data structures","graphs","greedy"]},"1868:D":{"contestId":1868,"index":"D","name":"Flower-like Pseudotree","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["constructive algorithms","graphs","greedy","implementation","trees"]},"1868:B1":{"contestId":1868,"index":"B1","name":"Candy Party (Easy Version)","type":"PROGRAMMING","points":500,"rating":1700,"tags":["bitmasks","constructive algorithms","graphs","greedy","implementation","math"]},"1868:C":{"contestId":1868,"index":"C","name":"Travel Plan","type":"PROGRAMMING","points":1000,"rating":2400,"tags":["combinatorics","dp","implementation","math","trees"]},"1868:B2":{"contestId":1868,"index":"B2","name":"Candy Party (Hard Version)","type":"PROGRAMMING","points":750,"rating":2100,"tags":["bitmasks","constructive algorithms","dp","greedy","implementation","math"]},"1868:A":{"contestId":1868,"index":"A","name":"Fill in the Matrix","type":"PROGRAMMING","points":500,"rating":1300,"tags":["constructive algorithms","implementation"]},"11:E":{"contestId":11,"index":"E","name":"Forward, march!","type":"PROGRAMMING","rating":2800,"tags":["binary search","dp","greedy"]},"48:G":{"contestId":48,"index":"G","name":"Galaxy Union","type":"PROGRAMMING","rating":2700,"tags":["dp","trees","two pointers"]},"101:E":{"contestId":101,"index":"E","name":"Candies and Stones","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["divide and conquer","dp"]},"1863:D":{"contestId":1863,"index":"D","name":"Two-Colored Dominoes","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","greedy"]},"1863:E":{"contestId":1863,"index":"E","name":"Speedrun","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["brute force","dfs and similar","dp","graphs","greedy","math","sortings","two pointers"]},"1863:C":{"contestId":1863,"index":"C","name":"MEX Repetition","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["implementation","math"]},"1863:A":{"contestId":1863,"index":"A","name":"Channel","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1863:B":{"contestId":1863,"index":"B","name":"Split Sort","type":"PROGRAMMING","points":750,"rating":1100,"tags":["greedy","math","sortings"]},"1864:A":{"contestId":1864,"index":"A","name":"Increasing and Decreasing","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","implementation","math"]},"1864:B":{"contestId":1864,"index":"B","name":"Swap and Reverse","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","greedy","sortings","strings"]},"1864:D":{"contestId":1864,"index":"D","name":"Matrix Cascade","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["brute force","constructive algorithms","data structures","dp","greedy","math"]},"1864:C":{"contestId":1864,"index":"C","name":"Divisor Chain","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["bitmasks","constructive algorithms","math","number theory"]},"1863:G":{"contestId":1863,"index":"G","name":"Swaps","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["combinatorics","dp","graphs","math"]},"1864:E":{"contestId":1864,"index":"E","name":"Guess Game","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["bitmasks","data structures","games","math","probabilities","sortings","strings","trees"]},"1864:F":{"contestId":1864,"index":"F","name":"Exotic Queries","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["data structures","implementation","sortings"]},"1864:H":{"contestId":1864,"index":"H","name":"Asterism Stream","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["dp","math","matrices"]},"1864:G":{"contestId":1864,"index":"G","name":"Magic Square","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["combinatorics","constructive algorithms","implementation"]},"1716:F":{"contestId":1716,"index":"F","name":"Bags with Balls","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","dp","math","number theory"]},"1716:E":{"contestId":1716,"index":"E","name":"Swap and Maximum Block","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","data structures","dfs and similar","divide and conquer","dp"]},"1709:D":{"contestId":1709,"index":"D","name":"Rorororobot","type":"PROGRAMMING","rating":1700,"tags":["binary search","data structures","greedy","math"]},"1709:E":{"contestId":1709,"index":"E","name":"XOR Tree","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","data structures","dfs and similar","dsu","greedy","trees"]},"487:E":{"contestId":487,"index":"E","name":"Tourists","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["data structures","dfs and similar","graphs","trees"]},"1361:E":{"contestId":1361,"index":"E","name":"James and the Chase","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["dfs and similar","graphs","probabilities","trees"]},"1716:C":{"contestId":1716,"index":"C","name":"Robot in a Hallway","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp","greedy","implementation","ternary search"]},"1716:D":{"contestId":1716,"index":"D","name":"Chip Move","type":"PROGRAMMING","rating":2000,"tags":["brute force","dp","math"]},"1267:I":{"contestId":1267,"index":"I","name":"Intriguing Selection","type":"PROGRAMMING","rating":2600,"tags":["brute force","constructive algorithms","implementation","interactive","sortings"]},"1709:F":{"contestId":1709,"index":"F","name":"Multiset of Strings","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","brute force","dp","fft","flows","graphs","math","meet-in-the-middle","trees"]},"1849:F":{"contestId":1849,"index":"F","name":"XOR Partition","type":"PROGRAMMING","rating":2700,"tags":["binary search","bitmasks","data structures","divide and conquer","greedy","trees"]},"1854:A1":{"contestId":1854,"index":"A1","name":"Dual (Easy Version)","type":"PROGRAMMING","points":750,"rating":1400,"tags":["constructive algorithms","math"]},"1854:A2":{"contestId":1854,"index":"A2","name":"Dual (Hard Version)","type":"PROGRAMMING","points":750,"rating":1900,"tags":["constructive algorithms","math"]},"1854:D":{"contestId":1854,"index":"D","name":"Michael and Hotel","type":"PROGRAMMING","points":2000,"rating":3000,"tags":["binary search","interactive","trees"]},"1854:E":{"contestId":1854,"index":"E","name":"Game Bundles","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["brute force","constructive algorithms","dp","greedy","math"]},"1854:C":{"contestId":1854,"index":"C","name":"Expected Destruction","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["combinatorics","dp","math","probabilities"]},"1854:B":{"contestId":1854,"index":"B","name":"Earn or Unlock","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["bitmasks","brute force","dp"]},"1849:A":{"contestId":1849,"index":"A","name":"Morning Sandwich","type":"PROGRAMMING","rating":800,"tags":["implementation","math"]},"1849:C":{"contestId":1849,"index":"C","name":"Binary String Copying","type":"PROGRAMMING","rating":1600,"tags":["binary search","brute force","data structures","hashing","strings"]},"1849:B":{"contestId":1849,"index":"B","name":"Monsters","type":"PROGRAMMING","rating":1000,"tags":["greedy","math","sortings"]},"1514:E":{"contestId":1514,"index":"E","name":"Baby Ehab's Hyper Apartment","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["binary search","graphs","interactive","sortings","two pointers"]},"685:D":{"contestId":685,"index":"D","name":"Kay and Eternity","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["brute force","implementation","sortings"]},"1709:C":{"contestId":1709,"index":"C","name":"Recover an RBS","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","implementation","strings"]},"1709:B":{"contestId":1709,"index":"B","name":"Also Try Minecraft","type":"PROGRAMMING","rating":900,"tags":["data structures","dp","implementation"]},"1709:A":{"contestId":1709,"index":"A","name":"Three Doors","type":"PROGRAMMING","rating":800,"tags":["brute force","greedy","implementation","math"]},"1036:G":{"contestId":1036,"index":"G","name":"Sources and Sinks","type":"PROGRAMMING","rating":2700,"tags":["bitmasks","brute force","dfs and similar"]},"1153:F":{"contestId":1153,"index":"F","name":"Serval and Bonus Problem","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["combinatorics","dp","math","probabilities"]},"480:D":{"contestId":480,"index":"D","name":"Parcels","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["dp","graphs"]},"848:C":{"contestId":848,"index":"C","name":"Goodbye Souvenir","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["data structures","divide and conquer"]},"269:D":{"contestId":269,"index":"D","name":"Maximum Waterfall","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","dp","graphs","sortings"]},"83:E":{"contestId":83,"index":"E","name":"Two Subsequences","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["bitmasks","dp"]},"144:E":{"contestId":144,"index":"E","name":"Competition","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["data structures","greedy"]},"1844:F2":{"contestId":1844,"index":"F2","name":"Min Cost Permutation (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2800,"tags":["binary search","constructive algorithms","data structures","greedy","math","sortings"]},"1844:E":{"contestId":1844,"index":"E","name":"Great Grids","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs"]},"1844:D":{"contestId":1844,"index":"D","name":"Row Major","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","greedy","math","number theory","strings"]},"1844:C":{"contestId":1844,"index":"C","name":"Particles","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["dp","greedy","implementation","math"]},"1844:B":{"contestId":1844,"index":"B","name":"Permutations & Primes","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","math"]},"1735:D":{"contestId":1735,"index":"D","name":"Meta-set","type":"PROGRAMMING","points":1750,"rating":1700,"tags":["brute force","combinatorics","data structures","hashing","math"]},"232:D":{"contestId":232,"index":"D","name":"Fence","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["binary search","data structures","string suffix structures"]},"1361:C":{"contestId":1361,"index":"C","name":"Johnny and Megan's Necklace","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["binary search","bitmasks","constructive algorithms","dfs and similar","dsu","graphs"]},"1735:C":{"contestId":1735,"index":"C","name":"Phase Shift","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["dfs and similar","dsu","graphs","greedy","implementation","strings"]},"1735:B":{"contestId":1735,"index":"B","name":"Tea with Tangerines","type":"PROGRAMMING","points":750,"rating":900,"tags":["greedy","math"]},"1735:A":{"contestId":1735,"index":"A","name":"Working Week","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","math"]},"1735:F":{"contestId":1735,"index":"F","name":"Pebbles and Beads","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["data structures","geometry"]},"1658:A":{"contestId":1658,"index":"A","name":"Marin and Photoshoot","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","implementation","math"]},"1104:A":{"contestId":1104,"index":"A","name":"Splitting into digits","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","implementation","math"]},"1657:A":{"contestId":1657,"index":"A","name":"Integer Moves","type":"PROGRAMMING","rating":800,"tags":["brute force","math"]},"1651:B":{"contestId":1651,"index":"B","name":"Prove Him Wrong","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy"]},"814:E":{"contestId":814,"index":"E","name":"An unavoidable detour for home","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","dp","graphs","shortest paths"]},"555:E":{"contestId":555,"index":"E","name":"Case of Computer Network","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["dfs and similar","graphs","trees"]},"1736:D":{"contestId":1736,"index":"D","name":"Equal Binary Subsequences","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["constructive algorithms","geometry","greedy","implementation","strings"]},"1736:C2":{"contestId":1736,"index":"C2","name":"Good Subarrays (Hard Version)","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["binary search","data structures","dp","two pointers"]},"1736:E":{"contestId":1736,"index":"E","name":"Swap and Take","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["dp","greedy"]},"1736:C1":{"contestId":1736,"index":"C1","name":"Good Subarrays (Easy Version)","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["binary search","data structures","schedules","two pointers"]},"1736:B":{"contestId":1736,"index":"B","name":"Playing with GCD","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["math","number theory"]},"1736:A":{"contestId":1736,"index":"A","name":"Make A Equal to B","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","sortings"]},"1290:E":{"contestId":1290,"index":"E","name":"Cartesian Tree ","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["data structures"]},"1845:D":{"contestId":1845,"index":"D","name":"Rating System","type":"PROGRAMMING","rating":1800,"tags":["binary search","brute force","data structures","dp","dsu","greedy","math","two pointers"]},"1845:E":{"contestId":1845,"index":"E","name":"Boxes and Balls","type":"PROGRAMMING","rating":2500,"tags":["dp","implementation","math"]},"1845:F":{"contestId":1845,"index":"F","name":"Swimmers in the Pool","type":"PROGRAMMING","rating":2800,"tags":["dp","fft","math","number theory"]},"855:E":{"contestId":855,"index":"E","name":"Salazar Slytherin's Locket","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["bitmasks","dp"]},"42:C":{"contestId":42,"index":"C","name":"Safe cracking","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["brute force","constructive algorithms"]},"538:E":{"contestId":538,"index":"E","name":"Demiurges Play Again","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["dfs and similar","dp","math","trees"]},"1674:E":{"contestId":1674,"index":"E","name":"Breaking the Wall","type":"PROGRAMMING","rating":2000,"tags":["binary search","brute force","constructive algorithms","greedy","math"]},"671:E":{"contestId":671,"index":"E","name":"Organizing a Race","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["data structures","greedy"]},"568:D":{"contestId":568,"index":"D","name":"Sign Posts","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["brute force","geometry","math"]},"1621:H":{"contestId":1621,"index":"H","name":"Trains and Airplanes","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["dfs and similar","graphs","shortest paths","trees"]},"1842:G":{"contestId":1842,"index":"G","name":"Tenzing and Random Operations","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["combinatorics","dp","math","probabilities"]},"500:G":{"contestId":500,"index":"G","name":"New Year Running","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["number theory","trees"]},"117:E":{"contestId":117,"index":"E","name":"Tree or not Tree","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["data structures","divide and conquer","implementation","trees"]},"576:E":{"contestId":576,"index":"E","name":"Painting Edges","type":"PROGRAMMING","points":2750,"rating":3300,"tags":["binary search","data structures"]},"1442:E":{"contestId":1442,"index":"E","name":"Black, White and Grey Tree","type":"PROGRAMMING","points":1750,"rating":3000,"tags":["binary search","constructive algorithms","dfs and similar","dp","greedy","trees"]},"351:D":{"contestId":351,"index":"D","name":"Jeff and Removing Periods","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["data structures"]},"311:D":{"contestId":311,"index":"D","name":"Interval Cubing","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","math"]},"140:F":{"contestId":140,"index":"F","name":"New Year Snowflake","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["geometry","sortings"]},"1842:E":{"contestId":1842,"index":"E","name":"Tenzing and Triangle","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["data structures","dp","geometry","greedy","math"]},"1842:H":{"contestId":1842,"index":"H","name":"Tenzing and Random Real Numbers","type":"PROGRAMMING","points":3750,"rating":3000,"tags":["bitmasks","dp","graphs","math","probabilities"]},"1539:F":{"contestId":1539,"index":"F","name":"Strange Array","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","greedy","sortings"]},"690:F2":{"contestId":690,"index":"F2","name":"Tree of Life (medium)","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","hashing","trees"]},"756:D":{"contestId":756,"index":"D","name":"Bacterial Melee","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["brute force","combinatorics","dp","string suffix structures"]},"359:E":{"contestId":359,"index":"E","name":"Neatness","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["constructive algorithms","dfs and similar"]},"1768:D":{"contestId":1768,"index":"D","name":"Lucky Permutation","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},"1768:E":{"contestId":1768,"index":"E","name":"Partial Sorting","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","math","number theory"]},"1768:F":{"contestId":1768,"index":"F","name":"Wonderful Jump","type":"PROGRAMMING","points":3250,"rating":2900,"tags":["dp","greedy"]},"1768:A":{"contestId":1768,"index":"A","name":"Greatest Convex","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math","number theory"]},"51:F":{"contestId":51,"index":"F","name":"Caterpillar","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["dfs and similar","dp","graphs","trees"]},"336:E":{"contestId":336,"index":"E","name":"Vasily the Bear and Painting Square","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["bitmasks","combinatorics","dp","implementation"]},"1778:A":{"contestId":1778,"index":"A","name":"Flip Flop Sum","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1778:E":{"contestId":1778,"index":"E","name":"The Tree Has Fallen!","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["bitmasks","dfs and similar","math","trees"]},"1778:F":{"contestId":1778,"index":"F","name":"Maximizing Root","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["dfs and similar","dp","graphs","math","number theory","trees"]},"1795:B":{"contestId":1795,"index":"B","name":"Ideal Point","type":"PROGRAMMING","rating":900,"tags":["brute force","geometry","greedy"]},"1795:C":{"contestId":1795,"index":"C","name":"Tea Tasting","type":"PROGRAMMING","rating":1500,"tags":["binary search","data structures","implementation"]},"1795:D":{"contestId":1795,"index":"D","name":"Triangle Coloring","type":"PROGRAMMING","rating":1600,"tags":["combinatorics","math"]},"1795:A":{"contestId":1795,"index":"A","name":"Two Towers","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation","strings"]},"1789:C":{"contestId":1789,"index":"C","name":"Serval and Toxel's Arrays","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["combinatorics","dp","implementation","math"]},"1789:D":{"contestId":1789,"index":"D","name":"Serval and Shift-Shift-Shift","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["bitmasks","brute force","constructive algorithms","implementation"]},"1789:B":{"contestId":1789,"index":"B","name":"Serval and Inversion Magic","type":"PROGRAMMING","points":1000,"rating":800,"tags":["brute force","implementation","strings","two pointers"]},"1789:A":{"contestId":1789,"index":"A","name":"Serval and Mocha's Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","math","number theory"]},"1789:F":{"contestId":1789,"index":"F","name":"Serval and Brain Power","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["bitmasks","brute force","dp","greedy","implementation","strings"]},"1796:F":{"contestId":1796,"index":"F","name":"Strange Triples","type":"PROGRAMMING","rating":2900,"tags":["brute force","math","number theory"]},"1796:D":{"contestId":1796,"index":"D","name":"Maximum Subarray","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp","greedy","two pointers"]},"1796:C":{"contestId":1796,"index":"C","name":"Maximum Set","type":"PROGRAMMING","rating":1600,"tags":["binary search","math"]},"1796:B":{"contestId":1796,"index":"B","name":"Asterisk-Minor Template","type":"PROGRAMMING","rating":1000,"tags":["implementation","strings"]},"1796:A":{"contestId":1796,"index":"A","name":"Typical Interview Problem","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation","strings"]},"1794:B":{"contestId":1794,"index":"B","name":"Not Dividing","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms","greedy","math"]},"1794:A":{"contestId":1794,"index":"A","name":"Prefix and Suffix Array","type":"PROGRAMMING","points":750,"rating":800,"tags":["strings"]},"1794:E":{"contestId":1794,"index":"E","name":"Labeling the Tree with Distances","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["data structures","dp","greedy","hashing","implementation","trees"]},"1804:H":{"contestId":1804,"index":"H","name":"Code Lock","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["bitmasks","dp"]},"1801:G":{"contestId":1801,"index":"G","name":"A task for substrings","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["data structures","string suffix structures","strings"]},"1810:H":{"contestId":1810,"index":"H","name":"Last Number","type":"PROGRAMMING","points":3500,"rating":2900,"tags":["combinatorics","math"]},"1841:E":{"contestId":1841,"index":"E","name":"Fill the Matrix","type":"PROGRAMMING","rating":2200,"tags":["data structures","greedy","math"]},"1841:D":{"contestId":1841,"index":"D","name":"Pairs of Segments","type":"PROGRAMMING","rating":2000,"tags":["data structures","greedy","sortings","two pointers"]},"1841:C":{"contestId":1841,"index":"C","name":"Ranom Numbers","type":"PROGRAMMING","rating":1800,"tags":["brute force","dp","greedy","math","strings"]},"1841:B":{"contestId":1841,"index":"B","name":"Keep it Beautiful","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"1801:F":{"contestId":1801,"index":"F","name":"Another n-dimensional chocolate bar","type":"PROGRAMMING","points":3500,"rating":2700,"tags":["dp","math","meet-in-the-middle","number theory"]},"1801:E":{"contestId":1801,"index":"E","name":"Gasoline prices","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["data structures","divide and conquer","dsu","hashing","trees"]},"1801:D":{"contestId":1801,"index":"D","name":"The way home","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","data structures","dp","graphs","greedy","shortest paths","sortings"]},"1801:B":{"contestId":1801,"index":"B","name":"Buying gifts","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["data structures","greedy","sortings"]},"1801:A":{"contestId":1801,"index":"A","name":"The Very Beautiful Blanket","type":"PROGRAMMING","points":500,"rating":1600,"tags":["bitmasks","constructive algorithms"]},"1811:G2":{"contestId":1811,"index":"G2","name":"Vlad and the Nice Paths (hard version)","type":"PROGRAMMING","rating":2200,"tags":["binary search","combinatorics","data structures","dp","math","two pointers"]},"1804:F":{"contestId":1804,"index":"F","name":"Approximate Diameter","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["binary search","divide and conquer","graphs","shortest paths"]},"1804:E":{"contestId":1804,"index":"E","name":"Routing","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["bitmasks","brute force","dfs and similar","dp","graphs"]},"1804:D":{"contestId":1804,"index":"D","name":"Accommodation","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["brute force","dp","greedy","implementation"]},"1804:C":{"contestId":1804,"index":"C","name":"Pull Your Luck","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["brute force","greedy","math","number theory"]},"1806:F1":{"contestId":1806,"index":"F1","name":"GCD Master (easy version)","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["greedy","math","number theory","sortings"]},"1806:D":{"contestId":1806,"index":"D","name":"DSU Master","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["combinatorics","dp","dsu","math"]},"1806:C":{"contestId":1806,"index":"C","name":"Sequence Master","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["brute force","constructive algorithms","math"]},"1806:B":{"contestId":1806,"index":"B","name":"Mex Master","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms","greedy"]},"1806:A":{"contestId":1806,"index":"A","name":"Walking Master","type":"PROGRAMMING","points":500,"rating":800,"tags":["geometry","greedy","math"]},"1806:F2":{"contestId":1806,"index":"F2","name":"GCD Master (hard version)","type":"PROGRAMMING","points":1500,"rating":2900,"tags":["greedy","math","sortings"]},"888:G":{"contestId":888,"index":"G","name":"Xor-MST","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","constructive algorithms","data structures"]},"1822:G2":{"contestId":1822,"index":"G2","name":"Magic Triples (Hard Version)","type":"PROGRAMMING","rating":2200,"tags":["brute force","data structures","math","number theory"]},"1798:F":{"contestId":1798,"index":"F","name":"Gifts from Grandfather Ahmed","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["dp","math","number theory"]},"1798:E":{"contestId":1798,"index":"E","name":"Multitest Generator","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["brute force","dp"]},"1798:D":{"contestId":1798,"index":"D","name":"Shocking Arrangement","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["constructive algorithms","greedy","math"]},"1798:C":{"contestId":1798,"index":"C","name":"Candy Store","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["greedy","math","number theory"]},"1798:B":{"contestId":1798,"index":"B","name":"Three Sevens","type":"PROGRAMMING","points":750,"rating":1000,"tags":["brute force","data structures","greedy","implementation"]},"1798:A":{"contestId":1798,"index":"A","name":"Showstopper","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation","sortings"]},"1838:F":{"contestId":1838,"index":"F","name":"Stuck Conveyor","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["binary search","constructive algorithms","interactive"]},"1838:E":{"contestId":1838,"index":"E","name":"Count Supersequences","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["combinatorics","dp","math"]},"1838:D":{"contestId":1838,"index":"D","name":"Bracket Walk","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["data structures","greedy","strings"]},"1838:C":{"contestId":1838,"index":"C","name":"No Prime Differences","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","math","number theory"]},"1838:B":{"contestId":1838,"index":"B","name":"Minimize Permutation Subarrays","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","math"]},"1840:F":{"contestId":1840,"index":"F","name":"Railguns","type":"PROGRAMMING","rating":2200,"tags":["brute force","dfs and similar","dp","graphs"]},"1840:G2":{"contestId":1840,"index":"G2","name":"In Search of Truth (Hard Version)","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","interactive","math","meet-in-the-middle","probabilities"]},"1839:E":{"contestId":1839,"index":"E","name":"Decreasing Game","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["constructive algorithms","dfs and similar","dp","greedy","interactive"]},"1839:D":{"contestId":1839,"index":"D","name":"Ball Sorting","type":"PROGRAMMING","points":2250,"rating":2100,"tags":["data structures","dp","sortings"]},"1839:C":{"contestId":1839,"index":"C","name":"Insert Zero and Invert Prefix","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms"]},"1839:B":{"contestId":1839,"index":"B","name":"Lamps","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["greedy","sortings"]},"1839:A":{"contestId":1839,"index":"A","name":"The Good Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation","math"]},"1808:E3":{"contestId":1808,"index":"E3","name":"Minibuses on Venus (hard version)","type":"PROGRAMMING","points":750,"rating":2800,"tags":["brute force","combinatorics","dp","math"]},"1808:D":{"contestId":1808,"index":"D","name":"Petya, Petya, Petr, and Palindromes","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","brute force","data structures","two pointers"]},"1808:C":{"contestId":1808,"index":"C","name":"Unlucky Numbers","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["brute force","dp","greedy","implementation"]},"1808:B":{"contestId":1808,"index":"B","name":"Playing in a Casino","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["math","sortings"]},"1808:A":{"contestId":1808,"index":"A","name":"Lucky Numbers","type":"PROGRAMMING","points":750,"rating":900,"tags":["brute force","implementation"]},"1808:E2":{"contestId":1808,"index":"E2","name":"Minibuses on Venus (medium version)","type":"PROGRAMMING","points":1000,"rating":2500,"tags":["combinatorics","divide and conquer","dp","matrices"]},"1805:F2":{"contestId":1805,"index":"F2","name":"Survival of the Weakest (hard version)","type":"PROGRAMMING","points":1750,"rating":3100,"tags":["greedy","math","sortings","two pointers"]},"1805:C":{"contestId":1805,"index":"C","name":"Place for a Selfie","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["binary search","data structures","geometry","math"]},"1805:B":{"contestId":1805,"index":"B","name":"The String Has a Target","type":"PROGRAMMING","points":750,"rating":800,"tags":["greedy","strings"]},"1805:A":{"contestId":1805,"index":"A","name":"We Need the Zero","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","brute force"]},"1827:E":{"contestId":1827,"index":"E","name":"Bus Routes","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["binary search","constructive algorithms","dfs and similar","greedy","trees"]},"1827:D":{"contestId":1827,"index":"D","name":"Two Centroids","type":"PROGRAMMING","points":1750,"rating":2800,"tags":["data structures","dfs and similar","greedy","trees"]},"1163:F":{"contestId":1163,"index":"F","name":"Indecisive Taxi Fee","type":"PROGRAMMING","points":3250,"rating":3000,"tags":["data structures","graphs","shortest paths"]},"1830:B":{"contestId":1830,"index":"B","name":"The BOSS Can Count Pairs","type":"PROGRAMMING","points":1000,"rating":2000,"tags":["brute force","math"]},"1830:C":{"contestId":1830,"index":"C","name":"Hyperregular Bracket Strings","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["combinatorics","greedy","hashing","math","number theory","sortings"]},"1830:D":{"contestId":1830,"index":"D","name":"Mex Tree","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["brute force","dp","trees"]},"1830:E":{"contestId":1830,"index":"E","name":"Bully Sort","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["data structures","math"]},"1830:F":{"contestId":1830,"index":"F","name":"The Third Grace","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["data structures","dp"]},"1830:A":{"contestId":1830,"index":"A","name":"Copil Copac Draws Trees","type":"PROGRAMMING","points":500,"rating":1400,"tags":["dfs and similar","dp","graphs","trees"]},"1810:F":{"contestId":1810,"index":"F","name":"M-tree","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","math","sortings","trees"]},"1810:E":{"contestId":1810,"index":"E","name":"Monsters","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["brute force","data structures","dfs and similar","dsu","graphs","greedy"]},"1837:D":{"contestId":1837,"index":"D","name":"Bracket Coloring","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","greedy"]},"1837:B":{"contestId":1837,"index":"B","name":"Comparison String","type":"PROGRAMMING","rating":900,"tags":["greedy"]},"1837:C":{"contestId":1837,"index":"C","name":"Best Binary String","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","greedy"]},"1837:E":{"contestId":1837,"index":"E","name":"Playoff Fixing","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","trees"]},"1837:F":{"contestId":1837,"index":"F","name":"Editorial for Two","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures","greedy","implementation"]},"1837:A":{"contestId":1837,"index":"A","name":"Grasshopper on a Line","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},"1168:D":{"contestId":1168,"index":"D","name":"Anagram Paths","type":"PROGRAMMING","points":2000,"rating":3000,"tags":["dp","implementation","trees"]},"1169:B":{"contestId":1169,"index":"B","name":"Pairs","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["graphs","implementation"]},"1169:A":{"contestId":1169,"index":"A","name":"Circle Metro","type":"PROGRAMMING","points":500,"rating":900,"tags":["implementation","math"]},"1168:A":{"contestId":1168,"index":"A","name":"Increasing by Modulo","type":"PROGRAMMING","points":500,"rating":1700,"tags":["binary search","greedy"]},"1168:B":{"contestId":1168,"index":"B","name":"Good Triple","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["brute force","two pointers"]},"1168:C":{"contestId":1168,"index":"C","name":"And Reachability","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["bitmasks","dp"]},"1168:E":{"contestId":1168,"index":"E","name":"Xor Permutations","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["constructive algorithms","math"]},"1828:B":{"contestId":1828,"index":"B","name":"Permutation Swap","type":"PROGRAMMING","points":1000,"rating":900,"tags":["math","number theory"]},"1827:C":{"contestId":1827,"index":"C","name":"Palindrome Partition","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["binary search","brute force","data structures","dp","hashing","strings"]},"1828:A":{"contestId":1828,"index":"A","name":"Divisible Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"1832:F":{"contestId":1832,"index":"F","name":"Zombies","type":"PROGRAMMING","rating":3200,"tags":["binary search","dp"]},"1832:D2":{"contestId":1832,"index":"D2","name":"Red-Blue Operations (Hard Version)","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","greedy","implementation","math"]},"1832:D1":{"contestId":1832,"index":"D1","name":"Red-Blue Operations (Easy Version)","type":"PROGRAMMING","rating":2100,"tags":["binary search","greedy","implementation","math"]},"1825:A":{"contestId":1825,"index":"A","name":"LuoTianyi and the Palindrome String","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","strings"]},"1825:B":{"contestId":1825,"index":"B","name":"LuoTianyi and the Table","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["greedy","math"]},"1824:D":{"contestId":1824,"index":"D","name":"LuoTianyi and the Function","type":"PROGRAMMING","points":2250,"rating":3000,"tags":["data structures"]},"1466:H":{"contestId":1466,"index":"H","name":"Finding satisfactory solutions","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["combinatorics","dp","graphs","greedy","math"]},"1466:G":{"contestId":1466,"index":"G","name":"Song of the Sirens","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","divide and conquer","hashing","math","string suffix structures","strings"]},"1817:F":{"contestId":1817,"index":"F","name":"Entangled Substrings","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["string suffix structures","strings"]},"1818:B":{"contestId":1818,"index":"B","name":"Indivisible","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms"]},"1818:A":{"contestId":1818,"index":"A","name":"Politics","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1809:G":{"contestId":1809,"index":"G","name":"Prediction","type":"PROGRAMMING","rating":2800,"tags":["combinatorics","dp","math"]},"103743:G":{"contestId":103743,"index":"G","name":"GCD on Bipartite Graph","type":"PROGRAMMING","tags":[]},"103637:D":{"contestId":103637,"index":"D","name":"Dull game","type":"PROGRAMMING","tags":[]},"1821:F":{"contestId":1821,"index":"F","name":"Timber","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","dp","fft","math"]},"1819:D":{"contestId":1819,"index":"D","name":"Misha and Apples","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["brute force","data structures","dp","two pointers"]},"1819:C":{"contestId":1819,"index":"C","name":"The Fox and the Complete Tree Traversal","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["constructive algorithms","dp","implementation","math","trees"]},"1819:F":{"contestId":1819,"index":"F","name":"Willy-nilly, Crack, Into Release!","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["data structures","dp"]},"1819:E":{"contestId":1819,"index":"E","name":"Roads in E City","type":"PROGRAMMING","points":2750,"rating":3200,"tags":["interactive","math","probabilities","trees"]},"1820:A":{"contestId":1820,"index":"A","name":"Yura's New Name","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation","strings"]},"1820:B":{"contestId":1820,"index":"B","name":"JoJo's Incredible Adventures","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["math","strings","two pointers"]},"1815:F":{"contestId":1815,"index":"F","name":"OH NO1 (-2-3-4)","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["constructive algorithms","graphs","math"]},"1816:B":{"contestId":1816,"index":"B","name":"Grid Reconstruction","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","greedy"]},"1816:A":{"contestId":1816,"index":"A","name":"Ian Visits Mary","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","geometry","number theory"]},"1815:D":{"contestId":1815,"index":"D","name":"XOR Counting","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","combinatorics","dp","math"]},"1797:F":{"contestId":1797,"index":"F","name":"Li Hua and Path","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","dfs and similar","divide and conquer","dsu","trees"]},"1797:E":{"contestId":1797,"index":"E","name":"Li Hua and Array","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["brute force","data structures","dsu","math","number theory","two pointers"]},"1814:D":{"contestId":1814,"index":"D","name":"Balancing Weapons","type":"PROGRAMMING","rating":2500,"tags":["binary search","brute force","data structures","math","two pointers"]},"1814:F":{"contestId":1814,"index":"F","name":"Communication Towers","type":"PROGRAMMING","rating":2700,"tags":["brute force","divide and conquer","dsu"]},"1805:F1":{"contestId":1805,"index":"F1","name":"Survival of the Weakest (easy version)","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["binary search","brute force","implementation","math","sortings"]},"1812:I":{"contestId":1812,"index":"I","name":"Mountain Climber","type":"PROGRAMMING","tags":["*special"]},"1812:G":{"contestId":1812,"index":"G","name":"Colour Vision","type":"PROGRAMMING","tags":["*special","implementation"]},"1810:G":{"contestId":1810,"index":"G","name":"The Maximum Prefix","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["dp"]},"1799:H":{"contestId":1799,"index":"H","name":"Tree Cutting","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["bitmasks","dfs and similar","dp"]},"1802:A":{"contestId":1802,"index":"A","name":"Likes","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation"]},"1802:B":{"contestId":1802,"index":"B","name":"Settlement of Guinea Pigs","type":"PROGRAMMING","points":750,"rating":1000,"tags":["greedy","implementation","math"]},"1800:G":{"contestId":1800,"index":"G","name":"Symmetree","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","hashing","implementation","trees"]},"1789:E":{"contestId":1789,"index":"E","name":"Serval and Music Game","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["brute force","dp","implementation","math","number theory"]},"1785:F":{"contestId":1785,"index":"F","name":"Minimums or Medians","type":"PROGRAMMING","points":4000,"rating":3400,"tags":["combinatorics","two pointers"]},"1793:F":{"contestId":1793,"index":"F","name":"Rebrending","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["brute force","data structures","divide and conquer","implementation"]},"1793:E":{"contestId":1793,"index":"E","name":"Velepin and Marketing","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},"1788:F":{"contestId":1788,"index":"F","name":"XOR, Tree, and Queries","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["bitmasks","constructive algorithms","dfs and similar","dsu","graphs","greedy","implementation","trees"]},"1785:E":{"contestId":1785,"index":"E","name":"Infinite Game","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["bitmasks","brute force","dp","games"]},"1782:G":{"contestId":1782,"index":"G","name":"Diverse Coloring","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["constructive algorithms","dp","greedy","trees"]},"1785:D":{"contestId":1785,"index":"D","name":"Wooden Spoon","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["combinatorics","dp","fft","math"]},"1786:A2":{"contestId":1786,"index":"A2","name":"Alternating Deck (hard version)","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation"]},"1786:A1":{"contestId":1786,"index":"A1","name":"Non-alternating Deck (easy version)","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation"]},"1786:B":{"contestId":1786,"index":"B","name":"Cake Assembly Line","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["brute force","sortings"]},"1534:H":{"contestId":1534,"index":"H","name":"Lost Nodes","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["constructive algorithms","dp","graphs","interactive","sortings","trees"]},"1787:H":{"contestId":1787,"index":"H","name":"Codeforces Scoreboard","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["binary search","data structures","dp","geometry"]},"1614:E":{"contestId":1614,"index":"E","name":"Divan and a Cottage","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["binary search","data structures"]},"1787:I":{"contestId":1787,"index":"I","name":"Treasure Hunt","type":"PROGRAMMING","points":3750,"rating":3400,"tags":["data structures","divide and conquer","two pointers"]},"1787:G":{"contestId":1787,"index":"G","name":"Colorful Tree Again","type":"PROGRAMMING","points":3250,"rating":3000,"tags":["brute force","data structures","trees"]},"1534:G":{"contestId":1534,"index":"G","name":"A New Beginning","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["data structures","dp","geometry","sortings"]},"1534:F2":{"contestId":1534,"index":"F2","name":"Falling Sand (Hard Version)","type":"PROGRAMMING","points":1250,"rating":3000,"tags":["dfs and similar","dp","graphs","greedy"]},"1534:F1":{"contestId":1534,"index":"F1","name":"Falling Sand (Easy Version)","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["dfs and similar","graphs","greedy"]},"1792:B":{"contestId":1792,"index":"B","name":"Stand-up Comedian","type":"PROGRAMMING","rating":1200,"tags":["greedy","math"]},"1458:E":{"contestId":1458,"index":"E","name":"Nim Shortcuts","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["data structures","games"]},"1777:F":{"contestId":1777,"index":"F","name":"Comfortably Numb","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","strings","trees"]},"1777:E":{"contestId":1777,"index":"E","name":"Edge Reverse","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["binary search","dfs and similar","graphs","trees"]},"1781:G":{"contestId":1781,"index":"G","name":"Diverse Coloring","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["constructive algorithms","trees"]},"883:B":{"contestId":883,"index":"B","name":"Berland Army","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms","graphs","greedy"]},"551:B":{"contestId":551,"index":"B","name":"ZgukistringZ","type":"PROGRAMMING","points":1250,"rating":1800,"tags":["brute force","constructive algorithms","implementation","strings"]},"1774:F1":{"contestId":1774,"index":"F1","name":"Magician and Pigs (Easy Version)","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["brute force","data structures","implementation"]},"1697:D":{"contestId":1697,"index":"D","name":"Guess The String","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","interactive"]},"1468:F":{"contestId":1468,"index":"F","name":"Full Turn","type":"PROGRAMMING","rating":1700,"tags":["geometry","hashing","number theory"]},"852:A":{"contestId":852,"index":"A","name":"Digits","type":"PROGRAMMING","rating":2500,"tags":["brute force","implementation","math"]},"954:G":{"contestId":954,"index":"G","name":"Castle Defense","type":"PROGRAMMING","rating":2000,"tags":["binary search","data structures","greedy","two pointers"]},"1004:E":{"contestId":1004,"index":"E","name":"Sonya and Ice Cream","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["binary search","data structures","dp","greedy","shortest paths","trees"]},"903:D":{"contestId":903,"index":"D","name":"Almost Difference","type":"PROGRAMMING","rating":2200,"tags":["data structures","math"]},"1006:B":{"contestId":1006,"index":"B","name":"Polycarp's Practice","type":"PROGRAMMING","rating":1200,"tags":["greedy","implementation","sortings"]},"1029:D":{"contestId":1029,"index":"D","name":"Concatenated Multiples","type":"PROGRAMMING","rating":1900,"tags":["implementation","math"]},"1029:A":{"contestId":1029,"index":"A","name":"Many Equal Substrings","type":"PROGRAMMING","rating":1300,"tags":["implementation","strings"]},"1770:G":{"contestId":1770,"index":"G","name":"Koxia and Bracket","type":"PROGRAMMING","points":3250,"rating":3400,"tags":["divide and conquer","fft","math"]},"351:A":{"contestId":351,"index":"A","name":"Jeff and Rounding","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["dp","greedy","implementation","math"]},"762:A":{"contestId":762,"index":"A","name":"k-th divisor","type":"PROGRAMMING","rating":1400,"tags":["math","number theory"]},"706:D":{"contestId":706,"index":"D","name":"Vasiliy's Multiset","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["binary search","bitmasks","data structures","trees"]},"567:F":{"contestId":567,"index":"F","name":"Mausoleum","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["dp"]},"698:C":{"contestId":698,"index":"C","name":"LRU","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["bitmasks","dp","math","probabilities"]},"1619:G":{"contestId":1619,"index":"G","name":"Unusual Minesweeper","type":"PROGRAMMING","rating":2000,"tags":["binary search","dfs and similar","dsu","greedy","sortings"]},"799:C":{"contestId":799,"index":"C","name":"Fountains","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["binary search","data structures","implementation"]},"1166:D":{"contestId":1166,"index":"D","name":"Cute Sequences","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["binary search","brute force","greedy","math"]},"911:G":{"contestId":911,"index":"G","name":"Mass Change Queries","type":"PROGRAMMING","rating":2500,"tags":["data structures"]},"505:C":{"contestId":505,"index":"C","name":"Mr. Kitayuta, the Treasure Hunter","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["dfs and similar","dp","two pointers"]},"1671:F":{"contestId":1671,"index":"F","name":"Permutation Counting","type":"PROGRAMMING","rating":2700,"tags":["brute force","combinatorics","dp","fft","math"]},"525:D":{"contestId":525,"index":"D","name":"Arthur and Walls","type":"PROGRAMMING","points":3000,"rating":2400,"tags":["constructive algorithms","data structures","graphs","greedy","shortest paths"]},"1767:E":{"contestId":1767,"index":"E","name":"Algebra Flash","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","brute force","dp","graphs","math","meet-in-the-middle","trees"]},"1767:D":{"contestId":1767,"index":"D","name":"Playoff","type":"PROGRAMMING","rating":1500,"tags":["combinatorics","constructive algorithms","dp","greedy","math"]},"1763:D":{"contestId":1763,"index":"D","name":"Valid Bitonic Permutations","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["combinatorics","dp","implementation","math","number theory"]},"1763:E":{"contestId":1763,"index":"E","name":"Node Pairs","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["dp","graphs","math","number theory"]},"1763:C":{"contestId":1763,"index":"C","name":"Another Array Problem","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["brute force","constructive algorithms","greedy"]},"1771:F":{"contestId":1771,"index":"F","name":"Hossam and Range Minimum Query","type":"PROGRAMMING","points":3500,"rating":2500,"tags":["binary search","bitmasks","data structures","hashing","probabilities","strings","trees"]},"1167:E":{"contestId":1167,"index":"E","name":"Range Deleting","type":"PROGRAMMING","rating":2100,"tags":["binary search","combinatorics","data structures","two pointers"]},"1059:B":{"contestId":1059,"index":"B","name":"Forgery","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["implementation"]},"1214:A":{"contestId":1214,"index":"A","name":"Optimal Currency Exchange","type":"PROGRAMMING","points":500,"rating":1400,"tags":["brute force","math"]},"906:B":{"contestId":906,"index":"B","name":"Seating of Students","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["brute force","constructive algorithms","math"]},"837:E":{"contestId":837,"index":"E","name":"Vasya's Function","type":"PROGRAMMING","rating":2100,"tags":["binary search","implementation","math"]},"862:C":{"contestId":862,"index":"C","name":"Mahmoud and Ehab and the xor","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["constructive algorithms"]},"1010:B":{"contestId":1010,"index":"B","name":"Rocket","type":"PROGRAMMING","points":750,"rating":1800,"tags":["binary search","interactive"]},"1061:D":{"contestId":1061,"index":"D","name":"TV Shows","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["data structures","greedy","implementation","sortings"]},"1622:E":{"contestId":1622,"index":"E","name":"Math Test","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","brute force","greedy"]},"1700:E":{"contestId":1700,"index":"E","name":"Serega the Pirate","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["brute force","constructive algorithms"]},"461:D":{"contestId":461,"index":"D","name":"Appleman and Complicated Task","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["dsu","math"]},"1070:L":{"contestId":1070,"index":"L","name":"Odd Federalization","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms"]},"1761:D":{"contestId":1761,"index":"D","name":"Carry Bit","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["combinatorics","math"]},"1098:C":{"contestId":1098,"index":"C","name":"Construct a tree","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},"633:E":{"contestId":633,"index":"E","name":"Startup Funding","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["binary search","constructive algorithms","data structures","probabilities","two pointers"]},"1741:G":{"contestId":1741,"index":"G","name":"Kirill and Company","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","brute force","dfs and similar","dp","flows","graphs","shortest paths"]},"1536:F":{"contestId":1536,"index":"F","name":"Omkar and Akmar","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["chinese remainder theorem","combinatorics","constructive algorithms","fft","games","geometry","math","meet-in-the-middle","string suffix structures"]},"550:E":{"contestId":550,"index":"E","name":"Brackets in Implications","type":"PROGRAMMING","points":3000,"rating":2200,"tags":["constructive algorithms","greedy","implementation","math"]},"837:F":{"contestId":837,"index":"F","name":"Prefix Sums","type":"PROGRAMMING","rating":2400,"tags":["binary search","brute force","combinatorics","math","matrices"]},"1468:J":{"contestId":1468,"index":"J","name":"Road Reform","type":"PROGRAMMING","rating":1800,"tags":["dsu","graphs","greedy"]},"1695:D1":{"contestId":1695,"index":"D1","name":"Tree Queries (Easy Version)","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["brute force","constructive algorithms","dfs and similar","dp","greedy","trees"]},"1748:D":{"contestId":1748,"index":"D","name":"ConstructOR ","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["bitmasks","chinese remainder theorem","combinatorics","constructive algorithms","math","number theory"]},"1748:E":{"contestId":1748,"index":"E","name":"Yet Another Array Counting Problem","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["binary search","data structures","divide and conquer","dp","flows","math","trees"]},"1748:F":{"contestId":1748,"index":"F","name":"Circular Xor Reversal","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["bitmasks","constructive algorithms"]},"109:E":{"contestId":109,"index":"E","name":"Lucky Interval","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["brute force","math"]},"1750:G":{"contestId":1750,"index":"G","name":"Doping","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["combinatorics","dp","math"]},"1251:F":{"contestId":1251,"index":"F","name":"Red-White Fence","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","fft"]},"722:D":{"contestId":722,"index":"D","name":"Generating Sets","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["binary search","data structures","dfs and similar","greedy","strings","trees"]},"1046:I":{"contestId":1046,"index":"I","name":"Say Hello","type":"PROGRAMMING","rating":2300,"tags":["geometry"]},"1204:D2":{"contestId":1204,"index":"D2","name":"Kirk and a Binary String (hard version)","type":"PROGRAMMING","points":750,"rating":2100,"tags":["data structures","greedy","math","strings"]},"1740:F":{"contestId":1740,"index":"F","name":"Conditional Mix","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","dp","math"]},"1238:E":{"contestId":1238,"index":"E","name":"Keyboard Purchase","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","dp"]},"1201:E2":{"contestId":1201,"index":"E2","name":"Knightmare (hard)","type":"PROGRAMMING","points":1000,"rating":3000,"tags":["graphs","interactive","shortest paths"]},"1201:E1":{"contestId":1201,"index":"E1","name":"Knightmare (easy)","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["graphs","interactive","shortest paths"]},"1468:L":{"contestId":1468,"index":"L","name":"Prime Divisors Selection","type":"PROGRAMMING","rating":2700,"tags":["binary search","greedy","math","number theory"]},"793:E":{"contestId":793,"index":"E","name":"Problem of offices","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["constructive algorithms","dfs and similar","dp","trees"]},"103861:H":{"contestId":103861,"index":"H","name":"Check Pattern is Good","type":"PROGRAMMING","tags":[]},"1202:F":{"contestId":1202,"index":"F","name":"You Are Given Some Letters...","type":"PROGRAMMING","rating":2700,"tags":["binary search","implementation","math"]},"57:E":{"contestId":57,"index":"E","name":"Chess","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["math","shortest paths"]},"103994:A":{"contestId":103994,"index":"A","name":"Фальшивая стопка","type":"PROGRAMMING","tags":[]},"1186:E":{"contestId":1186,"index":"E","name":"Vus the Cossack and a Field","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["divide and conquer","implementation","math"]},"1310:F":{"contestId":1310,"index":"F","name":"Bad Cryptography","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["math","number theory"]},"1749:F":{"contestId":1749,"index":"F","name":"Distance to the Path","type":"PROGRAMMING","rating":2800,"tags":["data structures","dfs and similar","trees"]},"1100:F":{"contestId":1100,"index":"F","name":"Ivan and Burgers","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","divide and conquer","greedy","math"]},"1407:E":{"contestId":1407,"index":"E","name":"Egor in the Republic of Dagestan","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","shortest paths"]},"1734:F":{"contestId":1734,"index":"F","name":"Zeros and Ones","type":"PROGRAMMING","points":3250,"rating":2500,"tags":["bitmasks","divide and conquer","dp","math"]},"930:D":{"contestId":930,"index":"D","name":"Game with Tokens","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["data structures","games","implementation"]},"1732:D2":{"contestId":1732,"index":"D2","name":"Balance (Hard version)","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["brute force","data structures","number theory"]},"1732:D1":{"contestId":1732,"index":"D1","name":"Balance (Easy version)","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["brute force","data structures","implementation","number theory"]},"1732:C2":{"contestId":1732,"index":"C2","name":"Sheikh (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2100,"tags":["binary search","bitmasks","brute force","greedy","implementation","two pointers"]},"1732:C1":{"contestId":1732,"index":"C1","name":"Sheikh (Easy version)","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["binary search","bitmasks","greedy","two pointers"]},"1667:E":{"contestId":1667,"index":"E","name":"Centroid Probabilities","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["combinatorics","dp","fft","math"]},"1744:F":{"contestId":1744,"index":"F","name":"MEX vs MED","type":"PROGRAMMING","rating":2000,"tags":["math","two pointers"]},"1744:E2":{"contestId":1744,"index":"E2","name":"Divisible Numbers (hard version)","type":"PROGRAMMING","rating":1900,"tags":["brute force","math","number theory"]},"1574:F":{"contestId":1574,"index":"F","name":"Occurrences","type":"PROGRAMMING","rating":2700,"tags":["combinatorics","dfs and similar","dp","dsu","fft","graphs"]},"1396:E":{"contestId":1396,"index":"E","name":"Distance Matching","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["constructive algorithms","dfs and similar","trees"]},"852:C":{"contestId":852,"index":"C","name":"Property","type":"PROGRAMMING","rating":2100,"tags":["greedy","sortings"]},"1612:G":{"contestId":1612,"index":"G","name":"Max Sum Array","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","constructive algorithms","greedy","sortings"]},"1735:E":{"contestId":1735,"index":"E","name":"House Planning","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["constructive algorithms","data structures","graph matchings","greedy"]},"20:C":{"contestId":20,"index":"C","name":"Dijkstra?","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["graphs","shortest paths"]},"856:C":{"contestId":856,"index":"C","name":"Eleventh Birthday","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dp","math"]},"622:E":{"contestId":622,"index":"E","name":"Ants in Leaves","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","greedy","sortings","trees"]},"1188:A2":{"contestId":1188,"index":"A2","name":"Add on a Tree: Revolution","type":"PROGRAMMING","points":750,"rating":2500,"tags":["constructive algorithms","dfs and similar","implementation","trees"]},"1272:F":{"contestId":1272,"index":"F","name":"Two Bracket Sequences","type":"PROGRAMMING","rating":2200,"tags":["dp","strings","two pointers"]},"1495:D":{"contestId":1495,"index":"D","name":"BFS Trees","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["combinatorics","dfs and similar","graphs","math","shortest paths","trees"]},"1131:F":{"contestId":1131,"index":"F","name":"Asya And Kittens","type":"PROGRAMMING","points":3000,"rating":1700,"tags":["constructive algorithms","dsu"]},"1119:H":{"contestId":1119,"index":"H","name":"Triple","type":"PROGRAMMING","points":3750,"rating":3200,"tags":["fft","math"]},"1119:G":{"contestId":1119,"index":"G","name":"Get Ready for the Battle","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["constructive algorithms","implementation"]},"1119:F":{"contestId":1119,"index":"F","name":"Niyaz and Small Degrees","type":"PROGRAMMING","points":3250,"rating":3400,"tags":["data structures","dp","trees"]},"1119:E":{"contestId":1119,"index":"E","name":"Pavel and Triangles","type":"PROGRAMMING","points":2500,"rating":1900,"tags":["brute force","dp","fft","greedy","ternary search"]},"1119:D":{"contestId":1119,"index":"D","name":"Frets On Fire","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["binary search","sortings"]},"1119:C":{"contestId":1119,"index":"C","name":"Ramesses and Corner Inversion","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["constructive algorithms","greedy","implementation","math"]},"1119:B":{"contestId":1119,"index":"B","name":"Alyona and a Narrow Fridge","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["binary search","flows","greedy","sortings"]},"1119:A":{"contestId":1119,"index":"A","name":"Ilya and a Colorful Walk","type":"PROGRAMMING","points":500,"rating":1100,"tags":["greedy","implementation"]},"990:G":{"contestId":990,"index":"G","name":"GCD Counting","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","dsu","number theory","trees"]},"1716:B":{"contestId":1716,"index":"B","name":"Permutation Chain","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},"1716:A":{"contestId":1716,"index":"A","name":"2-3 Moves","type":"PROGRAMMING","rating":800,"tags":["greedy","math"]},"1704:E":{"contestId":1704,"index":"E","name":"Count Seconds","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["brute force","constructive algorithms","dp","graphs","implementation","math"]},"1704:D":{"contestId":1704,"index":"D","name":"Magical Array","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["constructive algorithms","hashing","implementation","math"]},"1704:B":{"contestId":1704,"index":"B","name":"Luke is a Foodie","type":"PROGRAMMING","points":750,"rating":1000,"tags":["brute force","greedy","implementation"]},"1704:C":{"contestId":1704,"index":"C","name":"Virus","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["greedy","implementation","sortings"]},"865:E":{"contestId":865,"index":"E","name":"Hex Dyslexia","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["bitmasks","brute force","dp","graphs"]},"568:B":{"contestId":568,"index":"B","name":"Symmetric and Transitive","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["combinatorics","dp","math"]},"1710:C":{"contestId":1710,"index":"C","name":"XOR Triangle","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["bitmasks","brute force","constructive algorithms","dp","greedy","math"]},"1710:B":{"contestId":1710,"index":"B","name":"Rain","type":"PROGRAMMING","points":1000,"rating":2100,"tags":["binary search","brute force","data structures","geometry","greedy","implementation","math"]},"1710:A":{"contestId":1710,"index":"A","name":"Color the Picture","type":"PROGRAMMING","points":500,"rating":1500,"tags":["constructive algorithms","greedy","math"]},"101242:A":{"contestId":101242,"index":"A","name":"Balanced Diet","type":"PROGRAMMING","tags":[]},"280:C":{"contestId":280,"index":"C","name":"Game on Tree","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["implementation","math","probabilities","trees"]},"1407:A":{"contestId":1407,"index":"A","name":"Ahahahahahahahaha","type":"PROGRAMMING","points":500,"rating":1100,"tags":["constructive algorithms","math"]},"101221:G":{"contestId":101221,"index":"G","name":"Metal Processing Plant","type":"PROGRAMMING","tags":[]},"101242:K":{"contestId":101242,"index":"K","name":"String Theory","type":"PROGRAMMING","tags":[]},"101239:L":{"contestId":101239,"index":"L","name":"Weather Report","type":"PROGRAMMING","tags":[]},"101221:I":{"contestId":101221,"index":"I","name":"Sensor Network","type":"PROGRAMMING","tags":[]},"1407:B":{"contestId":1407,"index":"B","name":"Big Vova","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["brute force","greedy","math","number theory"]},"914:H":{"contestId":914,"index":"H","name":"Ember and Storm's Tree Game","type":"PROGRAMMING","points":3750,"rating":3400,"tags":["combinatorics","dp","games","trees"]},"1305:F":{"contestId":1305,"index":"F","name":"Kuroni and the Punishment","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["math","number theory","probabilities"]},"627:F":{"contestId":627,"index":"F","name":"Island Puzzle","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["dfs and similar","dsu","graphs","trees"]},"101142:I":{"contestId":101142,"index":"I","name":"Integral Polygons","type":"PROGRAMMING","tags":[]},"1193:B":{"contestId":1193,"index":"B","name":"Magic Tree","type":"PROGRAMMING","tags":["*special","data structures","dp","trees"]},"101239:E":{"contestId":101239,"index":"E","name":"Evolution in Parallel","type":"PROGRAMMING","tags":[]},"101612:E":{"contestId":101612,"index":"E","name":"Equal Numbers","type":"PROGRAMMING","tags":[]},"1407:D":{"contestId":1407,"index":"D","name":"Discrete Centrifugal Jumps","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["data structures","dp","graphs"]},"1407:C":{"contestId":1407,"index":"C","name":"Chocolate Bunny","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["constructive algorithms","interactive","math","two pointers"]},"101612:C":{"contestId":101612,"index":"C","name":"Consonant Fencity","type":"PROGRAMMING","tags":[]},"1257:F":{"contestId":1257,"index":"F","name":"Make Them Similar","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","brute force","hashing","meet-in-the-middle"]},"1526:D":{"contestId":1526,"index":"D","name":"Kill Anton","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["brute force","constructive algorithms","data structures","math","strings"]},"1687:E":{"contestId":1687,"index":"E","name":"Become Big For Me","type":"PROGRAMMING","points":2000,"rating":3500,"tags":["combinatorics","constructive algorithms","greedy","math","number theory"]},"1264:E":{"contestId":1264,"index":"E","name":"Beautiful League","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["constructive algorithms","flows","graph matchings"]},"1526:F":{"contestId":1526,"index":"F","name":"Median Queries","type":"PROGRAMMING","points":3500,"rating":3000,"tags":["constructive algorithms","interactive","probabilities"]},"1292:E":{"contestId":1292,"index":"E","name":"Rin and The Unknown Flower","type":"PROGRAMMING","points":2250,"rating":3500,"tags":["constructive algorithms","greedy","interactive","math"]},"804:E":{"contestId":804,"index":"E","name":"The same permutation ","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["constructive algorithms"]},"1268:D":{"contestId":1268,"index":"D","name":"Invertation in Tournament","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["brute force","divide and conquer","graphs","math"]},"1477:D":{"contestId":1477,"index":"D","name":"Nezzar and Hidden Permutations","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["constructive algorithms","dfs and similar","graphs"]},"1033:G":{"contestId":1033,"index":"G","name":"Chip Game","type":"PROGRAMMING","points":4000,"rating":3500,"tags":["games"]},"1442:F":{"contestId":1442,"index":"F","name":"Differentiating Games","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["games","interactive"]},"1464:F":{"contestId":1464,"index":"F","name":"My Beautiful Madness","type":"PROGRAMMING","points":3000,"rating":3500,"tags":["data structures","trees"]},"1286:E":{"contestId":1286,"index":"E","name":"Fedya the Potter Strikes Back","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["data structures","strings"]},"1696:F":{"contestId":1696,"index":"F","name":"Tree Recovery","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","trees"]},"1696:E":{"contestId":1696,"index":"E","name":"Placing Jinas","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["combinatorics","math"]},"1696:D":{"contestId":1696,"index":"D","name":"Permutation Graph","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["binary search","constructive algorithms","data structures","divide and conquer","greedy","shortest paths"]},"1696:C":{"contestId":1696,"index":"C","name":"Fishingprince Plays With Array","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","greedy","implementation","math"]},"1696:B":{"contestId":1696,"index":"B","name":"NIT Destroys the Universe","type":"PROGRAMMING","points":1000,"rating":900,"tags":["greedy"]},"1696:A":{"contestId":1696,"index":"A","name":"NIT orz!","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","greedy"]},"101190:I":{"contestId":101190,"index":"I","name":"Indiana Jones and the Uniform Cave","type":"PROGRAMMING","tags":[]},"1129:E":{"contestId":1129,"index":"E","name":"Legendary Tree","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["binary search","interactive","trees"]},"1012:F":{"contestId":1012,"index":"F","name":"Passports","type":"PROGRAMMING","points":2500,"rating":3400,"tags":["dp","implementation"]},"549:E":{"contestId":549,"index":"E","name":"Sasha Circle","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["geometry","math"]},"1666:E":{"contestId":1666,"index":"E","name":"Even Split","type":"PROGRAMMING","rating":2500,"tags":["binary search","constructive algorithms","greedy","math"]},"1666:D":{"contestId":1666,"index":"D","name":"Deletive Editing","type":"PROGRAMMING","rating":900,"tags":["greedy"]},"1666:F":{"contestId":1666,"index":"F","name":"Fancy Stack","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","dp","implementation"]},"1019:E":{"contestId":1019,"index":"E","name":"Raining season","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["data structures","divide and conquer","trees"]},"896:E":{"contestId":896,"index":"E","name":"Welcome home, Chtholly","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["data structures","dsu"]},"920:B":{"contestId":920,"index":"B","name":"Tea Queue","type":"PROGRAMMING","rating":1200,"tags":["implementation"]},"920:F":{"contestId":920,"index":"F","name":"SUM and REPLACE","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dsu","number theory"]},"920:G":{"contestId":920,"index":"G","name":"List Of Integers","type":"PROGRAMMING","rating":2200,"tags":["binary search","bitmasks","brute force","combinatorics","math","number theory"]},"920:A":{"contestId":920,"index":"A","name":"Water The Garden","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"920:C":{"contestId":920,"index":"C","name":"Swap Adjacent Elements","type":"PROGRAMMING","rating":1400,"tags":["dfs and similar","greedy","math","sortings","two pointers"]},"920:D":{"contestId":920,"index":"D","name":"Tanks","type":"PROGRAMMING","rating":2400,"tags":["dp","greedy","implementation"]},"920:E":{"contestId":920,"index":"E","name":"Connected Components?","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs"]},"1229:E2":{"contestId":1229,"index":"E2","name":"Marek and Matching (hard version)","type":"PROGRAMMING","points":1250,"rating":3200,"tags":["brute force","probabilities"]},"1229:E1":{"contestId":1229,"index":"E1","name":"Marek and Matching (easy version)","type":"PROGRAMMING","points":1500,"rating":3100,"tags":["brute force","probabilities"]},"1229:D":{"contestId":1229,"index":"D","name":"Wojtek and Card Tricks","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["math"]},"1775:C":{"contestId":1775,"index":"C","name":"Interesting Sequence","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["bitmasks","math"]},"1775:B":{"contestId":1775,"index":"B","name":"Gardener and the Array","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["bitmasks","constructive algorithms"]},"1775:A2":{"contestId":1775,"index":"A2","name":"Gardener and the Capybaras (hard version)","type":"PROGRAMMING","points":500,"rating":900,"tags":["constructive algorithms","greedy"]},"1775:A1":{"contestId":1775,"index":"A1","name":"Gardener and the Capybaras (easy version)","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","constructive algorithms","implementation"]},"1782:F":{"contestId":1782,"index":"F","name":"Bracket Insertion","type":"PROGRAMMING","points":3250,"rating":2700,"tags":["combinatorics","dp","probabilities","trees"]},"104065:E":{"contestId":104065,"index":"E","name":"Hammer to Fall","type":"PROGRAMMING","tags":[]},"1705:F":{"contestId":1705,"index":"F","name":"Mark and the Online Exam","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["bitmasks","constructive algorithms","interactive","probabilities"]},"104076:B":{"contestId":104076,"index":"B","name":"Torch","type":"PROGRAMMING","tags":[]},"1746:F":{"contestId":1746,"index":"F","name":"Kazaee","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","hashing","probabilities"]},"103470:I":{"contestId":103470,"index":"I","name":"Cloud Retainer's Game","type":"PROGRAMMING","tags":[]},"1764:G3":{"contestId":1764,"index":"G3","name":"Doremy's Perfect DS Class (Hard Version)","type":"PROGRAMMING","points":500,"rating":3300,"tags":["binary search","interactive"]},"1704:F":{"contestId":1704,"index":"F","name":"Colouring Game","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["constructive algorithms","dp","games"]},"1750:F":{"contestId":1750,"index":"F","name":"Majority","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["combinatorics","dp","math","strings"]},"103470:B":{"contestId":103470,"index":"B","name":"Puzzle in Inazuma","type":"PROGRAMMING","tags":[]},"1083:F":{"contestId":1083,"index":"F","name":"The Fair Nut and Amusing Xor","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["data structures"]},"721:E":{"contestId":721,"index":"E","name":"Road to Home","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["binary search","dp"]},"1239:F":{"contestId":1239,"index":"F","name":"Swiper, no swiping!","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["graphs","implementation"]},"643:C":{"contestId":643,"index":"C","name":"Levels and Regions","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["dp"]},"627:D":{"contestId":627,"index":"D","name":"Preorder Test","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["binary search","dfs and similar","dp","graphs","greedy","trees"]},"623:B":{"contestId":623,"index":"B","name":"Array GCD","type":"PROGRAMMING","points":1000,"rating":2300,"tags":["dp","greedy","number theory"]},"617:E":{"contestId":617,"index":"E","name":"XOR and Favorite Number","type":"PROGRAMMING","points":2750,"rating":2200,"tags":["data structures"]},"724:G":{"contestId":724,"index":"G","name":"Xor-matic Number of the Graph","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","graphs","math","number theory","trees"]},"650:C":{"contestId":650,"index":"C","name":"Table Compression","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["dfs and similar","dp","dsu","graphs","greedy"]},"643:E":{"contestId":643,"index":"E","name":"Bear and Destroying Subtrees","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["dp","math","probabilities","trees"]},"785:D":{"contestId":785,"index":"D","name":"Anton and School - 2","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","dp","math","number theory"]},"749:E":{"contestId":749,"index":"E","name":"Inversions After Shuffle","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["data structures","probabilities"]},"734:E":{"contestId":734,"index":"E","name":"Anton and Tree","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["dfs and similar","dp","trees"]},"819:E":{"contestId":819,"index":"E","name":"Mister B and Flight to the Moon","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["constructive algorithms","graphs"]},"817:F":{"contestId":817,"index":"F","name":"MEX Queries","type":"PROGRAMMING","rating":2300,"tags":["binary search","data structures","trees"]},"808:G":{"contestId":808,"index":"G","name":"Anthem of Berland","type":"PROGRAMMING","rating":2300,"tags":["dp","strings"]},"788:E":{"contestId":788,"index":"E","name":"New task","type":"PROGRAMMING","points":2250,"rating":2900,"tags":["data structures"]},"840:D":{"contestId":840,"index":"D","name":"Destiny","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["data structures","probabilities"]},"840:C":{"contestId":840,"index":"C","name":"On the Bench","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["combinatorics","dp"]},"833:B":{"contestId":833,"index":"B","name":"The Bakery","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["binary search","data structures","divide and conquer","dp","two pointers"]},"1770:H":{"contestId":1770,"index":"H","name":"Koxia, Mahiru and Winter Festival","type":"PROGRAMMING","points":4000,"rating":3500,"tags":["constructive algorithms"]},"1770:F":{"contestId":1770,"index":"F","name":"Koxia and Sequence","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["bitmasks","combinatorics","dp","math","number theory"]},"1770:E":{"contestId":1770,"index":"E","name":"Koxia and Tree","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["combinatorics","dfs and similar","dp","dsu","math","probabilities","trees"]},"1770:D":{"contestId":1770,"index":"D","name":"Koxia and Game","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["constructive algorithms","data structures","dfs and similar","dsu","flows","games","graph matchings","graphs","implementation"]},"1770:C":{"contestId":1770,"index":"C","name":"Koxia and Number Theory","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["brute force","chinese remainder theorem","math","number theory"]},"1770:B":{"contestId":1770,"index":"B","name":"Koxia and Permutation","type":"PROGRAMMING","points":750,"rating":1000,"tags":["constructive algorithms"]},"1770:A":{"contestId":1770,"index":"A","name":"Koxia and Whiteboards","type":"PROGRAMMING","points":500,"rating":1000,"tags":["brute force","greedy"]},"1774:H":{"contestId":1774,"index":"H","name":"Maximum Permutation","type":"PROGRAMMING","points":4000,"rating":3500,"tags":["constructive algorithms"]},"1774:F2":{"contestId":1774,"index":"F2","name":"Magician and Pigs (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2700,"tags":["binary search","brute force","data structures","implementation"]},"1774:D":{"contestId":1774,"index":"D","name":"Same Count One","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["brute force","constructive algorithms","greedy","implementation","two pointers"]},"1774:E":{"contestId":1774,"index":"E","name":"Two Chess Pieces","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["dfs and similar","dp","greedy","trees"]},"1774:C":{"contestId":1774,"index":"C","name":"Ice and Fire","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms","dp","greedy"]},"1774:B":{"contestId":1774,"index":"B","name":"Coloring","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["constructive algorithms","greedy","math"]},"1774:A":{"contestId":1774,"index":"A","name":"Add Plus Minus Sign","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"886:E":{"contestId":886,"index":"E","name":"Maximum Element","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["combinatorics","dp","math"]},"863:F":{"contestId":863,"index":"F","name":"Almost Permutation","type":"PROGRAMMING","rating":2200,"tags":["flows"]},"906:D":{"contestId":906,"index":"D","name":"Power Tower","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["chinese remainder theorem","math","number theory"]},"893:F":{"contestId":893,"index":"F","name":"Subtree Minimum Query","type":"PROGRAMMING","rating":2300,"tags":["data structures","trees"]},"894:E":{"contestId":894,"index":"E","name":"Ralph and Mushrooms","type":"PROGRAMMING","points":2500,"rating":2100,"tags":["dp","graphs"]},"908:G":{"contestId":908,"index":"G","name":"New Year and Original Order","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["dp","math"]},"908:D":{"contestId":908,"index":"D","name":"New Year and Arbitrary Arrangement","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["dp","math","probabilities"]},"1534:E":{"contestId":1534,"index":"E","name":"Lost Array","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["graphs","greedy","interactive","shortest paths"]},"1580:B":{"contestId":1580,"index":"B","name":"Mathematics Curriculum","type":"PROGRAMMING","points":1000,"rating":2600,"tags":["brute force","combinatorics","dp","trees"]},"1313:D":{"contestId":1313,"index":"D","name":"Happy New Year","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["bitmasks","dp","implementation"]},"1491:H":{"contestId":1491,"index":"H","name":"Yuezheng Ling and Dynamic Tree","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["data structures","trees"]},"241:B":{"contestId":241,"index":"B","name":"Friends","type":"PROGRAMMING","rating":2700,"tags":["binary search","bitmasks","data structures","math"]},"25:E":{"contestId":25,"index":"E","name":"Test","type":"PROGRAMMING","rating":2200,"tags":["hashing","strings"]},"1764:G1":{"contestId":1764,"index":"G1","name":"Doremy's Perfect DS Class (Easy Version)","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["binary search","interactive"]},"1764:H":{"contestId":1764,"index":"H","name":"Doremy's Paint 2","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["data structures"]},"1764:G2":{"contestId":1764,"index":"G2","name":"Doremy's Perfect DS Class (Medium Version)","type":"PROGRAMMING","points":500,"rating":3000,"tags":["binary search","interactive"]},"1764:F":{"contestId":1764,"index":"F","name":"Doremy's Experimental Tree","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","sortings","trees"]},"1764:A":{"contestId":1764,"index":"A","name":"Doremy's Paint","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy"]},"1764:B":{"contestId":1764,"index":"B","name":"Doremy's Perfect Math Class","type":"PROGRAMMING","points":1000,"rating":900,"tags":["math","number theory"]},"1764:C":{"contestId":1764,"index":"C","name":"Doremy's City Construction","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["graphs","greedy"]},"1764:D":{"contestId":1764,"index":"D","name":"Doremy's Pegging Game","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["combinatorics","dp","math"]},"1764:E":{"contestId":1764,"index":"E","name":"Doremy's Number Line","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["dp","greedy","sortings"]},"1761:G":{"contestId":1761,"index":"G","name":"Centroid Guess","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["interactive","probabilities","trees"]},"1761:F2":{"contestId":1761,"index":"F2","name":"Anti-median (Hard Version)","type":"PROGRAMMING","points":2000,"rating":3500,"tags":["combinatorics","dp","math"]},"1761:F1":{"contestId":1761,"index":"F1","name":"Anti-median (Easy Version)","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["dp","math"]},"1761:E":{"contestId":1761,"index":"E","name":"Make It Connected","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["binary search","brute force","constructive algorithms","dsu","graphs","greedy","matrices","trees","two pointers"]},"1761:C":{"contestId":1761,"index":"C","name":"Set Construction","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},"1761:B":{"contestId":1761,"index":"B","name":"Elimination of a Ring","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","greedy","implementation"]},"1761:A":{"contestId":1761,"index":"A","name":"Two Permutations","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","constructive algorithms"]},"963:E":{"contestId":963,"index":"E","name":"Circles of Waiting","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["math"]},"865:C":{"contestId":865,"index":"C","name":"Gotta Go Fast","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["binary search","dp"]},"1151:F":{"contestId":1151,"index":"F","name":"Sonya and Informatics","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["combinatorics","dp","matrices","probabilities"]},"123:E":{"contestId":123,"index":"E","name":"Maze","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["dfs and similar","dp","probabilities","trees"]},"398:B":{"contestId":398,"index":"B","name":"Painting The Wall","type":"PROGRAMMING","points":1000,"tags":["dp","probabilities"]},"1540:B":{"contestId":1540,"index":"B","name":"Tree Array","type":"PROGRAMMING","points":1250,"rating":2300,"tags":["brute force","combinatorics","dp","graphs","math","probabilities","trees"]},"605:E":{"contestId":605,"index":"E","name":"Intergalaxy Trips","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["probabilities","shortest paths"]},"1750:H":{"contestId":1750,"index":"H","name":"BinaryStringForces","type":"PROGRAMMING","points":3500,"rating":3500,"tags":["constructive algorithms","data structures","dp"]},"1750:E":{"contestId":1750,"index":"E","name":"Bracket Cost","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["binary search","data structures","divide and conquer","dp","greedy","strings"]},"1750:D":{"contestId":1750,"index":"D","name":"Count GCD","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["combinatorics","math","number theory"]},"1750:C":{"contestId":1750,"index":"C","name":"Complementary XOR","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["constructive algorithms","implementation"]},"1750:B":{"contestId":1750,"index":"B","name":"Maximum Substring","type":"PROGRAMMING","points":750,"rating":800,"tags":["brute force","greedy","implementation"]},"1750:A":{"contestId":1750,"index":"A","name":"Indirect Sort","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","implementation","math"]},"1654:E":{"contestId":1654,"index":"E","name":"Arithmetic Operations","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["brute force","data structures","graphs","math"]},"1654:D":{"contestId":1654,"index":"D","name":"Potion Brewing Class","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["dfs and similar","math","number theory","trees"]},"1654:C":{"contestId":1654,"index":"C","name":"Alice and the Cake","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["data structures","greedy","implementation","sortings"]},"1654:B":{"contestId":1654,"index":"B","name":"Prefix Removals","type":"PROGRAMMING","points":750,"rating":800,"tags":["strings"]},"1654:A":{"contestId":1654,"index":"A","name":"Maximum Cake Tastiness","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","implementation","sortings"]},"1654:G":{"contestId":1654,"index":"G","name":"Snowy Mountain","type":"PROGRAMMING","points":3500,"rating":2900,"tags":["data structures","dfs and similar","graphs","greedy","shortest paths","trees"]},"93:E":{"contestId":93,"index":"E","name":"Lostborn","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["dp","math","number theory"]},"1371:F":{"contestId":1371,"index":"F","name":"Raging Thunder","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["data structures","divide and conquer","implementation"]},"425:E":{"contestId":425,"index":"E","name":"Sereja and Sets","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["dp"]},"898:F":{"contestId":898,"index":"F","name":"Restoring the Expression","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["brute force","hashing","math"]},"1866:G":{"contestId":1866,"index":"G","name":"Grouped Carriages","type":"PROGRAMMING","rating":2100,"tags":["binary search","data structures","dp","flows","greedy"]},"1866:E":{"contestId":1866,"index":"E","name":"Elevators of Tamem","type":"PROGRAMMING","rating":2700,"tags":["dp"]},"1866:K":{"contestId":1866,"index":"K","name":"Keen Tree Calculation","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","dp","geometry","graphs","implementation","trees"]},"1866:I":{"contestId":1866,"index":"I","name":"Imagination Castle","type":"PROGRAMMING","rating":2300,"tags":["dp","games","two pointers"]},"1866:L":{"contestId":1866,"index":"L","name":"Lihmuf Balling","type":"PROGRAMMING","rating":2400,"tags":["binary search","brute force","math"]},"1866:J":{"contestId":1866,"index":"J","name":"Jackets and Packets","type":"PROGRAMMING","rating":2800,"tags":["dp"]},"1866:M":{"contestId":1866,"index":"M","name":"Mighty Rock Tower","type":"PROGRAMMING","rating":2400,"tags":["brute force","combinatorics","dp","math","probabilities"]},"1863:F":{"contestId":1863,"index":"F","name":"Divide, XOR, and Conquer","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","dp","math"]},"1866:F":{"contestId":1866,"index":"F","name":"Freak Joker Process","type":"PROGRAMMING","rating":3100,"tags":["binary search","data structures","sortings"]},"1866:D":{"contestId":1866,"index":"D","name":"Digital Wallet","type":"PROGRAMMING","rating":2300,"tags":["dp","greedy"]},"416:E":{"contestId":416,"index":"E","name":"President's Path","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["dp","graphs","shortest paths"]},"1331:D":{"contestId":1331,"index":"D","name":"Again?","type":"PROGRAMMING","tags":["*special","implementation"]},"727:A":{"contestId":727,"index":"A","name":"Transformation: from A to B","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["brute force","dfs and similar","math"]},"1081:G":{"contestId":1081,"index":"G","name":"Mergesort Strikes Back","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["math","probabilities"]},"1672:G":{"contestId":1672,"index":"G","name":"Cross Xor","type":"PROGRAMMING","points":2750,"rating":3200,"tags":["constructive algorithms","graphs","math","matrices"]},"360:E":{"contestId":360,"index":"E","name":"Levko and Game","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["graphs","greedy","shortest paths"]},"1394:D":{"contestId":1394,"index":"D","name":"Boboniu and Jianghu","type":"PROGRAMMING","points":1750,"rating":2800,"tags":["dp","greedy","sortings","trees"]},"830:E":{"contestId":830,"index":"E","name":"Perpetual Motion Machine","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["constructive algorithms","dp","graphs","implementation","math","trees"]},"1175:G":{"contestId":1175,"index":"G","name":"Yet Another Partiton Problem","type":"PROGRAMMING","rating":3000,"tags":["data structures","divide and conquer","dp","geometry","two pointers"]},"1158:F":{"contestId":1158,"index":"F","name":"Density of subarrays","type":"PROGRAMMING","points":2750,"rating":3500,"tags":["dp","math"]},"1250:D":{"contestId":1250,"index":"D","name":"Conference Problem","type":"PROGRAMMING","rating":3000,"tags":["dp"]},"1556:G":{"contestId":1556,"index":"G","name":"Gates to Another World","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["bitmasks","data structures","dsu","two pointers"]},"566:E":{"contestId":566,"index":"E","name":"Restoring Map","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["bitmasks","constructive algorithms","trees"]},"925:E":{"contestId":925,"index":"E","name":"May Holidays","type":"PROGRAMMING","points":2750,"rating":2900,"tags":["data structures","trees"]},"1316:E":{"contestId":1316,"index":"E","name":"Team Building","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["bitmasks","dp","greedy","sortings"]},"1681:E":{"contestId":1681,"index":"E","name":"Labyrinth Adventures","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","matrices","shortest paths"]},"1774:G":{"contestId":1774,"index":"G","name":"Segment Covering","type":"PROGRAMMING","points":3250,"rating":3200,"tags":["brute force","combinatorics","constructive algorithms","data structures","dp","trees"]},"1835:D":{"contestId":1835,"index":"D","name":"Doctor's Brown Hypothesis","type":"PROGRAMMING","points":1750,"rating":2900,"tags":["dfs and similar","graphs","math","number theory"]},"1835:B":{"contestId":1835,"index":"B","name":"Lottery","type":"PROGRAMMING","points":1250,"rating":2500,"tags":["binary search","brute force","greedy","math","two pointers"]},"755:G":{"contestId":755,"index":"G","name":"PolandBall and Many Other Balls","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["combinatorics","divide and conquer","dp","fft","math","number theory"]},"438:E":{"contestId":438,"index":"E","name":"The Child and Binary Tree","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["combinatorics","divide and conquer","fft","number theory"]},"163:E":{"contestId":163,"index":"E","name":"e-Government","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","dfs and similar","dp","strings","trees"]},"1511:G":{"contestId":1511,"index":"G","name":"Chips on a Board","type":"PROGRAMMING","rating":2700,"tags":["bitmasks","brute force","data structures","dp","games","two pointers"]},"1583:F":{"contestId":1583,"index":"F","name":"Defender of Childhood Dreams","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["bitmasks","constructive algorithms","divide and conquer"]},"1228:E":{"contestId":1228,"index":"E","name":"Another Filling the Grid","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","dp","math"]},"1156:E":{"contestId":1156,"index":"E","name":"Special Segments of Permutation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dsu","two pointers"]},"213:E":{"contestId":213,"index":"E","name":"Two Permutations","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["data structures","hashing","strings"]},"1322:C":{"contestId":1322,"index":"C","name":"Instant Noodles","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["graphs","hashing","math","number theory"]},"1693:D":{"contestId":1693,"index":"D","name":"Decinc Dividing","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["brute force","data structures","divide and conquer","dp","greedy"]},"1815:B":{"contestId":1815,"index":"B","name":"Sum Graph","type":"PROGRAMMING","points":1250,"rating":2000,"tags":["brute force","constructive algorithms","graphs","implementation","interactive","shortest paths","trees"]},"538:H":{"contestId":538,"index":"H","name":"Summer Dichotomy","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["2-sat","data structures","dfs and similar","greedy"]},"1500:C":{"contestId":1500,"index":"C","name":"Matrix Sorting","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["bitmasks","brute force","constructive algorithms","greedy","two pointers"]},"1572:B":{"contestId":1572,"index":"B","name":"Xor of 3","type":"PROGRAMMING","points":1250,"rating":2500,"tags":["brute force","constructive algorithms","greedy","two pointers"]},"1780:F":{"contestId":1780,"index":"F","name":"Three Chairs","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["bitmasks","brute force","combinatorics","data structures","dp","number theory","sortings"]},"103451:B":{"contestId":103451,"index":"B","name":"Sum of sums","type":"PROGRAMMING","tags":[]},"1588:B":{"contestId":1588,"index":"B","name":"Guess the Permutation","type":"PROGRAMMING","points":1000,"rating":2000,"tags":["binary search","combinatorics","implementation","interactive"]},"1495:B":{"contestId":1495,"index":"B","name":"Let's Go Hiking","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["games","greedy"]},"1783:G":{"contestId":1783,"index":"G","name":"Weighed Tree Radius","type":"PROGRAMMING","rating":2800,"tags":["data structures","divide and conquer","implementation","trees"]},"1548:A":{"contestId":1548,"index":"A","name":"Web of Lies","type":"PROGRAMMING","points":500,"rating":1400,"tags":["brute force","graphs","greedy"]},"860:D":{"contestId":860,"index":"D","name":"Wizard's Tour","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["dfs and similar","graphs","greedy"]},"1508:B":{"contestId":1508,"index":"B","name":"Almost Sorted","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["binary search","combinatorics","constructive algorithms","implementation"]},"1685:C":{"contestId":1685,"index":"C","name":"Bring Balance","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["brute force","constructive algorithms","greedy"]},"1290:C":{"contestId":1290,"index":"C","name":"Prefix Enlightenment","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["dfs and similar","dsu","graphs"]},"954:H":{"contestId":954,"index":"H","name":"Path Counting","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","dp"]},"1763:A":{"contestId":1763,"index":"A","name":"Absolute Maximization","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","constructive algorithms","greedy","math"]},"1763:B":{"contestId":1763,"index":"B","name":"Incinerate","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["binary search","brute force","data structures","implementation","math","sortings"]},"845:E":{"contestId":845,"index":"E","name":"Fire in the City","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures"]},"1073:F":{"contestId":1073,"index":"F","name":"Choosing Two Paths","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","dp","greedy","trees"]},"104023:F":{"contestId":104023,"index":"F","name":"Mooncake Delivery","type":"PROGRAMMING","tags":[]},"1379:F2":{"contestId":1379,"index":"F2","name":"Chess Strikes Back (hard version)","type":"PROGRAMMING","points":1500,"rating":2800,"tags":["data structures","divide and conquer"]},"1000:G":{"contestId":1000,"index":"G","name":"Two-Paths","type":"PROGRAMMING","rating":2700,"tags":["data structures","dp","trees"]},"908:F":{"contestId":908,"index":"F","name":"New Year and Rainbow Roads","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["graphs","greedy","implementation"]},"962:E":{"contestId":962,"index":"E","name":"Byteland, Berland and Disputed Cities","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy"]},"1455:G":{"contestId":1455,"index":"G","name":"Forbidden Value","type":"PROGRAMMING","rating":2900,"tags":["data structures","dp"]},"612:F":{"contestId":612,"index":"F","name":"Simba on the Circle","type":"PROGRAMMING","rating":2600,"tags":["dp"]},"1340:D":{"contestId":1340,"index":"D","name":"Nastya and Time Machine","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},"860:E":{"contestId":860,"index":"E","name":"Arkady and a Nobody-men","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["data structures","dfs and similar","trees"]},"1104:B":{"contestId":1104,"index":"B","name":"Game with string","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["data structures","implementation","math"]},"963:D":{"contestId":963,"index":"D","name":"Frequency of String","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["hashing","string suffix structures","strings"]},"1731:F":{"contestId":1731,"index":"F","name":"Function Sum","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["brute force","combinatorics","dp","fft","math"]},"1334:F":{"contestId":1334,"index":"F","name":"Strange Function","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","dp","greedy"]},"1766:E":{"contestId":1766,"index":"E","name":"Decomposition","type":"PROGRAMMING","rating":2300,"tags":["binary search","brute force","data structures","divide and conquer","dp","two pointers"]},"1766:D":{"contestId":1766,"index":"D","name":"Lucky Chains","type":"PROGRAMMING","rating":1600,"tags":["math","number theory"]},"1766:C":{"contestId":1766,"index":"C","name":"Hamiltonian Wall","type":"PROGRAMMING","rating":1300,"tags":["dp","implementation"]},"1766:B":{"contestId":1766,"index":"B","name":"Notepad#","type":"PROGRAMMING","rating":1000,"tags":["implementation"]},"1766:A":{"contestId":1766,"index":"A","name":"Extremely Round","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation"]},"797:F":{"contestId":797,"index":"F","name":"Mice and Holes","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","greedy","sortings"]},"1327:G":{"contestId":1327,"index":"G","name":"Letters and Question Marks","type":"PROGRAMMING","rating":2800,"tags":["bitmasks","dp","string suffix structures"]},"710:F":{"contestId":710,"index":"F","name":"String Set Queries","type":"PROGRAMMING","rating":2400,"tags":["brute force","data structures","hashing","interactive","string suffix structures","strings"]},"1763:F":{"contestId":1763,"index":"F","name":"Edge Queries","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","dfs and similar","dp","dsu","graphs","trees"]},"911:F":{"contestId":911,"index":"F","name":"Tree Destruction","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},"961:F":{"contestId":961,"index":"F","name":"k-substrings","type":"PROGRAMMING","rating":2700,"tags":["binary search","hashing","string suffix structures"]},"976:F":{"contestId":976,"index":"F","name":"Minimal k-covering","type":"PROGRAMMING","rating":2500,"tags":["flows","graphs"]},"1772:G":{"contestId":1772,"index":"G","name":"Gaining Rating","type":"PROGRAMMING","rating":2200,"tags":["binary search","greedy","implementation","math","sortings","two pointers"]},"1535:F":{"contestId":1535,"index":"F","name":"String Distance","type":"PROGRAMMING","rating":3000,"tags":["binary search","brute force","data structures","hashing","implementation","strings"]},"1380:G":{"contestId":1380,"index":"G","name":"Circular Dungeon","type":"PROGRAMMING","rating":2600,"tags":["greedy","math","probabilities"]},"845:F":{"contestId":845,"index":"F","name":"Guards In The Storehouse","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","dp"]},"1622:F":{"contestId":1622,"index":"F","name":"Quadratic Set","type":"PROGRAMMING","rating":2900,"tags":["constructive algorithms","hashing","math","number theory"]},"665:F":{"contestId":665,"index":"F","name":"Four Divisors","type":"PROGRAMMING","rating":2400,"tags":["data structures","dp","math","number theory","sortings","two pointers"]},"1194:G":{"contestId":1194,"index":"G","name":"Another Meme Problem","type":"PROGRAMMING","rating":2700,"tags":["dp"]},"1194:F":{"contestId":1194,"index":"F","name":"Crossword Expert","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dp","number theory","probabilities","two pointers"]},"1187:G":{"contestId":1187,"index":"G","name":"Gang Up","type":"PROGRAMMING","rating":2500,"tags":["flows","graphs"]},"102916:C":{"contestId":102916,"index":"C","name":"Cyclically Shifted Maze","type":"PROGRAMMING","tags":[]},"1739:C":{"contestId":1739,"index":"C","name":"Card Game","type":"PROGRAMMING","rating":1500,"tags":["combinatorics","constructive algorithms","dp","games"]},"1739:B":{"contestId":1739,"index":"B","name":"Array Recovery","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","greedy","math"]},"1739:A":{"contestId":1739,"index":"A","name":"Immobile Knight","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1739:D":{"contestId":1739,"index":"D","name":"Reset K Edges","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","dfs and similar","graphs","greedy","trees"]},"1739:F":{"contestId":1739,"index":"F","name":"Keyboard Design","type":"PROGRAMMING","rating":2600,"tags":["bitmasks","data structures","dp","string suffix structures","strings"]},"1740:E":{"contestId":1740,"index":"E","name":"Hanging Hearts","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["constructive algorithms","data structures","dfs and similar","dp","greedy","trees"]},"1740:D":{"contestId":1740,"index":"D","name":"Knowledge Cards","type":"PROGRAMMING","points":1750,"rating":1500,"tags":["constructive algorithms","data structures"]},"1740:C":{"contestId":1740,"index":"C","name":"Bricks and Bags","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","games","greedy","sortings"]},"1740:B":{"contestId":1740,"index":"B","name":"Jumbo Extra Cheese 2","type":"PROGRAMMING","points":1000,"rating":800,"tags":["geometry","greedy","sortings"]},"1740:A":{"contestId":1740,"index":"A","name":"Factorise N+M","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","number theory"]},"103990:E":{"contestId":103990,"index":"E","name":"Etched Emerald Orbs","type":"PROGRAMMING","tags":[]},"103990:H":{"contestId":103990,"index":"H","name":"Heximal","type":"PROGRAMMING","tags":[]},"102576:K":{"contestId":102576,"index":"K","name":"To argue, or not to argue","type":"PROGRAMMING","tags":[]},"1749:E":{"contestId":1749,"index":"E","name":"Cactus Wall","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},"1741:A":{"contestId":1741,"index":"A","name":"Compare T-Shirt Sizes","type":"PROGRAMMING","rating":800,"tags":["implementation","implementation","strings"]},"1741:B":{"contestId":1741,"index":"B","name":"Funny Permutation","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},"1741:C":{"contestId":1741,"index":"C","name":"Minimize the Thickness","type":"PROGRAMMING","rating":1100,"tags":["brute force","greedy","math","two pointers"]},"1741:D":{"contestId":1741,"index":"D","name":"Masha and a Beautiful Tree","type":"PROGRAMMING","rating":1300,"tags":["dfs and similar","divide and conquer","graphs","sortings","trees"]},"1741:E":{"contestId":1741,"index":"E","name":"Sending a Sequence Over the Network","type":"PROGRAMMING","rating":1600,"tags":["dp"]},"1741:F":{"contestId":1741,"index":"F","name":"Multi-Colored Segments","type":"PROGRAMMING","rating":2000,"tags":["binary search","data structures","math","sortings"]},"1404:E":{"contestId":1404,"index":"E","name":"Bricks","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["flows","graph matchings","graphs"]},"1307:G":{"contestId":1307,"index":"G","name":"Cow and Exercise","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["flows","graphs","shortest paths"]},"1737:F":{"contestId":1737,"index":"F","name":"Ela and Prime GCD","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["constructive algorithms","math","number theory"]},"1737:E":{"contestId":1737,"index":"E","name":"Ela Goes Hiking","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["combinatorics","dp","math","probabilities"]},"1737:C":{"contestId":1737,"index":"C","name":"Ela and Crickets","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["constructive algorithms","games","implementation","math"]},"1737:B":{"contestId":1737,"index":"B","name":"Ela's Fitness and the Luxury Number","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["binary search","implementation","math"]},"1737:A":{"contestId":1737,"index":"A","name":"Ela Sorting Books","type":"PROGRAMMING","points":500,"rating":900,"tags":["greedy","implementation","strings"]},"1737:D":{"contestId":1737,"index":"D","name":"Ela and the Wiring Wizard","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["brute force","dp","graphs","greedy","implementation","shortest paths"]},"1195:F":{"contestId":1195,"index":"F","name":"Geometers Anonymous Club","type":"PROGRAMMING","points":3500,"rating":2500,"tags":["data structures","geometry","math","sortings"]},"582:E":{"contestId":582,"index":"E","name":"Boolean Function","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["bitmasks","dp","expression parsing"]},"101161:J":{"contestId":101161,"index":"J","name":"Printing Press","type":"PROGRAMMING","tags":[]},"103861:D":{"contestId":103861,"index":"D","name":"Two Walls","type":"PROGRAMMING","tags":[]},"585:E":{"contestId":585,"index":"E","name":"Present for Vitalik the Philatelist ","type":"PROGRAMMING","points":2250,"rating":2900,"tags":["combinatorics","math","number theory"]},"100257:E":{"contestId":100257,"index":"E","name":"Edges Are Too Sharp!","type":"PROGRAMMING","tags":[]},"1704:H1":{"contestId":1704,"index":"H1","name":"Game of AI (easy version)","type":"PROGRAMMING","points":2250,"rating":3200,"tags":["combinatorics","constructive algorithms","dp","fft","math"]},"1706:E":{"contestId":1706,"index":"E","name":"Qpwoeirut and Vertices","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["binary search","data structures","dfs and similar","divide and conquer","dsu","greedy","trees"]},"1706:D2":{"contestId":1706,"index":"D2","name":"Chopping Carrots (Hard Version)","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["brute force","constructive algorithms","data structures","dp","greedy","math","number theory","two pointers"]},"1706:D1":{"contestId":1706,"index":"D1","name":"Chopping Carrots (Easy Version)","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["binary search","brute force","constructive algorithms","greedy","number theory"]},"1777:C":{"contestId":1777,"index":"C","name":"Quiz Master","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["binary search","math","number theory","sortings","two pointers"]},"1783:F":{"contestId":1783,"index":"F","name":"Double Sort II","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","flows","graph matchings","graphs"]},"1712:E1":{"contestId":1712,"index":"E1","name":"LCM Sum (easy version)","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["binary search","brute force","combinatorics","math","number theory","two pointers"]},"1712:E2":{"contestId":1712,"index":"E2","name":"LCM Sum (hard version)","type":"PROGRAMMING","points":750,"rating":2500,"tags":["brute force","data structures","math","number theory","two pointers"]},"1562:D1":{"contestId":1562,"index":"D1","name":"Two Hundred Twenty One (easy version)","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["data structures","dp","math"]},"1562:D2":{"contestId":1562,"index":"D2","name":"Two Hundred Twenty One (hard version)","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["data structures","math"]},"1562:C":{"contestId":1562,"index":"C","name":"Rings","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["constructive algorithms","math"]},"1562:B":{"contestId":1562,"index":"B","name":"Scenes From a Memory","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["brute force","constructive algorithms","implementation","math","number theory"]},"1676:D":{"contestId":1676,"index":"D","name":"X-Sum","type":"PROGRAMMING","rating":1000,"tags":["brute force","greedy","implementation"]},"1782:E":{"contestId":1782,"index":"E","name":"Rectangle Shrinking","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["brute force","data structures","greedy","implementation","sortings"]},"1782:D":{"contestId":1782,"index":"D","name":"Many Perfect Squares","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["brute force","dp","math","number theory"]},"1722:E":{"contestId":1722,"index":"E","name":"Counting Rectangles","type":"PROGRAMMING","rating":1600,"tags":["brute force","data structures","dp","implementation"]},"1722:F":{"contestId":1722,"index":"F","name":"L-shapes","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","implementation"]},"1722:G":{"contestId":1722,"index":"G","name":"Even-Odd XOR","type":"PROGRAMMING","rating":1500,"tags":["bitmasks","constructive algorithms","greedy"]},"1726:C":{"contestId":1726,"index":"C","name":"Jatayu's Balanced Bracket Sequence","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["data structures","dsu","graphs","greedy"]},"1713:A":{"contestId":1713,"index":"A","name":"Traveling Salesman Problem","type":"PROGRAMMING","points":500,"rating":800,"tags":["geometry","greedy","implementation"]},"1713:B":{"contestId":1713,"index":"B","name":"Optimal Reduction","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","sortings"]},"1713:C":{"contestId":1713,"index":"C","name":"Build Permutation","type":"PROGRAMMING","points":1750,"rating":1200,"tags":["constructive algorithms","dp","math"]},"1713:F":{"contestId":1713,"index":"F","name":"Lost Array","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["bitmasks","combinatorics","constructive algorithms","dp","math"]},"1713:D":{"contestId":1713,"index":"D","name":"Tournament Countdown","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["constructive algorithms","greedy","interactive","number theory","probabilities"]},"1713:E":{"contestId":1713,"index":"E","name":"Cross Swapping","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["2-sat","data structures","dsu","greedy","matrices"]},"1715:A":{"contestId":1715,"index":"A","name":"Crossmarket","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","math"]},"1715:B":{"contestId":1715,"index":"B","name":"Beautiful Array","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["constructive algorithms","greedy","math"]},"1715:C":{"contestId":1715,"index":"C","name":"Monoblock","type":"PROGRAMMING","points":1750,"rating":1700,"tags":["combinatorics","data structures","implementation","math"]},"1769:A":{"contestId":1769,"index":"A","name":"Узкая дорога","type":"PROGRAMMING","rating":800,"tags":["*special","math"]},"1715:D":{"contestId":1715,"index":"D","name":"2+ doors","type":"PROGRAMMING","points":2250,"rating":1900,"tags":["2-sat","bitmasks","graphs","greedy"]},"1715:E":{"contestId":1715,"index":"E","name":"Long Way Home","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["data structures","divide and conquer","dp","geometry","graphs","greedy","shortest paths"]},"1773:F":{"contestId":1773,"index":"F","name":"Football","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms"]},"1720:E":{"contestId":1720,"index":"E","name":"Misha and Paintings","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["constructive algorithms","data structures","greedy","implementation","math"]},"1775:F":{"contestId":1775,"index":"F","name":"Laboratory on Pluto","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["constructive algorithms","dp","greedy","math"]},"1725:B":{"contestId":1725,"index":"B","name":"Basketball Together","type":"PROGRAMMING","rating":1000,"tags":["binary search","greedy","sortings"]},"1775:E":{"contestId":1775,"index":"E","name":"The Human Equation","type":"PROGRAMMING","points":2250,"rating":2100,"tags":["greedy","implementation"]},"1726:B":{"contestId":1726,"index":"B","name":"Mainak and Interesting Sequence","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["bitmasks","constructive algorithms","math"]},"1726:A":{"contestId":1726,"index":"A","name":"Mainak and Array","type":"PROGRAMMING","points":500,"rating":900,"tags":["greedy","math"]},"1728:B":{"contestId":1728,"index":"B","name":"Best Permutation","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy"]},"1728:A":{"contestId":1728,"index":"A","name":"Colored Balls: Revisited","type":"PROGRAMMING","rating":800,"tags":["brute force","greedy","implementation","sortings"]},"1725:A":{"contestId":1725,"index":"A","name":"Accumulation of Dominoes","type":"PROGRAMMING","rating":800,"tags":["math"]},"1729:D":{"contestId":1729,"index":"D","name":"Friends and the Restaurant","type":"PROGRAMMING","rating":1200,"tags":["greedy","sortings","two pointers"]},"1729:C":{"contestId":1729,"index":"C","name":"Jumping on Tiles","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","strings"]},"1729:B":{"contestId":1729,"index":"B","name":"Decode String","type":"PROGRAMMING","rating":800,"tags":["greedy","strings"]},"1729:A":{"contestId":1729,"index":"A","name":"Two Elevators","type":"PROGRAMMING","rating":800,"tags":["math"]},"1717:D":{"contestId":1717,"index":"D","name":"Madoka and The Corruption Scheme","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["combinatorics","constructive algorithms","greedy","math"]},"1717:E":{"contestId":1717,"index":"E","name":"Madoka and The Best University","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["math","number theory"]},"1720:D1":{"contestId":1720,"index":"D1","name":"Xor-Subsequence (easy version)","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["bitmasks","brute force","dp","strings","trees","two pointers"]},"1719:D2":{"contestId":1719,"index":"D2","name":"Burenka and Traditions (hard version)","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["bitmasks","dp","greedy","math"]},"1726:D":{"contestId":1726,"index":"D","name":"Edge Split","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","probabilities","trees"]},"1779:E":{"contestId":1779,"index":"E","name":"Anya's Simultaneous Exhibition","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["constructive algorithms","graphs","greedy","interactive","sortings"]},"1638:D":{"contestId":1638,"index":"D","name":"Big Brush","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["constructive algorithms","data structures","greedy","implementation"]},"1638:A":{"contestId":1638,"index":"A","name":"Reverse","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","math"]},"1728:C":{"contestId":1728,"index":"C","name":"Digital Logarithm","type":"PROGRAMMING","rating":1400,"tags":["data structures","greedy","sortings"]},"1728:D":{"contestId":1728,"index":"D","name":"Letter Picking","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","dp","games","two pointers"]},"1728:E":{"contestId":1728,"index":"E","name":"Red-Black Pepper","type":"PROGRAMMING","rating":2300,"tags":["brute force","data structures","greedy","math","number theory"]},"1729:G":{"contestId":1729,"index":"G","name":"Cut Substrings","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","dp","hashing","strings","two pointers"]},"1729:F":{"contestId":1729,"index":"F","name":"Kirei and the Linear Function","type":"PROGRAMMING","rating":1900,"tags":["hashing","math"]},"1730:A":{"contestId":1730,"index":"A","name":"Planets","type":"PROGRAMMING","points":500,"rating":800,"tags":["data structures","greedy","sortings"]},"1730:C":{"contestId":1730,"index":"C","name":"Minimum Notation","type":"PROGRAMMING","points":1500,"rating":1200,"tags":["data structures","greedy","math","sortings"]},"1730:B":{"contestId":1730,"index":"B","name":"Meeting on the Line","type":"PROGRAMMING","points":1000,"rating":1600,"tags":["binary search","geometry","greedy","implementation","math","ternary search"]},"1730:D":{"contestId":1730,"index":"D","name":"Prefixes and Suffixes","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["constructive algorithms","strings","two pointers"]},"1732:B":{"contestId":1732,"index":"B","name":"Ugu","type":"PROGRAMMING","points":750,"rating":900,"tags":["brute force","dp","greedy","implementation"]},"1732:A":{"contestId":1732,"index":"A","name":"Bestie","type":"PROGRAMMING","points":750,"rating":1000,"tags":["brute force","combinatorics","constructive algorithms","implementation","math","number theory"]},"1734:C":{"contestId":1734,"index":"C","name":"Removing Smallest Multiples","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["greedy","math"]},"1734:B":{"contestId":1734,"index":"B","name":"Bright, Nice, Brilliant","type":"PROGRAMMING","points":750,"rating":800,"tags":["constructive algorithms"]},"1734:A":{"contestId":1734,"index":"A","name":"Select Three Sticks","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","sortings"]},"1733:C":{"contestId":1733,"index":"C","name":"Parity Shuffle Sorting","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms","sortings"]},"1733:B":{"contestId":1733,"index":"B","name":"Rule of League","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms","math"]},"1733:A":{"contestId":1733,"index":"A","name":"Consecutive Sum","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","sortings"]},"1733:E":{"contestId":1733,"index":"E","name":"Conveyor","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["constructive algorithms","dp","math"]},"1733:D1":{"contestId":1733,"index":"D1","name":"Zero-One (Easy Version)","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","greedy","math"]},"1733:D2":{"contestId":1733,"index":"D2","name":"Zero-One (Hard Version)","type":"PROGRAMMING","points":750,"rating":2000,"tags":["dp","greedy"]},"1731:E":{"contestId":1731,"index":"E","name":"Graph Cost","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["dp","greedy","math","number theory"]},"1734:E":{"contestId":1734,"index":"E","name":"Rectangular Congruence","type":"PROGRAMMING","points":2250,"rating":2100,"tags":["constructive algorithms","number theory"]},"1729:E":{"contestId":1729,"index":"E","name":"Guess the Cycle Size","type":"PROGRAMMING","rating":1800,"tags":["interactive","probabilities"]},"1734:D":{"contestId":1734,"index":"D","name":"Slime Escape","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["data structures","dp","greedy","two pointers"]},"1743:D":{"contestId":1743,"index":"D","name":"Problem with Random Tests","type":"PROGRAMMING","rating":1700,"tags":["brute force","dp","greedy","probabilities"]},"1772:F":{"contestId":1772,"index":"F","name":"Copy of a Copy of a Copy","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","dfs and similar","graphs","implementation","sortings"]},"1772:E":{"contestId":1772,"index":"E","name":"Permutation Game","type":"PROGRAMMING","rating":1700,"tags":["games"]},"1772:D":{"contestId":1772,"index":"D","name":"Absolute Sorting","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","math"]},"1772:C":{"contestId":1772,"index":"C","name":"Different Differences","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","greedy","math"]},"1772:B":{"contestId":1772,"index":"B","name":"Matrix Rotation","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation"]},"1767:C":{"contestId":1767,"index":"C","name":"Count Binary Strings","type":"PROGRAMMING","rating":2100,"tags":["data structures","dp"]},"1772:A":{"contestId":1772,"index":"A","name":"A+B?","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1738:B":{"contestId":1738,"index":"B","name":"Prefix Sum Addicts","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["constructive algorithms","greedy","math","sortings"]},"1762:E":{"contestId":1762,"index":"E","name":"Tree Sum","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["combinatorics","math","trees"]},"1762:D":{"contestId":1762,"index":"D","name":"GCD Queries ","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["constructive algorithms","interactive","number theory"]},"1747:D":{"contestId":1747,"index":"D","name":"Yet Another Problem","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["binary search","bitmasks","constructive algorithms","data structures"]},"1738:A":{"contestId":1738,"index":"A","name":"Glory Addicts","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","implementation","sortings"]},"1673:F":{"contestId":1673,"index":"F","name":"Anti-Theft Road Planning","type":"PROGRAMMING","points":3250,"rating":2400,"tags":["bitmasks","constructive algorithms","divide and conquer","greedy","interactive","math"]},"1738:C":{"contestId":1738,"index":"C","name":"Even Number Addicts","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["dp","games","greedy","math"]},"1738:D":{"contestId":1738,"index":"D","name":"Permutation Addicts","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","data structures","dfs and similar","dsu","graphs","trees"]},"1738:E":{"contestId":1738,"index":"E","name":"Balance Addicts","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["combinatorics","dp","math","two pointers"]},"1742:C":{"contestId":1742,"index":"C","name":"Stripes","type":"PROGRAMMING","rating":900,"tags":["implementation"]},"1742:B":{"contestId":1742,"index":"B","name":"Increasing","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation","sortings"]},"1742:D":{"contestId":1742,"index":"D","name":"Coprime","type":"PROGRAMMING","rating":1100,"tags":["brute force","greedy","number theory"]},"1742:E":{"contestId":1742,"index":"E","name":"Scuza","type":"PROGRAMMING","rating":1200,"tags":["binary search","greedy","math"]},"1742:F":{"contestId":1742,"index":"F","name":"Smaller","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","greedy","strings"]},"1742:G":{"contestId":1742,"index":"G","name":"Orray","type":"PROGRAMMING","rating":1500,"tags":["bitmasks","brute force","greedy","math","sortings"]},"1742:A":{"contestId":1742,"index":"A","name":"Sum","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1743:F":{"contestId":1743,"index":"F","name":"Intersection and Union","type":"PROGRAMMING","rating":2300,"tags":["data structures","dp","matrices","probabilities"]},"1743:C":{"contestId":1743,"index":"C","name":"Save the Magazines","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","dp","greedy"]},"1743:B":{"contestId":1743,"index":"B","name":"Permutation Value","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy"]},"1743:A":{"contestId":1743,"index":"A","name":"Password","type":"PROGRAMMING","rating":800,"tags":["brute force","combinatorics","implementation","math"]},"1744:E1":{"contestId":1744,"index":"E1","name":"Divisible Numbers (easy version)","type":"PROGRAMMING","rating":1500,"tags":["brute force","math","number theory"]},"1744:D":{"contestId":1744,"index":"D","name":"Divisibility by 2^n","type":"PROGRAMMING","rating":1200,"tags":["greedy","math","sortings"]},"1744:C":{"contestId":1744,"index":"C","name":"Traffic Light","type":"PROGRAMMING","rating":1000,"tags":["binary search","implementation","two pointers"]},"1744:B":{"contestId":1744,"index":"B","name":"Even-Odd Increments ","type":"PROGRAMMING","rating":800,"tags":["implementation","math"]},"1744:A":{"contestId":1744,"index":"A","name":"Number Replacement","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation"]},"1765:N":{"contestId":1765,"index":"N","name":"Number Reduction","type":"PROGRAMMING","rating":1500,"tags":["greedy"]},"1765:M":{"contestId":1765,"index":"M","name":"Minimum LCM","type":"PROGRAMMING","rating":1000,"tags":["math","number theory"]},"1765:K":{"contestId":1765,"index":"K","name":"Torus Path","type":"PROGRAMMING","rating":1500,"tags":["greedy","math"]},"1765:E":{"contestId":1765,"index":"E","name":"Exchange","type":"PROGRAMMING","rating":1000,"tags":["brute force","math"]},"1765:D":{"contestId":1765,"index":"D","name":"Watch the Videos","type":"PROGRAMMING","rating":1700,"tags":["binary search","constructive algorithms","two pointers"]},"1765:B":{"contestId":1765,"index":"B","name":"Broken Keyboard","type":"PROGRAMMING","rating":800,"tags":["greedy"]},"1746:C":{"contestId":1746,"index":"C","name":"Permutation Operations","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["constructive algorithms","greedy","implementation","math"]},"1746:B":{"contestId":1746,"index":"B","name":"Rebellion","type":"PROGRAMMING","points":1000,"rating":800,"tags":["constructive algorithms","greedy","two pointers"]},"1746:A":{"contestId":1746,"index":"A","name":"Maxmina","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy"]},"1747:C":{"contestId":1747,"index":"C","name":"Swap Game","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["games"]},"1747:B":{"contestId":1747,"index":"B","name":"BAN BAN","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms"]},"1747:A":{"contestId":1747,"index":"A","name":"Two Groups","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy"]},"1748:C":{"contestId":1748,"index":"C","name":"Zero-Sum Prefixes","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["brute force","data structures","dp","greedy","implementation"]},"1748:B":{"contestId":1748,"index":"B","name":"Diverse Substrings","type":"PROGRAMMING","points":1000,"rating":1400,"tags":["brute force","implementation","strings"]},"1748:A":{"contestId":1748,"index":"A","name":"The Ultimate Square","type":"PROGRAMMING","points":500,"rating":800,"tags":["math"]},"1749:C":{"contestId":1749,"index":"C","name":"Number Game","type":"PROGRAMMING","rating":1400,"tags":["binary search","data structures","games","greedy","implementation"]},"1749:B":{"contestId":1749,"index":"B","name":"Death's Blessing","type":"PROGRAMMING","rating":900,"tags":["greedy"]},"1749:A":{"contestId":1749,"index":"A","name":"Cowardly Rooks","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation"]},"1749:D":{"contestId":1749,"index":"D","name":"Counting Arrays","type":"PROGRAMMING","rating":1900,"tags":["combinatorics","dp","math","number theory"]},"1760:G":{"contestId":1760,"index":"G","name":"SlavicG's Favorite Problem","type":"PROGRAMMING","rating":1700,"tags":["bitmasks","dfs and similar","graphs"]},"1754:B":{"contestId":1754,"index":"B","name":"Kevin and Permutation","type":"PROGRAMMING","points":1000,"rating":800,"tags":["constructive algorithms","greedy","math"]},"4:A":{"contestId":4,"index":"A","name":"Watermelon","type":"PROGRAMMING","rating":800,"tags":["brute force","math"]},"1759:G":{"contestId":1759,"index":"G","name":"Restore the Permutation","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","data structures","greedy","math"]},"1759:F":{"contestId":1759,"index":"F","name":"All Possible Digits","type":"PROGRAMMING","rating":1800,"tags":["binary search","data structures","greedy","math","number theory"]},"1759:E":{"contestId":1759,"index":"E","name":"The Humanoid","type":"PROGRAMMING","rating":1500,"tags":["brute force","dp","sortings"]},"1759:D":{"contestId":1759,"index":"D","name":"Make It Round","type":"PROGRAMMING","rating":1400,"tags":["brute force","number theory"]},"1759:C":{"contestId":1759,"index":"C","name":"Thermostat","type":"PROGRAMMING","rating":1100,"tags":["greedy","math","shortest paths"]},"1759:B":{"contestId":1759,"index":"B","name":"Lost Permutation","type":"PROGRAMMING","rating":800,"tags":["math"]},"1759:A":{"contestId":1759,"index":"A","name":"Yes-Yes?","type":"PROGRAMMING","rating":800,"tags":["implementation","strings"]},"101021:1":{"contestId":101021,"index":"1","name":"Guess the Number","type":"PROGRAMMING","tags":[]},"1753:C":{"contestId":1753,"index":"C","name":"Wish I Knew How to Sort","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["dp","math","probabilities"]},"1753:B":{"contestId":1753,"index":"B","name":"Factorial Divisibility","type":"PROGRAMMING","points":750,"rating":1600,"tags":["math","number theory"]},"1753:A2":{"contestId":1753,"index":"A2","name":"Make Nonzero Sum (hard version)","type":"PROGRAMMING","points":500,"rating":1500,"tags":["constructive algorithms","dp","greedy"]},"1754:A":{"contestId":1754,"index":"A","name":"Technical Support","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy"]},"1548:E":{"contestId":1548,"index":"E","name":"Gregor and the Two Painters","type":"PROGRAMMING","points":3500,"rating":3400,"tags":["data structures","divide and conquer","graphs","greedy","math"]},"1547:G":{"contestId":1547,"index":"G","name":"How Many Paths?","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","dp","graphs","trees"]},"1549:B":{"contestId":1549,"index":"B","name":"Gregor and the Pawn Game","type":"PROGRAMMING","points":750,"rating":800,"tags":["dfs and similar","dp","flows","graph matchings","graphs","greedy","implementation"]},"1548:B":{"contestId":1548,"index":"B","name":"Integers Have Friends","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["binary search","data structures","divide and conquer","math","number theory","two pointers"]},"1548:C":{"contestId":1548,"index":"C","name":"The Three Little Pigs","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["combinatorics","dp","fft","math"]},"1548:D1":{"contestId":1548,"index":"D1","name":"Gregor and the Odd Cows (Easy)","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["bitmasks","geometry","math","number theory"]},"1833:D":{"contestId":1833,"index":"D","name":"Flipper","type":"PROGRAMMING","rating":1400,"tags":["brute force","constructive algorithms","greedy"]},"1833:E":{"contestId":1833,"index":"E","name":"Round Dance","type":"PROGRAMMING","rating":1600,"tags":["dfs and similar","dsu","graphs","shortest paths"]},"1833:F":{"contestId":1833,"index":"F","name":"Ira and Flamenco","type":"PROGRAMMING","rating":1700,"tags":["combinatorics","constructive algorithms","data structures","implementation","math","sortings","two pointers"]},"1833:G":{"contestId":1833,"index":"G","name":"Ksyusha and Chinchilla","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","dfs and similar","dp","dsu","greedy","implementation","trees"]},"1550:D":{"contestId":1550,"index":"D","name":"Excellent Arrays","type":"PROGRAMMING","rating":2300,"tags":["binary search","combinatorics","constructive algorithms","implementation","math","sortings","two pointers"]},"1550:C":{"contestId":1550,"index":"C","name":"Manhattan Subarrays","type":"PROGRAMMING","rating":1700,"tags":["brute force","geometry","greedy","implementation"]},"1550:E":{"contestId":1550,"index":"E","name":"Stringforces","type":"PROGRAMMING","rating":2500,"tags":["binary search","bitmasks","brute force","dp","strings","two pointers"]},"1551:E":{"contestId":1551,"index":"E","name":"Fixed Points","type":"PROGRAMMING","rating":2000,"tags":["binary search","brute force","dp"]},"1551:F":{"contestId":1551,"index":"F","name":"Equidistant Vertices","type":"PROGRAMMING","rating":2200,"tags":["brute force","combinatorics","dfs and similar","dp","trees"]},"1552:H":{"contestId":1552,"index":"H","name":"Guess the Perimeter","type":"PROGRAMMING","points":2750,"rating":3300,"tags":["binary search","interactive","number theory"]},"1552:D":{"contestId":1552,"index":"D","name":"Array Differentiation","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dp","graphs","math"]},"1552:E":{"contestId":1552,"index":"E","name":"Colors and Intervals","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["constructive algorithms","data structures","greedy","sortings"]},"1552:F":{"contestId":1552,"index":"F","name":"Telepanting","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["binary search","data structures","dp","sortings"]},"1827:B2":{"contestId":1827,"index":"B2","name":"Range Sorting (Hard Version)","type":"PROGRAMMING","points":750,"rating":2400,"tags":["binary search","data structures","dp","greedy"]},"1827:A":{"contestId":1827,"index":"A","name":"Counting Orders","type":"PROGRAMMING","points":500,"rating":1100,"tags":["combinatorics","math","sortings","two pointers"]},"1827:B1":{"contestId":1827,"index":"B1","name":"Range Sorting (Easy Version)","type":"PROGRAMMING","points":750,"rating":2000,"tags":["binary search","dp","dsu","greedy","trees","two pointers"]},"1553:F":{"contestId":1553,"index":"F","name":"Pairwise Modulo","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["data structures","math"]},"1553:B":{"contestId":1553,"index":"B","name":"Reverse String","type":"PROGRAMMING","points":500,"rating":1300,"tags":["brute force","dp","hashing","implementation","strings"]},"1553:C":{"contestId":1553,"index":"C","name":"Penalty","type":"PROGRAMMING","points":750,"rating":1200,"tags":["bitmasks","brute force","dp","greedy"]},"1553:D":{"contestId":1553,"index":"D","name":"Backspace","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["dp","greedy","strings","two pointers"]},"1553:E":{"contestId":1553,"index":"E","name":"Permutation Shift","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["brute force","combinatorics","constructive algorithms","dfs and similar","dsu","graphs","math"]},"1553:G":{"contestId":1553,"index":"G","name":"Common Divisor Graph","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["brute force","constructive algorithms","dsu","graphs","hashing","math","number theory"]},"1553:H":{"contestId":1553,"index":"H","name":"XOR and Distance","type":"PROGRAMMING","points":3750,"rating":2900,"tags":["bitmasks","divide and conquer","trees"]},"1554:C":{"contestId":1554,"index":"C","name":"Mikasa","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["binary search","bitmasks","greedy","implementation"]},"1554:D":{"contestId":1554,"index":"D","name":"Diane","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["constructive algorithms","greedy","strings"]},"1554:E":{"contestId":1554,"index":"E","name":"You","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["dfs and similar","dp","math","number theory"]},"1555:B":{"contestId":1555,"index":"B","name":"Two Tables","type":"PROGRAMMING","rating":1300,"tags":["brute force"]},"1555:C":{"contestId":1555,"index":"C","name":"Coin Rows","type":"PROGRAMMING","rating":1300,"tags":["brute force","constructive algorithms","dp","implementation"]},"1555:D":{"contestId":1555,"index":"D","name":"Say No to Palindromes","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms","dp","strings"]},"1555:E":{"contestId":1555,"index":"E","name":"Boring Segments","type":"PROGRAMMING","rating":2100,"tags":["data structures","sortings","trees","two pointers"]},"1555:F":{"contestId":1555,"index":"F","name":"Good Graph","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu","graphs","trees"]},"1556:C":{"contestId":1556,"index":"C","name":"Compressed Bracket Sequence","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["brute force","implementation"]},"1556:D":{"contestId":1556,"index":"D","name":"Take a Guess","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["bitmasks","constructive algorithms","interactive","math"]},"1556:E":{"contestId":1556,"index":"E","name":"Equilibrium","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["data structures","dp","greedy"]},"1556:F":{"contestId":1556,"index":"F","name":"Sports Betting","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["bitmasks","combinatorics","dp","graphs","math","probabilities"]},"1557:C":{"contestId":1557,"index":"C","name":"Moamen and XOR","type":"PROGRAMMING","points":1750,"rating":1700,"tags":["bitmasks","combinatorics","dp","math","matrices"]},"1557:D":{"contestId":1557,"index":"D","name":"Ezzat and Grid","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["data structures","dp","greedy"]},"1560:F1":{"contestId":1560,"index":"F1","name":"Nearest Beautiful Number (easy version)","type":"PROGRAMMING","rating":1900,"tags":["binary search","bitmasks","brute force","constructive algorithms","dfs and similar","greedy"]},"1560:F2":{"contestId":1560,"index":"F2","name":"Nearest Beautiful Number (hard version)","type":"PROGRAMMING","rating":2100,"tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dp","greedy"]},"1559:E":{"contestId":1559,"index":"E","name":"Mocha and Stars","type":"PROGRAMMING","points":3000,"rating":2200,"tags":["combinatorics","dp","fft","math","number theory"]},"1559:D2":{"contestId":1559,"index":"D2","name":"Mocha and Diana (Hard Version)","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","trees","two pointers"]},"1559:D1":{"contestId":1559,"index":"D1","name":"Mocha and Diana (Easy Version)","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["brute force","constructive algorithms","dsu","graphs","greedy","trees"]},"1824:C":{"contestId":1824,"index":"C","name":"LuoTianyi and XOR-Tree","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["data structures","dfs and similar","dp","dsu","greedy","trees"]},"1558:D":{"contestId":1558,"index":"D","name":"Top-Notch Insertions","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["combinatorics","data structures"]},"1558:C":{"contestId":1558,"index":"C","name":"Bottom-Tier Reversals","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["constructive algorithms","greedy"]},"1558:B":{"contestId":1558,"index":"B","name":"Up the Strip","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["brute force","dp","math","number theory","two pointers"]},"1558:A":{"contestId":1558,"index":"A","name":"Charmed by the Game","type":"PROGRAMMING","points":500,"rating":1300,"tags":["brute force","math"]},"1561:D1":{"contestId":1561,"index":"D1","name":"Up the Strip (simplified version)","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["brute force","data structures","dp","math","number theory"]},"1561:D2":{"contestId":1561,"index":"D2","name":"Up the Strip","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["brute force","dp","math","number theory"]},"1829:H":{"contestId":1829,"index":"H","name":"Don't Blame Me","type":"PROGRAMMING","rating":1700,"tags":["bitmasks","combinatorics","dp","math"]},"1829:G":{"contestId":1829,"index":"G","name":"Hits Different","type":"PROGRAMMING","rating":1600,"tags":["data structures","dp","implementation","math"]},"1562:E":{"contestId":1562,"index":"E","name":"Rescue Niwen!","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["dp","greedy","string suffix structures","strings"]},"1817:D":{"contestId":1817,"index":"D","name":"Toy Machine","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["constructive algorithms","games","implementation"]},"1826:F":{"contestId":1826,"index":"F","name":"Fading into Fog","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["geometry","interactive","math","probabilities"]},"1826:E":{"contestId":1826,"index":"E","name":"Walk the Runway","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["bitmasks","brute force","data structures","dp","graphs","implementation","sortings"]},"1566:D1":{"contestId":1566,"index":"D1","name":"Seating Arrangements (easy version) ","type":"PROGRAMMING","points":750,"rating":1100,"tags":["data structures","greedy","sortings"]},"1566:D2":{"contestId":1566,"index":"D2","name":"Seating Arrangements (hard version) ","type":"PROGRAMMING","points":1000,"rating":1600,"tags":["data structures","greedy","implementation","sortings","two pointers"]},"1566:E":{"contestId":1566,"index":"E","name":"Buds Re-hanging","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},"1566:F":{"contestId":1566,"index":"F","name":"Points Movement","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","dp","greedy","implementation","sortings"]},"1567:D":{"contestId":1567,"index":"D","name":"Expression Evaluation Error","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["constructive algorithms","greedy","implementation","math"]},"1567:E":{"contestId":1567,"index":"E","name":"Non-Decreasing Dilemma","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["data structures","divide and conquer","math"]},"1567:F":{"contestId":1567,"index":"F","name":"One-Four Overload","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs","implementation"]},"1569:E":{"contestId":1569,"index":"E","name":"Playoff Restoration","type":"PROGRAMMING","rating":2600,"tags":["bitmasks","brute force","hashing","implementation","meet-in-the-middle"]},"1569:D":{"contestId":1569,"index":"D","name":"Inconvenient Pairs","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","implementation","sortings","two pointers"]},"1572:E":{"contestId":1572,"index":"E","name":"Polygon","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["binary search","dp","geometry"]},"1572:A":{"contestId":1572,"index":"A","name":"Book","type":"PROGRAMMING","points":500,"rating":1800,"tags":["binary search","brute force","data structures","dp","graphs","implementation","sortings"]},"1572:C":{"contestId":1572,"index":"C","name":"Paint","type":"PROGRAMMING","points":1750,"rating":2700,"tags":["dp","greedy"]},"1574:E":{"contestId":1574,"index":"E","name":"Coloring","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","constructive algorithms","implementation","math"]},"1574:D":{"contestId":1574,"index":"D","name":"The Strongest Build","type":"PROGRAMMING","rating":2000,"tags":["binary search","brute force","data structures","dfs and similar","graphs","greedy","hashing","implementation"]},"1580:D":{"contestId":1580,"index":"D","name":"Subsequence","type":"PROGRAMMING","points":2000,"rating":2900,"tags":["brute force","divide and conquer","dp","greedy","trees"]},"1580:C":{"contestId":1580,"index":"C","name":"Train Maintenance","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["brute force","data structures","implementation"]},"1580:A":{"contestId":1580,"index":"A","name":"Portal","type":"PROGRAMMING","points":500,"rating":1700,"tags":["brute force","data structures","dp","greedy","implementation"]},"1582:D":{"contestId":1582,"index":"D","name":"Vupsen, Pupsen and 0","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["constructive algorithms","math"]},"1582:E":{"contestId":1582,"index":"E","name":"Pchelyonok and Segments","type":"PROGRAMMING","points":2500,"rating":2000,"tags":["binary search","data structures","dp","greedy","math"]},"1582:F2":{"contestId":1582,"index":"F2","name":"Korney Korneevich and XOR (hard version)","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["binary search","brute force","dp","greedy","two pointers"]},"1582:F1":{"contestId":1582,"index":"F1","name":"Korney Korneevich and XOR (easy version)","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["bitmasks","dp","greedy"]},"1586:H":{"contestId":1586,"index":"H","name":"Omkar and Tours","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["data structures","dsu","sortings","trees"]},"1584:D":{"contestId":1584,"index":"D","name":"Guess the Permutation","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["binary search","combinatorics","interactive","math"]},"1582:G":{"contestId":1582,"index":"G","name":"Kuzya and Homework","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["data structures","number theory"]},"1583:C":{"contestId":1583,"index":"C","name":"Omkar and Determination","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["data structures","dp"]},"1583:D":{"contestId":1583,"index":"D","name":"Omkar and the Meaning of Life","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["constructive algorithms","greedy","interactive"]},"1583:E":{"contestId":1583,"index":"E","name":"Moment of Bloom","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["constructive algorithms","dfs and similar","graph matchings","graphs","greedy","trees"]},"1584:E":{"contestId":1584,"index":"E","name":"Game with Stones","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["binary search","data structures","games","greedy"]},"1584:F":{"contestId":1584,"index":"F","name":"Strange LCS","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["bitmasks","dp","graphs","greedy","strings"]},"1585:D":{"contestId":1585,"index":"D","name":"Yet Another Sorting Problem","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["data structures","math"]},"1585:F":{"contestId":1585,"index":"F","name":"Non-equal Neighbours","type":"PROGRAMMING","points":3000,"rating":2400,"tags":["combinatorics","dp","math"]},"1585:E":{"contestId":1585,"index":"E","name":"Frequency Queries","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["data structures","dfs and similar","trees"]},"1592:F2":{"contestId":1592,"index":"F2","name":"Alice and Recoloring 2","type":"PROGRAMMING","points":1750,"rating":2800,"tags":["constructive algorithms","flows","graph matchings","greedy"]},"1592:F1":{"contestId":1592,"index":"F1","name":"Alice and Recoloring 1","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["constructive algorithms","greedy"]},"1593:F":{"contestId":1593,"index":"F","name":"Red-Black Number","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","dp","implementation","math","meet-in-the-middle"]},"1593:D2":{"contestId":1593,"index":"D2","name":"Half of Same","type":"PROGRAMMING","rating":1900,"tags":["brute force","math","number theory"]},"1592:D":{"contestId":1592,"index":"D","name":"Hemose in ICPC ?","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["binary search","dfs and similar","implementation","interactive","math","number theory","trees"]},"1592:E":{"contestId":1592,"index":"E","name":"Bored Bakry","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["bitmasks","greedy","math","two pointers"]},"1593:G":{"contestId":1593,"index":"G","name":"Changing Brackets","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","data structures","dp","greedy"]},"1594:E1":{"contestId":1594,"index":"E1","name":"Rubik's Cube Coloring (easy version)","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["combinatorics","math"]},"1594:E2":{"contestId":1594,"index":"E2","name":"Rubik's Cube Coloring (hard version)","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["brute force","dp","implementation","math","trees"]},"1821:E":{"contestId":1821,"index":"E","name":"Rearrange Brackets","type":"PROGRAMMING","rating":2100,"tags":["brute force","dp","greedy","sortings","strings"]},"1594:D":{"contestId":1594,"index":"D","name":"The Number of Imposters","type":"PROGRAMMING","points":1750,"rating":1700,"tags":["constructive algorithms","dfs and similar","dp","dsu","graphs"]},"1594:F":{"contestId":1594,"index":"F","name":"Ideal Farm","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["constructive algorithms","math"]},"1598:C":{"contestId":1598,"index":"C","name":"Delete Two Elements","type":"PROGRAMMING","rating":1200,"tags":["data structures","dp","implementation","math","two pointers"]},"1598:F":{"contestId":1598,"index":"F","name":"RBS","type":"PROGRAMMING","rating":2400,"tags":["binary search","bitmasks","brute force","data structures","dp"]},"1598:D":{"contestId":1598,"index":"D","name":"Training Session","type":"PROGRAMMING","rating":1700,"tags":["combinatorics","data structures","geometry","implementation","math"]},"1598:E":{"contestId":1598,"index":"E","name":"Staircases","type":"PROGRAMMING","rating":2100,"tags":["brute force","combinatorics","data structures","dfs and similar","dp","implementation","math"]},"1601:B":{"contestId":1601,"index":"B","name":"Frog Traveler","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["data structures","dfs and similar","dp","graphs","shortest paths","two pointers"]},"1601:A":{"contestId":1601,"index":"A","name":"Array Elimination","type":"PROGRAMMING","points":500,"rating":1300,"tags":["bitmasks","greedy","math","number theory"]},"1601:C":{"contestId":1601,"index":"C","name":"Optimal Insertion","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["data structures","divide and conquer","dp","greedy","sortings"]},"1603:A":{"contestId":1603,"index":"A","name":"Di-visible Confusion","type":"PROGRAMMING","points":750,"rating":1300,"tags":["constructive algorithms","math","number theory"]},"1603:B":{"contestId":1603,"index":"B","name":"Moderate Modular Mode","type":"PROGRAMMING","points":1000,"rating":1600,"tags":["constructive algorithms","math","number theory"]},"1819:B":{"contestId":1819,"index":"B","name":"The Butcher","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["geometry","greedy","implementation","sortings","two pointers"]},"1819:A":{"contestId":1819,"index":"A","name":"Constructive Problem","type":"PROGRAMMING","points":750,"rating":1300,"tags":["brute force","greedy"]},"1605:D":{"contestId":1605,"index":"D","name":"Treelabeling","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["bitmasks","constructive algorithms","dfs and similar","games","greedy","implementation","trees"]},"1605:E":{"contestId":1605,"index":"E","name":"Array Equalizer","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["binary search","greedy","implementation","math","number theory","sortings","two pointers"]},"1606:E":{"contestId":1606,"index":"E","name":"Arena","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","dp","math"]},"1607:F":{"contestId":1607,"index":"F","name":"Robot on the Board 2","type":"PROGRAMMING","rating":2300,"tags":["brute force","dfs and similar","graphs","implementation"]},"1607:H":{"contestId":1607,"index":"H","name":"Banquet Preparations 2","type":"PROGRAMMING","rating":2200,"tags":["greedy","sortings","two pointers"]},"1608:D":{"contestId":1608,"index":"D","name":"Dominoes","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["combinatorics","fft","graphs","math","number theory"]},"1814:E":{"contestId":1814,"index":"E","name":"Chain Chips","type":"PROGRAMMING","rating":2300,"tags":["data structures","dp","matrices"]},"1609:B":{"contestId":1609,"index":"B","name":"William the Vigilant","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["implementation","strings"]},"1609:A":{"contestId":1609,"index":"A","name":"Divide and Multiply","type":"PROGRAMMING","points":500,"rating":900,"tags":["greedy","implementation","math","number theory"]},"1609:C":{"contestId":1609,"index":"C","name":"Complex Market Analysis","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["binary search","dp","implementation","number theory","schedules","two pointers"]},"1609:D":{"contestId":1609,"index":"D","name":"Social Network","type":"PROGRAMMING","points":2000,"rating":1600,"tags":["dsu","graphs","greedy","implementation","trees"]},"1609:E":{"contestId":1609,"index":"E","name":"William The Oblivious ","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["bitmasks","data structures","dp","matrices"]},"1610:F":{"contestId":1610,"index":"F","name":"Mashtali: a Space Oddysey","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["constructive algorithms","dfs and similar","graphs"]},"1610:D":{"contestId":1610,"index":"D","name":"Not Quite Lee","type":"PROGRAMMING","points":2250,"rating":2000,"tags":["combinatorics","dp","math","number theory"]},"1610:E":{"contestId":1610,"index":"E","name":"AmShZ and G.O.A.T.","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["binary search","brute force","greedy","implementation","math"]},"1611:F":{"contestId":1611,"index":"F","name":"ATM and Students","type":"PROGRAMMING","rating":1800,"tags":["binary search","data structures","two pointers"]},"1611:E2":{"contestId":1611,"index":"E2","name":"Escape The Maze (hard version)","type":"PROGRAMMING","rating":1900,"tags":["dfs and similar","dp","greedy","shortest paths","trees"]},"1611:E1":{"contestId":1611,"index":"E1","name":"Escape The Maze (easy version)","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","greedy","shortest paths","trees","two pointers"]},"1611:G":{"contestId":1611,"index":"G","name":"Robot and Candies","type":"PROGRAMMING","rating":2500,"tags":["data structures","graph matchings","greedy"]},"1805:E":{"contestId":1805,"index":"E","name":"There Should Be a Lot of Maximums","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["brute force","data structures","dfs and similar","dp","trees","two pointers"]},"1612:F":{"contestId":1612,"index":"F","name":"Armor and Weapons","type":"PROGRAMMING","rating":2800,"tags":["brute force","dp","greedy","shortest paths"]},"1612:D":{"contestId":1612,"index":"D","name":"X-Magic Pair","type":"PROGRAMMING","rating":1600,"tags":["math","number theory"]},"1612:E":{"contestId":1612,"index":"E","name":"Messages","type":"PROGRAMMING","rating":2000,"tags":["brute force","dp","greedy","probabilities","sortings"]},"1613:C":{"contestId":1613,"index":"C","name":"Poisoned Dagger","type":"PROGRAMMING","rating":1200,"tags":["binary search"]},"1613:D":{"contestId":1613,"index":"D","name":"MEX Sequences","type":"PROGRAMMING","rating":1900,"tags":["dp","math"]},"1613:E":{"contestId":1613,"index":"E","name":"Crazy Robot","type":"PROGRAMMING","rating":2000,"tags":["dfs and similar","graphs"]},"1613:F":{"contestId":1613,"index":"F","name":"Tree Coloring","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","divide and conquer","fft"]},"1808:E1":{"contestId":1808,"index":"E1","name":"Minibuses on Venus (easy version)","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["combinatorics","divide and conquer","dp"]},"1614:D2":{"contestId":1614,"index":"D2","name":"Divan and Kostomuksha (hard version)","type":"PROGRAMMING","points":1000,"rating":2300,"tags":["dp","number theory"]},"1614:D1":{"contestId":1614,"index":"D1","name":"Divan and Kostomuksha (easy version)","type":"PROGRAMMING","points":1500,"rating":2100,"tags":["dp","number theory"]},"102992:K":{"contestId":102992,"index":"K","name":"K Co-prime Permutation","type":"PROGRAMMING","tags":[]},"1615:D":{"contestId":1615,"index":"D","name":"X(or)-mas Tree","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["bitmasks","dfs and similar","dsu","graphs","trees"]},"1619:F":{"contestId":1619,"index":"F","name":"Let's Play the Hat?","type":"PROGRAMMING","rating":2000,"tags":["brute force","constructive algorithms","greedy","math"]},"1615:E":{"contestId":1615,"index":"E","name":"Purple Crayon","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["data structures","dfs and similar","games","graphs","greedy","math","sortings","trees"]},"1616:D":{"contestId":1616,"index":"D","name":"Keep the Average High","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["dp","greedy","math"]},"1617:D1":{"contestId":1617,"index":"D1","name":"Too Many Impostors (easy version)","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["constructive algorithms","implementation","interactive"]},"1617:D2":{"contestId":1617,"index":"D2","name":"Too Many Impostors (hard version)","type":"PROGRAMMING","points":1000,"rating":2400,"tags":["constructive algorithms","implementation","interactive","math"]},"1620:C":{"contestId":1620,"index":"C","name":"BA-String","type":"PROGRAMMING","rating":1800,"tags":["brute force","dp","greedy","implementation","math"]},"1618:G":{"contestId":1618,"index":"G","name":"Trader Problem","type":"PROGRAMMING","rating":2200,"tags":["data structures","dsu","greedy","sortings"]},"1619:H":{"contestId":1619,"index":"H","name":"Permutation and Queries","type":"PROGRAMMING","rating":2400,"tags":["brute force","data structures","divide and conquer","two pointers"]},"1621:C":{"contestId":1621,"index":"C","name":"Hidden Permutations","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["dfs and similar","interactive","math"]},"1620:D":{"contestId":1620,"index":"D","name":"Exact Change","type":"PROGRAMMING","rating":2000,"tags":["brute force","constructive algorithms","greedy"]},"1620:F":{"contestId":1620,"index":"F","name":"Bipartite Array","type":"PROGRAMMING","rating":2800,"tags":["dp","greedy"]},"1620:E":{"contestId":1620,"index":"E","name":"Replace the Numbers","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","data structures","dsu","implementation"]},"1620:G":{"contestId":1620,"index":"G","name":"Subsequences Galore","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","combinatorics","dp"]},"1621:D":{"contestId":1621,"index":"D","name":"The Winter Hike","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["constructive algorithms","greedy","math"]},"1621:E":{"contestId":1621,"index":"E","name":"New School","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["binary search","data structures","dp","greedy","implementation","sortings"]},"1621:F":{"contestId":1621,"index":"F","name":"Strange Instructions","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["data structures","greedy","implementation"]},"1623:B":{"contestId":1623,"index":"B","name":"Game on Ranges","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["brute force","dfs and similar","implementation","sortings"]},"1622:D":{"contestId":1622,"index":"D","name":"Shuffle","type":"PROGRAMMING","rating":2000,"tags":["combinatorics","math","two pointers"]},"1623:C":{"contestId":1623,"index":"C","name":"Balanced Stone Heaps","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["binary search","greedy"]},"1623:A":{"contestId":1623,"index":"A","name":"Robot Cleaner","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","implementation","math"]},"1623:D":{"contestId":1623,"index":"D","name":"Robot Cleaner Revisit","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["implementation","math","probabilities"]},"1623:E":{"contestId":1623,"index":"E","name":"Middle Duplication","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["data structures","dfs and similar","greedy","strings","trees"]},"1625:C":{"contestId":1625,"index":"C","name":"Road Optimization","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["dp"]},"1625:D":{"contestId":1625,"index":"D","name":"Binary Spiders","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["bitmasks","data structures","implementation","math","sortings","trees"]},"1625:E1":{"contestId":1625,"index":"E1","name":"Cats on the Upgrade (easy version)","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["brute force","data structures","dfs and similar","divide and conquer","dp","graphs","trees"]},"1746:D":{"contestId":1746,"index":"D","name":"Paths on the Tree","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["dfs and similar","dp","greedy","sortings","trees"]},"1626:D":{"contestId":1626,"index":"D","name":"Martial Arts Tournament","type":"PROGRAMMING","rating":2100,"tags":["binary search","brute force","greedy","math"]},"1626:E":{"contestId":1626,"index":"E","name":"Black and White Tree","type":"PROGRAMMING","rating":2400,"tags":["dfs and similar","greedy","trees"]},"1626:F":{"contestId":1626,"index":"F","name":"A Random Code Problem","type":"PROGRAMMING","rating":2800,"tags":["combinatorics","dp","math","number theory","probabilities"]},"1633:F":{"contestId":1633,"index":"F","name":"Perfect Matching","type":"PROGRAMMING","rating":2800,"tags":["data structures","divide and conquer","interactive","trees"]},"1627:D":{"contestId":1627,"index":"D","name":"Not Adding","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["brute force","dp","math","number theory"]},"1627:E":{"contestId":1627,"index":"E","name":"Not Escaping","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["data structures","dp","implementation","shortest paths","two pointers"]},"1627:F":{"contestId":1627,"index":"F","name":"Not Splitting","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["geometry","graphs","greedy","implementation","shortest paths"]},"1628:A":{"contestId":1628,"index":"A","name":"Meximum Array","type":"PROGRAMMING","points":500,"rating":1400,"tags":["binary search","constructive algorithms","greedy","implementation","math","two pointers"]},"1628:B":{"contestId":1628,"index":"B","name":"Peculiar Movie Preferences","type":"PROGRAMMING","points":750,"rating":1700,"tags":["greedy","strings"]},"1628:C":{"contestId":1628,"index":"C","name":"Grid Xor","type":"PROGRAMMING","points":1250,"rating":2300,"tags":["constructive algorithms","greedy","implementation","interactive","math"]},"1628:D1":{"contestId":1628,"index":"D1","name":"Game on Sum (Easy Version)","type":"PROGRAMMING","points":1000,"rating":2100,"tags":["combinatorics","dp","games","math"]},"1628:D2":{"contestId":1628,"index":"D2","name":"Game on Sum (Hard Version)","type":"PROGRAMMING","points":750,"rating":2400,"tags":["combinatorics","dp","games","math"]},"1630:E":{"contestId":1630,"index":"E","name":"Expected Components","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["combinatorics","math","number theory","probabilities"]},"1630:A":{"contestId":1630,"index":"A","name":"And Matching","type":"PROGRAMMING","points":500,"rating":1500,"tags":["bitmasks","constructive algorithms"]},"1630:B":{"contestId":1630,"index":"B","name":"Range and Partition","type":"PROGRAMMING","points":1250,"rating":1800,"tags":["binary search","constructive algorithms","data structures","greedy","two pointers"]},"1630:C":{"contestId":1630,"index":"C","name":"Paint the Middle","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["dp","greedy","sortings","two pointers"]},"1630:D":{"contestId":1630,"index":"D","name":"Flipping Range","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["constructive algorithms","dp","greedy","number theory"]},"1632:D":{"contestId":1632,"index":"D","name":"New Year Concert","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["binary search","data structures","greedy","math","number theory","two pointers"]},"1632:E2":{"contestId":1632,"index":"E2","name":"Distance Tree (hard version)","type":"PROGRAMMING","points":1500,"rating":2700,"tags":["binary search","dfs and similar","shortest paths","trees"]},"1632:E1":{"contestId":1632,"index":"E1","name":"Distance Tree (easy version)","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["binary search","data structures","dfs and similar","graphs","shortest paths","trees"]},"1633:E":{"contestId":1633,"index":"E","name":"Spanning Tree Queries","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures","dfs and similar","dsu","graphs","greedy","math","sortings","trees"]},"1634:F":{"contestId":1634,"index":"F","name":"Fibonacci Additions","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["brute force","data structures","hashing","implementation","math"]},"1634:D":{"contestId":1634,"index":"D","name":"Finding Zero","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["constructive algorithms","interactive","math"]},"1634:E":{"contestId":1634,"index":"E","name":"Fair Share","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["constructive algorithms","data structures","dfs and similar","graph matchings","graphs"]},"1635:D":{"contestId":1635,"index":"D","name":"Infinite Set","type":"PROGRAMMING","points":2250,"rating":1800,"tags":["bitmasks","dp","math","matrices","number theory","strings"]},"1635:F":{"contestId":1635,"index":"F","name":"Closest Pair ","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["data structures","greedy"]},"1635:E":{"contestId":1635,"index":"E","name":"Cars ","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs","greedy","sortings"]},"1637:G":{"contestId":1637,"index":"G","name":"Birthday","type":"PROGRAMMING","points":4000,"rating":3000,"tags":["constructive algorithms","greedy","math"]},"1637:A":{"contestId":1637,"index":"A","name":"Sorting Parts","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","sortings"]},"1637:C":{"contestId":1637,"index":"C","name":"Andrew and Stones","type":"PROGRAMMING","points":1500,"rating":1200,"tags":["greedy","implementation"]},"1637:B":{"contestId":1637,"index":"B","name":"MEX and Array","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["brute force","dp","greedy","math"]},"1637:D":{"contestId":1637,"index":"D","name":"Yet Another Minimization Problem","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["dp","greedy","math"]},"1637:E":{"contestId":1637,"index":"E","name":"Best Pair","type":"PROGRAMMING","points":2500,"rating":2100,"tags":["binary search","brute force","implementation"]},"1637:F":{"contestId":1637,"index":"F","name":"Towers","type":"PROGRAMMING","points":3250,"rating":2500,"tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},"1642:A":{"contestId":1642,"index":"A","name":"Hard Way","type":"PROGRAMMING","points":500,"rating":800,"tags":["geometry"]},"1642:B":{"contestId":1642,"index":"B","name":"Power Walking","type":"PROGRAMMING","points":750,"rating":900,"tags":["greedy"]},"1641:D":{"contestId":1641,"index":"D","name":"Two Arrays","type":"PROGRAMMING","points":1750,"rating":2700,"tags":["bitmasks","brute force","combinatorics","greedy","hashing","math","two pointers"]},"1641:A":{"contestId":1641,"index":"A","name":"Great Sequence","type":"PROGRAMMING","points":500,"rating":1200,"tags":["brute force","greedy","sortings"]},"1641:B":{"contestId":1641,"index":"B","name":"Repetitions Decoding","type":"PROGRAMMING","points":1250,"rating":2000,"tags":["constructive algorithms","implementation","sortings"]},"1641:C":{"contestId":1641,"index":"C","name":"Anonymity Is Important","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["binary search","brute force","data structures","dsu","greedy","sortings"]},"1644:D":{"contestId":1644,"index":"D","name":"Cross Coloring","type":"PROGRAMMING","rating":1700,"tags":["data structures","implementation","math"]},"1644:E":{"contestId":1644,"index":"E","name":"Expand the Path","type":"PROGRAMMING","rating":1900,"tags":["brute force","combinatorics","data structures","implementation","math"]},"1633:D":{"contestId":1633,"index":"D","name":"Make Them Equal","type":"PROGRAMMING","rating":1600,"tags":["dp","greedy"]},"1661:C":{"contestId":1661,"index":"C","name":"Water the Trees","type":"PROGRAMMING","rating":1700,"tags":["binary search","greedy","math"]},"1661:E":{"contestId":1661,"index":"E","name":"Narrow Components","type":"PROGRAMMING","rating":2500,"tags":["brute force","data structures","dp","dsu","math","trees"]},"1646:E":{"contestId":1646,"index":"E","name":"Power Board","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["brute force","dp","math","number theory"]},"1646:D":{"contestId":1646,"index":"D","name":"Weight the Tree","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["constructive algorithms","dfs and similar","dp","implementation","trees"]},"1646:C":{"contestId":1646,"index":"C","name":"Factorials and Powers of Two","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["bitmasks","brute force","constructive algorithms","dp","math"]},"1638:E":{"contestId":1638,"index":"E","name":"Colorful Operations","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["brute force","data structures","implementation"]},"1647:C":{"contestId":1647,"index":"C","name":"Madoka and Childish Pranks","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms","greedy"]},"1647:D":{"contestId":1647,"index":"D","name":"Madoka and the Best School in Russia","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","dp","math","number theory"]},"1647:E":{"contestId":1647,"index":"E","name":"Madoka and the Sixth-graders","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","dfs and similar","greedy"]},"1648:A":{"contestId":1648,"index":"A","name":"Weird Sum","type":"PROGRAMMING","points":500,"rating":1400,"tags":["combinatorics","data structures","geometry","math","matrices","sortings"]},"1648:B":{"contestId":1648,"index":"B","name":"Integral Array","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["brute force","constructive algorithms","data structures","math"]},"1648:C":{"contestId":1648,"index":"C","name":"Tyler and Strings","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["combinatorics","data structures","implementation"]},"1650:F":{"contestId":1650,"index":"F","name":"Vitaly and Advanced Useless Algorithms","type":"PROGRAMMING","rating":2200,"tags":["dp","greedy","implementation"]},"1650:G":{"contestId":1650,"index":"G","name":"Counting Shortcuts","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dp","graphs","shortest paths"]},"1651:D":{"contestId":1651,"index":"D","name":"Nearest Excluded Points","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","dfs and similar","graphs","shortest paths"]},"1656:C":{"contestId":1656,"index":"C","name":"Make Equal With Mod","type":"PROGRAMMING","points":1500,"rating":1200,"tags":["constructive algorithms","math","number theory","sortings"]},"1656:F":{"contestId":1656,"index":"F","name":"Parametric MST","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["binary search","constructive algorithms","graphs","greedy","math","sortings"]},"1656:E":{"contestId":1656,"index":"E","name":"Equal Tree Sums","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["constructive algorithms","dfs and similar","math","trees"]},"1656:D":{"contestId":1656,"index":"D","name":"K-good","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","math","number theory"]},"1657:C":{"contestId":1657,"index":"C","name":"Bracket Sequence Deletion","type":"PROGRAMMING","rating":1200,"tags":["greedy","implementation"]},"1657:D":{"contestId":1657,"index":"D","name":"For Gamers. By Gamers.","type":"PROGRAMMING","rating":2000,"tags":["binary search","brute force","greedy","math","sortings"]},"1657:E":{"contestId":1657,"index":"E","name":"Star MST","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","dp","graph matchings","math"]},"1657:F":{"contestId":1657,"index":"F","name":"Words on Tree","type":"PROGRAMMING","rating":2600,"tags":["2-sat","dfs and similar","dsu","graphs","trees"]},"1658:D1":{"contestId":1658,"index":"D1","name":"388535 (Easy Version)","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["bitmasks","math"]},"1658:D2":{"contestId":1658,"index":"D2","name":"388535 (Hard Version)","type":"PROGRAMMING","points":750,"rating":2300,"tags":["bitmasks","brute force","data structures","math"]},"1658:E":{"contestId":1658,"index":"E","name":"Gojou and Matrix Game","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","dp","games","hashing","implementation","math","number theory","sortings"]},"1659:E":{"contestId":1659,"index":"E","name":"AND-MEX Walk","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dsu","graphs"]},"1659:D":{"contestId":1659,"index":"D","name":"Reverse Sort Sum","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","data structures","greedy","implementation","math","two pointers"]},"1800:A":{"contestId":1800,"index":"A","name":"Is It a Cat?","type":"PROGRAMMING","rating":800,"tags":["implementation","strings"]},"1660:F1":{"contestId":1660,"index":"F1","name":"Promising String (easy version)","type":"PROGRAMMING","rating":1700,"tags":["brute force","implementation","math","strings"]},"1660:F2":{"contestId":1660,"index":"F2","name":"Promising String (hard version)","type":"PROGRAMMING","rating":2100,"tags":["data structures","implementation","math","strings"]},"1743:E":{"contestId":1743,"index":"E","name":"FTL","type":"PROGRAMMING","rating":2400,"tags":["binary search","dp"]},"1661:D":{"contestId":1661,"index":"D","name":"Progressions Covering","type":"PROGRAMMING","rating":1900,"tags":["data structures","greedy"]},"1661:F":{"contestId":1661,"index":"F","name":"Teleporters","type":"PROGRAMMING","rating":2600,"tags":["binary search","greedy"]},"1799:F":{"contestId":1799,"index":"F","name":"Halve or Subtract","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["binary search","brute force","dp","greedy","sortings"]},"1799:D2":{"contestId":1799,"index":"D2","name":"Hot Start Up (hard version)","type":"PROGRAMMING","points":750,"rating":2100,"tags":["data structures","dp"]},"1799:E":{"contestId":1799,"index":"E","name":"City Union","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["constructive algorithms","dfs and similar","dsu","geometry","greedy","implementation","math"]},"1663:A":{"contestId":1663,"index":"A","name":"Who Tested?","type":"PROGRAMMING","tags":["*special","expression parsing","trees"]},"1665:C":{"contestId":1665,"index":"C","name":"Tree Infection","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["binary search","greedy","sortings","trees"]},"1665:D":{"contestId":1665,"index":"D","name":"GCD Guess","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["bitmasks","chinese remainder theorem","constructive algorithms","games","interactive","math","number theory"]},"1665:E":{"contestId":1665,"index":"E","name":"MinimizOR","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["bitmasks","brute force","data structures","divide and conquer","greedy","implementation","two pointers"]},"1667:B":{"contestId":1667,"index":"B","name":"Optimal Partition","type":"PROGRAMMING","points":1000,"rating":2100,"tags":["data structures","dp"]},"1667:C":{"contestId":1667,"index":"C","name":"Half Queen Cover","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["constructive algorithms","math"]},"1670:C":{"contestId":1670,"index":"C","name":"Where is the Pizza?","type":"PROGRAMMING","points":1750,"rating":1400,"tags":["data structures","dfs and similar","dsu","graphs","implementation","math"]},"1670:D":{"contestId":1670,"index":"D","name":"Very Suspicious","type":"PROGRAMMING","points":2250,"rating":1700,"tags":["binary search","brute force","geometry","greedy","implementation","math"]},"1670:E":{"contestId":1670,"index":"E","name":"Hemose on the Tree","type":"PROGRAMMING","points":2750,"rating":2200,"tags":["bitmasks","constructive algorithms","dfs and similar","trees"]},"1670:F":{"contestId":1670,"index":"F","name":"Jee, You See?","type":"PROGRAMMING","points":3000,"rating":2400,"tags":["bitmasks","combinatorics","dp"]},"1671:C":{"contestId":1671,"index":"C","name":"Dolce Vita","type":"PROGRAMMING","rating":1200,"tags":["binary search","brute force","greedy","math"]},"1671:E":{"contestId":1671,"index":"E","name":"Preorder","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","divide and conquer","dp","dsu","hashing","sortings","trees"]},"1671:D":{"contestId":1671,"index":"D","name":"Insert a Progression","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms","greedy"]},"1672:H":{"contestId":1672,"index":"H","name":"Zigu Zagu","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["constructive algorithms","data structures","greedy"]},"1672:C":{"contestId":1672,"index":"C","name":"Unequal Array","type":"PROGRAMMING","points":750,"rating":1100,"tags":["constructive algorithms","greedy","implementation"]},"1673:B":{"contestId":1673,"index":"B","name":"A Perfectly Balanced String?","type":"PROGRAMMING","points":750,"rating":1100,"tags":["brute force","greedy","strings"]},"1673:C":{"contestId":1673,"index":"C","name":"Palindrome Basis","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["brute force","dp","math","number theory"]},"1672:F2":{"contestId":1672,"index":"F2","name":"Checker for Array Shuffling","type":"PROGRAMMING","points":1250,"rating":2800,"tags":["constructive algorithms","dfs and similar","graphs"]},"1672:D":{"contestId":1672,"index":"D","name":"Cyclic Rotation","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["constructive algorithms","greedy","implementation","two pointers"]},"1672:F1":{"contestId":1672,"index":"F1","name":"Array Shuffling","type":"PROGRAMMING","points":1250,"rating":2000,"tags":["constructive algorithms","graphs","greedy"]},"1672:E":{"contestId":1672,"index":"E","name":"notepad.exe","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["binary search","constructive algorithms","greedy","interactive"]},"1673:D":{"contestId":1673,"index":"D","name":"Lost Arithmetic Progression","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["combinatorics","math","number theory"]},"1673:E":{"contestId":1673,"index":"E","name":"Power or XOR?","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["bitmasks","combinatorics","math","number theory"]},"1675:G":{"contestId":1675,"index":"G","name":"Sorting Pancakes","type":"PROGRAMMING","rating":2300,"tags":["dp"]},"1678:B1":{"contestId":1678,"index":"B1","name":"Tokitsukaze and Good 01-String (easy version)","type":"PROGRAMMING","points":750,"rating":800,"tags":["implementation"]},"1678:B2":{"contestId":1678,"index":"B2","name":"Tokitsukaze and Good 01-String (hard version)","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["dp","greedy","implementation"]},"1677:A":{"contestId":1677,"index":"A","name":"Tokitsukaze and Strange Inequality","type":"PROGRAMMING","points":500,"rating":1600,"tags":["brute force","data structures","dp"]},"1677:B":{"contestId":1677,"index":"B","name":"Tokitsukaze and Meeting","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["data structures","implementation","math"]},"1677:C":{"contestId":1677,"index":"C","name":"Tokitsukaze and Two Colorful Tapes","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},"1677:D":{"contestId":1677,"index":"D","name":"Tokitsukaze and Permutations","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["dp","math"]},"1679:F":{"contestId":1679,"index":"F","name":"Formalism for Formalism","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["bitmasks","dp","math"]},"1679:D":{"contestId":1679,"index":"D","name":"Toss a Coin to Your Graph...","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["binary search","dfs and similar","dp","graphs"]},"1679:E":{"contestId":1679,"index":"E","name":"Typical Party in Dorm","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["bitmasks","combinatorics","dp","strings"]},"1690:G":{"contestId":1690,"index":"G","name":"Count the Trains","type":"PROGRAMMING","rating":2000,"tags":["binary search","data structures","greedy","sortings"]},"1680:A":{"contestId":1680,"index":"A","name":"Minimums and Maximums","type":"PROGRAMMING","rating":800,"tags":["brute force","math"]},"1680:B":{"contestId":1680,"index":"B","name":"Robots","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1680:D":{"contestId":1680,"index":"D","name":"Dog Walking","type":"PROGRAMMING","rating":2400,"tags":["brute force","greedy","math"]},"1680:C":{"contestId":1680,"index":"C","name":"Binary String","type":"PROGRAMMING","rating":1600,"tags":["binary search","greedy","strings","two pointers"]},"1682:C":{"contestId":1682,"index":"C","name":"LIS or Reverse LIS?","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","greedy","implementation","math"]},"1680:E":{"contestId":1680,"index":"E","name":"Moving Chips","type":"PROGRAMMING","rating":2000,"tags":["bitmasks","dp","greedy"]},"1680:F":{"contestId":1680,"index":"F","name":"Lenient Vertex Cover","type":"PROGRAMMING","rating":2600,"tags":["dfs and similar","divide and conquer","dsu","graphs","trees"]},"1681:D":{"contestId":1681,"index":"D","name":"Required Length","type":"PROGRAMMING","rating":1700,"tags":["brute force","dfs and similar","dp","hashing","shortest paths"]},"1681:F":{"contestId":1681,"index":"F","name":"Unique Occurrences","type":"PROGRAMMING","rating":2300,"tags":["data structures","dfs and similar","divide and conquer","dp","dsu","trees"]},"1682:D":{"contestId":1682,"index":"D","name":"Circular Spanning Tree","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["constructive algorithms","implementation","trees"]},"1682:E":{"contestId":1682,"index":"E","name":"Unordered Swaps","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs","greedy","math","sortings","trees"]},"1776:I":{"contestId":1776,"index":"I","name":"Spinach Pizza","type":"PROGRAMMING","rating":2500,"tags":["games","geometry","greedy","interactive"]},"1688:A":{"contestId":1688,"index":"A","name":"Cirno's Perfect Bitmasks Classroom","type":"PROGRAMMING","points":500,"rating":800,"tags":["bitmasks","brute force"]},"1688:B":{"contestId":1688,"index":"B","name":"Patchouli's Magical Talisman","type":"PROGRAMMING","points":750,"rating":800,"tags":["bitmasks","constructive algorithms","greedy","sortings"]},"1688:C":{"contestId":1688,"index":"C","name":"Manipulating History","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["constructive algorithms","greedy","strings"]},"1687:D":{"contestId":1687,"index":"D","name":"Cute number","type":"PROGRAMMING","points":1500,"rating":2900,"tags":["binary search","brute force","data structures","dsu","implementation","math"]},"1687:A":{"contestId":1687,"index":"A","name":"The Enchanted Forest","type":"PROGRAMMING","points":500,"rating":1600,"tags":["brute force","greedy"]},"1687:B":{"contestId":1687,"index":"B","name":"Railway System","type":"PROGRAMMING","points":750,"rating":1700,"tags":["constructive algorithms","graphs","greedy","interactive","sortings"]},"1687:C":{"contestId":1687,"index":"C","name":"Sanae and Giant Robot","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["binary search","brute force","data structures","dsu","greedy","sortings"]},"1561:C":{"contestId":1561,"index":"C","name":"Deep Down Below","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["binary search","greedy","sortings"]},"1795:F":{"contestId":1795,"index":"F","name":"Blocking Chips","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","dfs and similar","greedy","trees"]},"1689:A":{"contestId":1689,"index":"A","name":"Lex String","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","implementation","sortings","two pointers"]},"1689:C":{"contestId":1689,"index":"C","name":"Infected Tree","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["dfs and similar","dp","trees"]},"1689:B":{"contestId":1689,"index":"B","name":"Mystic Permutation","type":"PROGRAMMING","points":750,"rating":900,"tags":["data structures","greedy"]},"1689:D":{"contestId":1689,"index":"D","name":"Lena and Matrix","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["data structures","dp","geometry","shortest paths"]},"1689:E":{"contestId":1689,"index":"E","name":"ANDfinity","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dsu","graphs"]},"1691:F":{"contestId":1691,"index":"F","name":"K-Set Tree","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["combinatorics","dfs and similar","dp","math","trees"]},"1691:A":{"contestId":1691,"index":"A","name":"Beat The Odds","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","math"]},"1691:B":{"contestId":1691,"index":"B","name":"Shoe Shuffling","type":"PROGRAMMING","points":750,"rating":1000,"tags":["constructive algorithms","greedy","implementation","two pointers"]},"1691:C":{"contestId":1691,"index":"C","name":"Sum of Substrings","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["brute force","constructive algorithms","greedy","math","strings"]},"1691:D":{"contestId":1691,"index":"D","name":"Max GEQ Sum","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["binary search","constructive algorithms","data structures","divide and conquer","implementation","two pointers"]},"1691:E":{"contestId":1691,"index":"E","name":"Number of Groups","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["data structures","dfs and similar","dsu","graphs","greedy","sortings"]},"1693:A":{"contestId":1693,"index":"A","name":"Directional Increase","type":"PROGRAMMING","points":750,"rating":1300,"tags":["greedy"]},"1693:B":{"contestId":1693,"index":"B","name":"Fake Plastic Trees","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["dfs and similar","dp","greedy","trees"]},"1693:C":{"contestId":1693,"index":"C","name":"Keshi in Search of AmShZ","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["graphs","greedy","shortest paths"]},"1695:A":{"contestId":1695,"index":"A","name":"Subrectangle Guess","type":"PROGRAMMING","points":500,"rating":800,"tags":["games"]},"1695:B":{"contestId":1695,"index":"B","name":"Circle Game","type":"PROGRAMMING","points":750,"rating":1000,"tags":["games","greedy"]},"1695:C":{"contestId":1695,"index":"C","name":"Zero Path","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["brute force","data structures","dp","graphs","greedy","shortest paths"]},"1695:D2":{"contestId":1695,"index":"D2","name":"Tree Queries (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2300,"tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},"1695:E":{"contestId":1695,"index":"E","name":"Ambiguous Dominoes","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs"]},"1699:E":{"contestId":1699,"index":"E","name":"Three Days Grace","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["data structures","dp","greedy","math","number theory","two pointers"]},"1697:A":{"contestId":1697,"index":"A","name":"Parkway Walk","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation"]},"1697:B":{"contestId":1697,"index":"B","name":"Promo","type":"PROGRAMMING","rating":900,"tags":["greedy","sortings"]},"1725:L":{"contestId":1725,"index":"L","name":"Lemper Cooking Competition","type":"PROGRAMMING","rating":2400,"tags":["data structures"]},"1697:C":{"contestId":1697,"index":"C","name":"awoo's Favorite Problem","type":"PROGRAMMING","rating":1400,"tags":["binary search","constructive algorithms","data structures","greedy","implementation","strings","two pointers"]},"1788:E":{"contestId":1788,"index":"E","name":"Sum Over Zero","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["data structures","dfs and similar","dp"]},"1537:C":{"contestId":1537,"index":"C","name":"Challenging Cliffs","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["constructive algorithms","greedy","implementation","math"]},"1697:E":{"contestId":1697,"index":"E","name":"Coloring","type":"PROGRAMMING","rating":2400,"tags":["brute force","combinatorics","constructive algorithms","dp","geometry","graphs","greedy","implementation","math"]},"1686:A":{"contestId":1686,"index":"A","name":"Everything Everywhere All But One","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy"]},"1686:B":{"contestId":1686,"index":"B","name":"Odd Subarrays","type":"PROGRAMMING","points":1000,"rating":800,"tags":["dp","greedy"]},"1685:A":{"contestId":1685,"index":"A","name":"Circular Local MiniMax","type":"PROGRAMMING","points":500,"rating":1100,"tags":["constructive algorithms","greedy","sortings"]},"1685:D1":{"contestId":1685,"index":"D1","name":"Permutation Weight (Easy Version)","type":"PROGRAMMING","points":1500,"rating":2800,"tags":["constructive algorithms","dfs and similar","dsu"]},"1698:A":{"contestId":1698,"index":"A","name":"XOR Mixup","type":"PROGRAMMING","points":250,"rating":800,"tags":["bitmasks","brute force"]},"1698:B":{"contestId":1698,"index":"B","name":"Rising Sand","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","implementation"]},"1698:C":{"contestId":1698,"index":"C","name":"3SUM Closure","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["brute force","data structures"]},"1698:F":{"contestId":1698,"index":"F","name":"Equal Reversal","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["constructive algorithms","graphs","implementation","math"]},"1698:E":{"contestId":1698,"index":"E","name":"PermutationForces II","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["brute force","combinatorics","greedy","sortings","trees","two pointers"]},"1698:D":{"contestId":1698,"index":"D","name":"Fixed Point Guessing","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["binary search","constructive algorithms","interactive"]},"1685:B":{"contestId":1685,"index":"B","name":"Linguistics","type":"PROGRAMMING","points":1000,"rating":2000,"tags":["greedy","implementation","sortings","strings"]},"1791:G2":{"contestId":1791,"index":"G2","name":"Teleporters (Hard Version)","type":"PROGRAMMING","rating":1900,"tags":["binary search","greedy","sortings"]},"1785:C":{"contestId":1785,"index":"C","name":"Monsters (hard version)","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["data structures","greedy","implementation"]},"1785:B":{"contestId":1785,"index":"B","name":"Letter Exchange","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["constructive algorithms","graphs","greedy","implementation"]},"1699:D":{"contestId":1699,"index":"D","name":"Almost Triple Deletions","type":"PROGRAMMING","points":1750,"rating":2300,"tags":["data structures","dp","greedy"]},"1700:C":{"contestId":1700,"index":"C","name":"Helping the Nature","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["constructive algorithms","data structures","greedy"]},"1700:D":{"contestId":1700,"index":"D","name":"River Locks","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["binary search","dp","greedy","math"]},"1719:C":{"contestId":1719,"index":"C","name":"Fighting Tournament","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["binary search","data structures","implementation","two pointers"]},"1719:B":{"contestId":1719,"index":"B","name":"Mathematical Circus","type":"PROGRAMMING","points":1000,"rating":800,"tags":["constructive algorithms","math"]},"1719:A":{"contestId":1719,"index":"A","name":"Chip Game","type":"PROGRAMMING","points":500,"rating":800,"tags":["games","math"]},"1720:C":{"contestId":1720,"index":"C","name":"Corners","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["greedy","implementation"]},"1720:B":{"contestId":1720,"index":"B","name":"Interesting Sum","type":"PROGRAMMING","points":1000,"rating":800,"tags":["brute force","data structures","greedy","math","sortings"]},"1720:A":{"contestId":1720,"index":"A","name":"Burenka Plays with Fractions","type":"PROGRAMMING","points":500,"rating":900,"tags":["math","number theory"]},"1722:D":{"contestId":1722,"index":"D","name":"Line","type":"PROGRAMMING","rating":1100,"tags":["greedy","sortings"]},"1722:C":{"contestId":1722,"index":"C","name":"Word Game","type":"PROGRAMMING","rating":800,"tags":["data structures","implementation"]},"1722:B":{"contestId":1722,"index":"B","name":"Colourblindness","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1722:A":{"contestId":1722,"index":"A","name":"Spell Check","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1787:C":{"contestId":1787,"index":"C","name":"Remove the Bracket","type":"PROGRAMMING","points":1750,"rating":1600,"tags":["dp","greedy","math"]},"1787:E":{"contestId":1787,"index":"E","name":"The Harmonization of XOR","type":"PROGRAMMING","points":2250,"rating":2100,"tags":["bitmasks","constructive algorithms","greedy","math"]},"1787:F":{"contestId":1787,"index":"F","name":"Inverse Transformation","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["constructive algorithms","implementation","math"]},"1701:D":{"contestId":1701,"index":"D","name":"Permutation Restoration","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","greedy","math","sortings","two pointers"]},"1701:F":{"contestId":1701,"index":"F","name":"Points","type":"PROGRAMMING","rating":2500,"tags":["combinatorics","data structures","implementation","math","matrices"]},"569:A":{"contestId":569,"index":"A","name":"Music","type":"PROGRAMMING","points":500,"rating":1500,"tags":["implementation","math"]},"1705:E":{"contestId":1705,"index":"E","name":"Mark and Professor Koro","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["binary search","bitmasks","brute force","combinatorics","data structures","greedy"]},"1215:B":{"contestId":1215,"index":"B","name":"The Number of Products","type":"PROGRAMMING","points":1000,"rating":1400,"tags":["combinatorics","dp","implementation"]},"1792:E":{"contestId":1792,"index":"E","name":"Divisors and Table","type":"PROGRAMMING","rating":2400,"tags":["brute force","dfs and similar","dp","number theory"]},"1792:F1":{"contestId":1792,"index":"F1","name":"Graph Coloring (easy version)","type":"PROGRAMMING","rating":2700,"tags":["combinatorics","dp","graphs"]},"1705:C":{"contestId":1705,"index":"C","name":"Mark and His Unfinished Essay","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["brute force","implementation"]},"1705:B":{"contestId":1705,"index":"B","name":"Mark the Dust Sweeper","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms","greedy","implementation"]},"1705:A":{"contestId":1705,"index":"A","name":"Mark the Photographer","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","sortings"]},"1705:D":{"contestId":1705,"index":"D","name":"Mark and Lightbulbs","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["combinatorics","constructive algorithms","greedy","math","sortings"]},"1703:G":{"contestId":1703,"index":"G","name":"Good Key, Bad Key","type":"PROGRAMMING","rating":1600,"tags":["bitmasks","brute force","dp","greedy","math"]},"1712:D":{"contestId":1712,"index":"D","name":"Empty Graph","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["binary search","constructive algorithms","data structures","greedy","shortest paths"]},"1450:B":{"contestId":1450,"index":"B","name":"Balls of Steel","type":"PROGRAMMING","points":750,"rating":1000,"tags":["brute force","geometry","greedy"]},"1451:C":{"contestId":1451,"index":"C","name":"String Equality","type":"PROGRAMMING","points":1250,"rating":1400,"tags":["dp","greedy","hashing","implementation","strings"]},"1878:G":{"contestId":1878,"index":"G","name":"wxhtzdy ORO Tree","type":"PROGRAMMING","tags":["binary search","bitmasks","brute force","data structures","dfs and similar","implementation","trees"]},"1451:D":{"contestId":1451,"index":"D","name":"Circle Game","type":"PROGRAMMING","points":1750,"rating":1700,"tags":["games","geometry","math"]},"1451:E1":{"contestId":1451,"index":"E1","name":"Bitwise Queries (Easy Version)","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["bitmasks","constructive algorithms","interactive","math"]},"1451:E2":{"contestId":1451,"index":"E2","name":"Bitwise Queries (Hard Version)","type":"PROGRAMMING","points":1000,"rating":2300,"tags":["bitmasks","constructive algorithms","interactive","math"]},"1451:F":{"contestId":1451,"index":"F","name":"Nullify The Matrix","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["constructive algorithms","games"]},"1452:G":{"contestId":1452,"index":"G","name":"Game On Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","dfs and similar","greedy","trees"]},"1452:D":{"contestId":1452,"index":"D","name":"Radio Towers","type":"PROGRAMMING","rating":1600,"tags":["combinatorics","dp","math"]},"1452:E":{"contestId":1452,"index":"E","name":"Two Editorials","type":"PROGRAMMING","rating":2500,"tags":["brute force","dp","greedy","sortings","two pointers"]},"1455:D":{"contestId":1455,"index":"D","name":"Sequence and Swaps","type":"PROGRAMMING","rating":1600,"tags":["dp","greedy","sortings"]},"1870:F":{"contestId":1870,"index":"F","name":"Lazy Numbers","type":"PROGRAMMING","points":3250,"rating":2900,"tags":["binary search","math"]},"1453:C":{"contestId":1453,"index":"C","name":"Triangles","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["greedy","implementation"]},"1453:D":{"contestId":1453,"index":"D","name":"Checkpoints","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["brute force","constructive algorithms","greedy","math","probabilities"]},"1453:E":{"contestId":1453,"index":"E","name":"Dog Snacks","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["binary search","dfs and similar","dp","greedy","trees"]},"1453:F":{"contestId":1453,"index":"F","name":"Even Harder","type":"PROGRAMMING","points":3500,"rating":2700,"tags":["dp"]},"1454:E":{"contestId":1454,"index":"E","name":"Number of Simple Paths","type":"PROGRAMMING","rating":2000,"tags":["combinatorics","dfs and similar","graphs","trees"]},"1454:F":{"contestId":1454,"index":"F","name":"Array Partition","type":"PROGRAMMING","rating":2100,"tags":["binary search","data structures","greedy","two pointers"]},"1455:E":{"contestId":1455,"index":"E","name":"Four Points","type":"PROGRAMMING","rating":2400,"tags":["brute force","constructive algorithms","flows","geometry","greedy","implementation","math","ternary search"]},"1458:A":{"contestId":1458,"index":"A","name":"Row GCD","type":"PROGRAMMING","points":500,"rating":1600,"tags":["math","number theory"]},"1867:F":{"contestId":1867,"index":"F","name":"Most Different Tree","type":"PROGRAMMING","points":4000,"rating":2700,"tags":["brute force","constructive algorithms","dfs and similar","greedy","hashing"]},"1458:B":{"contestId":1458,"index":"B","name":"Glass Half Spilled","type":"PROGRAMMING","points":1000,"rating":2000,"tags":["dp"]},"1458:C":{"contestId":1458,"index":"C","name":"Latin Square","type":"PROGRAMMING","points":1500,"rating":2700,"tags":["math","matrices"]},"1463:B":{"contestId":1463,"index":"B","name":"Find The Array","type":"PROGRAMMING","rating":1400,"tags":["bitmasks","constructive algorithms","greedy"]},"1461:F":{"contestId":1461,"index":"F","name":"Mathematical Expression","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["constructive algorithms","dp","greedy"]},"1461:A":{"contestId":1461,"index":"A","name":"String Generation","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy"]},"1461:B":{"contestId":1461,"index":"B","name":"Find the Spruce","type":"PROGRAMMING","points":1000,"rating":1400,"tags":["brute force","dp","implementation"]},"1461:E":{"contestId":1461,"index":"E","name":"Water Level","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["brute force","graphs","greedy","implementation","math"]},"1461:D":{"contestId":1461,"index":"D","name":"Divide and Summarize","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["binary search","brute force","data structures","divide and conquer","implementation","sortings"]},"1461:C":{"contestId":1461,"index":"C","name":"Random Events","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["dp","math","probabilities"]},"1462:E1":{"contestId":1462,"index":"E1","name":"Close Tuples (easy version)","type":"PROGRAMMING","rating":1500,"tags":["binary search","combinatorics","math","sortings","two pointers"]},"1462:E2":{"contestId":1462,"index":"E2","name":"Close Tuples (hard version)","type":"PROGRAMMING","rating":1700,"tags":["binary search","combinatorics","implementation","math","sortings","two pointers"]},"1462:F":{"contestId":1462,"index":"F","name":"The Treasure of The Segments","type":"PROGRAMMING","rating":1800,"tags":["binary search","data structures","greedy"]},"1463:C":{"contestId":1463,"index":"C","name":"Busy Robot","type":"PROGRAMMING","rating":1800,"tags":["implementation"]},"1468:A":{"contestId":1468,"index":"A","name":"LaIS","type":"PROGRAMMING","rating":2200,"tags":["data structures","dp","greedy"]},"1463:D":{"contestId":1463,"index":"D","name":"Pairs","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","greedy","two pointers"]},"1463:E":{"contestId":1463,"index":"E","name":"Plan of Lectures","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","dsu","graphs","implementation","sortings","trees"]},"1466:F":{"contestId":1466,"index":"F","name":"Euclid's nightmare","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["bitmasks","dfs and similar","dsu","graphs","greedy","math","sortings"]},"1466:E":{"contestId":1466,"index":"E","name":"Apollo versus Pan","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["bitmasks","brute force","math"]},"1466:D":{"contestId":1466,"index":"D","name":"13th Labour of Heracles","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["data structures","greedy","sortings","trees"]},"1466:C":{"contestId":1466,"index":"C","name":"Canine poetry","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["dp","greedy","strings"]},"1467:D":{"contestId":1467,"index":"D","name":"Sum of Paths","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["combinatorics","dp","math"]},"1467:C":{"contestId":1467,"index":"C","name":"Three Bags","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["constructive algorithms","greedy"]},"1467:E":{"contestId":1467,"index":"E","name":"Distinctive Roots in a Tree","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","dfs and similar","dp","trees"]},"1468:H":{"contestId":1468,"index":"H","name":"K and Medians","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy","math"]},"1468:M":{"contestId":1468,"index":"M","name":"Similar Sets","type":"PROGRAMMING","rating":2300,"tags":["data structures","graphs","implementation"]},"1468:C":{"contestId":1468,"index":"C","name":"Berpizza","type":"PROGRAMMING","rating":1400,"tags":["data structures","implementation"]},"1468:K":{"contestId":1468,"index":"K","name":"The Robot","type":"PROGRAMMING","rating":1600,"tags":["brute force","implementation"]},"1468:N":{"contestId":1468,"index":"N","name":"Waste Sorting","type":"PROGRAMMING","rating":900,"tags":["greedy","implementation"]},"1469:F":{"contestId":1469,"index":"F","name":"Power Sockets","type":"PROGRAMMING","rating":2600,"tags":["binary search","data structures","greedy"]},"1860:F":{"contestId":1860,"index":"F","name":"Evaluate RBS","type":"PROGRAMMING","rating":2900,"tags":["data structures","geometry","implementation","math","sortings"]},"1469:C":{"contestId":1469,"index":"C","name":"Building a Fence","type":"PROGRAMMING","rating":1600,"tags":["dp","greedy","implementation","two pointers"]},"1469:D":{"contestId":1469,"index":"D","name":"Ceil Divisions","type":"PROGRAMMING","rating":1700,"tags":["brute force","constructive algorithms","math","number theory"]},"1469:E":{"contestId":1469,"index":"E","name":"A Bit Similar","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","brute force","hashing","string suffix structures","strings","two pointers"]},"1470:E":{"contestId":1470,"index":"E","name":"Strange Permutation","type":"PROGRAMMING","points":2000,"rating":3200,"tags":["binary search","combinatorics","data structures","dp","graphs","implementation","two pointers"]},"1470:A":{"contestId":1470,"index":"A","name":"Strange Birthday Party","type":"PROGRAMMING","points":500,"rating":1300,"tags":["binary search","dp","greedy","sortings","two pointers"]},"1470:B":{"contestId":1470,"index":"B","name":"Strange Definition","type":"PROGRAMMING","points":750,"rating":1900,"tags":["bitmasks","graphs","hashing","math","number theory"]},"1470:C":{"contestId":1470,"index":"C","name":"Strange Shuffle","type":"PROGRAMMING","points":1000,"rating":2500,"tags":["binary search","brute force","constructive algorithms","interactive"]},"1470:D":{"contestId":1470,"index":"D","name":"Strange Housing","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["constructive algorithms","dfs and similar","graph matchings","graphs","greedy"]},"1859:F":{"contestId":1859,"index":"F","name":"Teleportation in Byteland","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["data structures","dfs and similar","divide and conquer","graphs","shortest paths","trees"]},"1859:E":{"contestId":1859,"index":"E","name":"Maximum Monogonosity","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["brute force","dp","math"]},"1472:F":{"contestId":1472,"index":"F","name":"New Year's Puzzle","type":"PROGRAMMING","rating":2100,"tags":["brute force","dp","graph matchings","greedy","sortings"]},"1472:G":{"contestId":1472,"index":"G","name":"Moving to the Capital","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","dp","graphs","shortest paths"]},"1473:A":{"contestId":1473,"index":"A","name":"Replacing Elements","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation","math","sortings"]},"1473:B":{"contestId":1473,"index":"B","name":"String LCM","type":"PROGRAMMING","rating":1000,"tags":["brute force","math","number theory","strings"]},"1473:C":{"contestId":1473,"index":"C","name":"No More Inversions","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","math"]},"1473:G":{"contestId":1473,"index":"G","name":"Tiles","type":"PROGRAMMING","rating":2800,"tags":["combinatorics","dp","fft","math"]},"1473:E":{"contestId":1473,"index":"E","name":"Minimum Path","type":"PROGRAMMING","rating":2400,"tags":["graphs","shortest paths"]},"1473:D":{"contestId":1473,"index":"D","name":"Program","type":"PROGRAMMING","rating":1700,"tags":["data structures","dp","implementation","strings"]},"1474:C":{"contestId":1474,"index":"C","name":"Array Destruction","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["brute force","constructive algorithms","data structures","greedy","implementation","sortings"]},"1474:B":{"contestId":1474,"index":"B","name":"Different Divisors","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["binary search","constructive algorithms","greedy","math","number theory"]},"1474:D":{"contestId":1474,"index":"D","name":"Cleaning","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["data structures","dp","greedy","math"]},"1474:E":{"contestId":1474,"index":"E","name":"What Is It?","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["constructive algorithms","greedy"]},"1475:D":{"contestId":1475,"index":"D","name":"Cleaning the Phone","type":"PROGRAMMING","rating":1800,"tags":["binary search","dp","sortings","two pointers"]},"1475:E":{"contestId":1475,"index":"E","name":"Advertising Agency","type":"PROGRAMMING","rating":1600,"tags":["combinatorics","math","sortings"]},"1475:F":{"contestId":1475,"index":"F","name":"Unusual Matrix","type":"PROGRAMMING","rating":1900,"tags":["2-sat","brute force","constructive algorithms"]},"1475:G":{"contestId":1475,"index":"G","name":"Strange Beauty","type":"PROGRAMMING","rating":1900,"tags":["dp","math","number theory","sortings"]},"1476:C":{"contestId":1476,"index":"C","name":"Longest Simple Cycle","type":"PROGRAMMING","rating":1600,"tags":["dp","graphs","greedy"]},"1476:E":{"contestId":1476,"index":"E","name":"Pattern Matching","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","data structures","dfs and similar","graphs","hashing","sortings","strings"]},"1476:F":{"contestId":1476,"index":"F","name":"Lanterns","type":"PROGRAMMING","rating":3000,"tags":["binary search","data structures","dp"]},"1476:D":{"contestId":1476,"index":"D","name":"Journey","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","dp","dsu","implementation"]},"1477:B":{"contestId":1477,"index":"B","name":"Nezzar and Binary String","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["data structures","greedy"]},"1477:C":{"contestId":1477,"index":"C","name":"Nezzar and Nice Beatmap","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["constructive algorithms","geometry","greedy","math","sortings"]},"1477:A":{"contestId":1477,"index":"A","name":"Nezzar and Board","type":"PROGRAMMING","points":500,"rating":1800,"tags":["constructive algorithms","math","number theory"]},"1479:A":{"contestId":1479,"index":"A","name":"Searching Local Minimum","type":"PROGRAMMING","points":500,"rating":1700,"tags":["binary search","interactive","ternary search"]},"1479:B2":{"contestId":1479,"index":"B2","name":"Painting the Array II","type":"PROGRAMMING","points":750,"rating":2100,"tags":["constructive algorithms","data structures","dp","greedy","implementation"]},"1479:B1":{"contestId":1479,"index":"B1","name":"Painting the Array I","type":"PROGRAMMING","points":750,"rating":1900,"tags":["constructive algorithms","data structures","dp","greedy","implementation"]},"1479:C":{"contestId":1479,"index":"C","name":"Continuous City","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["bitmasks","constructive algorithms"]},"1479:D":{"contestId":1479,"index":"D","name":"Odd Mineral Resource","type":"PROGRAMMING","points":2250,"rating":2900,"tags":["binary search","bitmasks","brute force","data structures","probabilities","trees"]},"1481:C":{"contestId":1481,"index":"C","name":"Fence Painting","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["brute force","constructive algorithms","greedy"]},"1481:D":{"contestId":1481,"index":"D","name":"AB Graph","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["brute force","constructive algorithms","graphs","greedy","implementation"]},"1481:E":{"contestId":1481,"index":"E","name":"Sorting Books","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["data structures","dp","greedy"]},"1481:F":{"contestId":1481,"index":"F","name":"AB Tree","type":"PROGRAMMING","points":3000,"rating":3100,"tags":["dp","greedy","trees"]},"1483:A":{"contestId":1483,"index":"A","name":"Basic Diplomacy","type":"PROGRAMMING","points":500,"rating":1600,"tags":["constructive algorithms","greedy","implementation"]},"1483:B":{"contestId":1483,"index":"B","name":"Playlist","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["data structures","dsu","implementation"]},"1483:C":{"contestId":1483,"index":"C","name":"Skyline Photo","type":"PROGRAMMING","points":1500,"rating":2100,"tags":["binary search","data structures","dp","greedy"]},"1483:D":{"contestId":1483,"index":"D","name":"Useful Edges","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["dp","graphs","shortest paths"]},"1485:C":{"contestId":1485,"index":"C","name":"Floor and Mod","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["binary search","brute force","math","number theory"]},"1638:C":{"contestId":1638,"index":"C","name":"Inversion Graph","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["data structures","dsu","graphs","math"]},"1485:D":{"contestId":1485,"index":"D","name":"Multiples and Power Differences","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["constructive algorithms","graphs","math","number theory"]},"1485:E":{"contestId":1485,"index":"E","name":"Move and Swap","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["dfs and similar","dp","greedy","trees"]},"1485:F":{"contestId":1485,"index":"F","name":"Copy or Prefix Sum","type":"PROGRAMMING","points":3000,"rating":2400,"tags":["combinatorics","data structures","dp","sortings"]},"1486:C1":{"contestId":1486,"index":"C1","name":"Guessing the Greatest (easy version)","type":"PROGRAMMING","points":750,"rating":1600,"tags":["binary search","interactive"]},"1486:C2":{"contestId":1486,"index":"C2","name":"Guessing the Greatest (hard version)","type":"PROGRAMMING","points":750,"rating":1900,"tags":["binary search","interactive"]},"1486:D":{"contestId":1486,"index":"D","name":"Max Median","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["binary search","data structures","dp"]},"1486:E":{"contestId":1486,"index":"E","name":"Paired Payment","type":"PROGRAMMING","points":2250,"rating":2200,"tags":["binary search","brute force","constructive algorithms","dp","flows","graphs","shortest paths"]},"1486:F":{"contestId":1486,"index":"F","name":"Pairs of Paths","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["combinatorics","data structures","dfs and similar","dp","trees"]},"1487:C":{"contestId":1487,"index":"C","name":"Minimum Ties","type":"PROGRAMMING","rating":1500,"tags":["brute force","constructive algorithms","dfs and similar","graphs","greedy","implementation","math"]},"1487:D":{"contestId":1487,"index":"D","name":"Pythagorean Triples","type":"PROGRAMMING","rating":1500,"tags":["binary search","brute force","math","number theory"]},"1487:E":{"contestId":1487,"index":"E","name":"Cheap Dinner","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","graphs","greedy","implementation","sortings","two pointers"]},"1487:G":{"contestId":1487,"index":"G","name":"String Counting","type":"PROGRAMMING","rating":2700,"tags":["combinatorics","dp","fft","math"]},"1490:G":{"contestId":1490,"index":"G","name":"Old Floppy Drive ","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","math"]},"1491:G":{"contestId":1491,"index":"G","name":"Switch and Flip","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["constructive algorithms","graphs","math"]},"1491:C":{"contestId":1491,"index":"C","name":"Pekora and Trampoline","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["brute force","data structures","dp","greedy","implementation"]},"1491:D":{"contestId":1491,"index":"D","name":"Zookeeper and The Infinite Zoo","type":"PROGRAMMING","points":1250,"rating":1800,"tags":["bitmasks","constructive algorithms","dp","greedy","math"]},"1491:E":{"contestId":1491,"index":"E","name":"Fib-tree","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["brute force","dfs and similar","divide and conquer","number theory","trees"]},"1491:F":{"contestId":1491,"index":"F","name":"Magnets","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["binary search","constructive algorithms","interactive"]},"1492:C":{"contestId":1492,"index":"C","name":"Maximum width","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["binary search","data structures","dp","greedy","two pointers"]},"1492:D":{"contestId":1492,"index":"D","name":"Genius's Gambit","type":"PROGRAMMING","points":2250,"rating":1900,"tags":["bitmasks","constructive algorithms","greedy","math"]},"1492:E":{"contestId":1492,"index":"E","name":"Almost Fault-Tolerant Database","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","greedy","implementation"]},"1493:C":{"contestId":1493,"index":"C","name":"K-beautiful Strings","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["binary search","brute force","constructive algorithms","greedy","strings"]},"1493:D":{"contestId":1493,"index":"D","name":"GCD of an Array","type":"PROGRAMMING","points":2250,"rating":2100,"tags":["brute force","data structures","hashing","implementation","math","number theory","sortings","two pointers"]},"1493:E":{"contestId":1493,"index":"E","name":"Enormous XOR","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["bitmasks","constructive algorithms","greedy","math","strings","two pointers"]},"1493:F":{"contestId":1493,"index":"F","name":"Enchanted Matrix","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["bitmasks","interactive","number theory"]},"1494:A":{"contestId":1494,"index":"A","name":"ABC String","type":"PROGRAMMING","rating":900,"tags":["bitmasks","brute force","implementation"]},"1494:C":{"contestId":1494,"index":"C","name":"1D Sokoban","type":"PROGRAMMING","rating":1900,"tags":["binary search","dp","greedy","implementation","two pointers"]},"1494:D":{"contestId":1494,"index":"D","name":"Dogeforces","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},"1494:E":{"contestId":1494,"index":"E","name":"A-Z Graph","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","data structures","graphs","hashing"]},"1494:F":{"contestId":1494,"index":"F","name":"Delete The Edges","type":"PROGRAMMING","rating":2900,"tags":["brute force","constructive algorithms","dfs and similar","graphs","implementation"]},"1495:A":{"contestId":1495,"index":"A","name":"Diamond Miner","type":"PROGRAMMING","points":500,"rating":1200,"tags":["geometry","greedy","math","sortings"]},"1495:C":{"contestId":1495,"index":"C","name":"Garden of the Sun","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["constructive algorithms","graphs"]},"1497:C1":{"contestId":1497,"index":"C1","name":"k-LCM (easy version)","type":"PROGRAMMING","points":750,"rating":1200,"tags":["constructive algorithms","math"]},"1497:C2":{"contestId":1497,"index":"C2","name":"k-LCM (hard version)","type":"PROGRAMMING","points":500,"rating":1600,"tags":["constructive algorithms","math"]},"1497:D":{"contestId":1497,"index":"D","name":"Genius","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["bitmasks","dp","graphs","number theory"]},"1497:E2":{"contestId":1497,"index":"E2","name":"Square-free division (hard version)","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["data structures","dp","greedy","math","number theory","two pointers"]},"1497:E1":{"contestId":1497,"index":"E1","name":"Square-Free Division (easy version)","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["data structures","dp","greedy","math","number theory","two pointers"]},"1498:D":{"contestId":1498,"index":"D","name":"Bananas in a Microwave","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["dfs and similar","dp","graphs","implementation"]},"1498:E":{"contestId":1498,"index":"E","name":"Two Houses","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["brute force","graphs","greedy","interactive","sortings"]},"1498:F":{"contestId":1498,"index":"F","name":"Christmas Game","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["bitmasks","data structures","dfs and similar","dp","games","math","trees"]},"1499:D":{"contestId":1499,"index":"D","name":"The Number of Pairs","type":"PROGRAMMING","rating":2100,"tags":["dp","math","number theory"]},"1499:E":{"contestId":1499,"index":"E","name":"Chaotic Merge","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dp","math","strings"]},"1499:F":{"contestId":1499,"index":"F","name":"Diameter Cuts","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dfs and similar","dp","trees"]},"1500:A":{"contestId":1500,"index":"A","name":"Going Home","type":"PROGRAMMING","points":750,"rating":1800,"tags":["brute force","hashing","implementation","math"]},"1500:B":{"contestId":1500,"index":"B","name":"Two chandeliers","type":"PROGRAMMING","points":750,"rating":2200,"tags":["binary search","brute force","chinese remainder theorem","math","number theory"]},"1503:D":{"contestId":1503,"index":"D","name":"Flip the Cards","type":"PROGRAMMING","points":1750,"rating":2600,"tags":["2-sat","constructive algorithms","data structures","greedy","sortings","two pointers"]},"1503:C":{"contestId":1503,"index":"C","name":"Travelling Salesman Problem","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["binary search","data structures","dp","greedy","shortest paths","sortings","two pointers"]},"1503:B":{"contestId":1503,"index":"B","name":"3-Coloring","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["constructive algorithms","games","interactive"]},"1503:A":{"contestId":1503,"index":"A","name":"Balance the Bits","type":"PROGRAMMING","points":750,"rating":1600,"tags":["constructive algorithms","greedy"]},"1506:F":{"contestId":1506,"index":"F","name":"Triangular Paths","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","graphs","math","shortest paths","sortings"]},"1847:E":{"contestId":1847,"index":"E","name":"Triangle Platinum?","type":"PROGRAMMING","points":2750,"rating":2900,"tags":["brute force","combinatorics","implementation","interactive","math","probabilities"]},"1506:G":{"contestId":1506,"index":"G","name":"Maximize the Remaining String","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dp","greedy","strings"]},"1508:C":{"contestId":1508,"index":"C","name":"Complete the MST","type":"PROGRAMMING","points":1500,"rating":2500,"tags":["bitmasks","brute force","data structures","dfs and similar","dsu","graphs","greedy","trees"]},"1508:E":{"contestId":1508,"index":"E","name":"Tree Calendar","type":"PROGRAMMING","points":2250,"rating":3100,"tags":["brute force","constructive algorithms","data structures","dfs and similar","sortings","trees"]},"1508:D":{"contestId":1508,"index":"D","name":"Swap Pass","type":"PROGRAMMING","points":2250,"rating":3000,"tags":["constructive algorithms","geometry","sortings"]},"1508:A":{"contestId":1508,"index":"A","name":"Binary Literature","type":"PROGRAMMING","points":750,"rating":1900,"tags":["constructive algorithms","greedy","implementation","strings","two pointers"]},"1509:C":{"contestId":1509,"index":"C","name":"The Sports Festival","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["dp","greedy"]},"1511:C":{"contestId":1511,"index":"C","name":"Yet Another Card Deck","type":"PROGRAMMING","rating":1100,"tags":["brute force","data structures","implementation","trees"]},"1511:D":{"contestId":1511,"index":"D","name":"Min Cost String","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms","graphs","greedy","strings"]},"1511:E":{"contestId":1511,"index":"E","name":"Colorings and Dominoes","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","dp","greedy","math"]},"1512:G":{"contestId":1512,"index":"G","name":"Short Task","type":"PROGRAMMING","rating":1700,"tags":["brute force","dp","math","number theory"]},"1512:F":{"contestId":1512,"index":"F","name":"Education","type":"PROGRAMMING","rating":1900,"tags":["brute force","dp","greedy","implementation"]},"1513:C":{"contestId":1513,"index":"C","name":"Add One","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["dp","matrices"]},"1513:D":{"contestId":1513,"index":"D","name":"GCD and MST","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["constructive algorithms","dsu","graphs","greedy","number theory","sortings"]},"1513:E":{"contestId":1513,"index":"E","name":"Cost Equilibrium","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["combinatorics","constructive algorithms","math","sortings"]},"1513:F":{"contestId":1513,"index":"F","name":"Swapping Problem","type":"PROGRAMMING","points":3500,"rating":2500,"tags":["brute force","constructive algorithms","data structures","sortings"]},"1514:C":{"contestId":1514,"index":"C","name":"Product 1 Modulo N","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["greedy","number theory"]},"1514:D":{"contestId":1514,"index":"D","name":"Cut and Stick","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["binary search","data structures","greedy","implementation","sortings"]},"1515:B":{"contestId":1515,"index":"B","name":"Phoenix and Puzzle","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["brute force","geometry","math","number theory"]},"1515:A":{"contestId":1515,"index":"A","name":"Phoenix and Gold","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","math"]},"1515:C":{"contestId":1515,"index":"C","name":"Phoenix and Towers","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","data structures","greedy"]},"1515:D":{"contestId":1515,"index":"D","name":"Phoenix and Socks","type":"PROGRAMMING","points":2000,"rating":1500,"tags":["greedy","sortings","two pointers"]},"1515:E":{"contestId":1515,"index":"E","name":"Phoenix and Computers","type":"PROGRAMMING","points":2750,"rating":2200,"tags":["combinatorics","dp","math"]},"1515:F":{"contestId":1515,"index":"F","name":"Phoenix and Earthquake","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","trees"]},"1515:G":{"contestId":1515,"index":"G","name":"Phoenix and Odometers","type":"PROGRAMMING","points":3500,"rating":2700,"tags":["dfs and similar","graphs","math","number theory"]},"1516:C":{"contestId":1516,"index":"C","name":"Baby Ehab Partitions Again","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["bitmasks","constructive algorithms","dp","math"]},"1516:B":{"contestId":1516,"index":"B","name":"AGAGA XOOORRR","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["bitmasks","brute force","dp","greedy"]},"1516:A":{"contestId":1516,"index":"A","name":"Tit for Tat","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy"]},"1516:D":{"contestId":1516,"index":"D","name":"Cut","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["binary search","data structures","dp","graphs","number theory","two pointers"]},"1516:E":{"contestId":1516,"index":"E","name":"Baby Ehab Plays with Permutations","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["combinatorics","dp","math"]},"1517:C":{"contestId":1517,"index":"C","name":"Fillomino 2","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["constructive algorithms","dfs and similar","greedy","implementation"]},"1517:B":{"contestId":1517,"index":"B","name":"Morning Jogging","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["constructive algorithms","greedy","sortings"]},"1517:A":{"contestId":1517,"index":"A","name":"Sum of 2050","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"1517:D":{"contestId":1517,"index":"D","name":"Explorer Space","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["dp","graphs","shortest paths"]},"1517:E":{"contestId":1517,"index":"E","name":"Group Photo","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["binary search","data structures","implementation","two pointers"]},"1517:F":{"contestId":1517,"index":"F","name":"Reunion","type":"PROGRAMMING","points":3000,"rating":3200,"tags":["combinatorics","dp","trees"]},"1842:D":{"contestId":1842,"index":"D","name":"Tenzing and His Animal Friends ","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["constructive algorithms","graphs","greedy"]},"1842:F":{"contestId":1842,"index":"F","name":"Tenzing and Tree","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["dfs and similar","greedy","shortest paths","sortings","trees"]},"1519:D":{"contestId":1519,"index":"D","name":"Maximum Sum of Products","type":"PROGRAMMING","rating":1600,"tags":["brute force","dp","implementation","math","two pointers"]},"1519:E":{"contestId":1519,"index":"E","name":"Off by One","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","dfs and similar","geometry","graphs","sortings","trees"]},"1520:F1":{"contestId":1520,"index":"F1","name":"Guess the K-th Zero (Easy version)","type":"PROGRAMMING","rating":1600,"tags":["binary search","interactive"]},"1520:F2":{"contestId":1520,"index":"F2","name":"Guess the K-th Zero (Hard version)","type":"PROGRAMMING","rating":2200,"tags":["binary search","constructive algorithms","data structures","interactive"]},"1520:G":{"contestId":1520,"index":"G","name":"To Go Or Not To Go?","type":"PROGRAMMING","rating":2200,"tags":["brute force","dfs and similar","graphs","greedy","implementation","shortest paths"]},"1521:C":{"contestId":1521,"index":"C","name":"Nastia and a Hidden Permutation","type":"PROGRAMMING","points":1750,"rating":2000,"tags":["constructive algorithms","interactive"]},"1835:E":{"contestId":1835,"index":"E","name":"Old Mobile","type":"PROGRAMMING","points":2250,"rating":3500,"tags":["combinatorics","dp","probabilities"]},"1836:B":{"contestId":1836,"index":"B","name":"Astrophysicists","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["greedy","math"]},"1835:C":{"contestId":1835,"index":"C","name":"Twin Clusters","type":"PROGRAMMING","points":1500,"rating":2600,"tags":["bitmasks","brute force","constructive algorithms","math","probabilities"]},"1834:F":{"contestId":1834,"index":"F","name":"Typewriter","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["brute force","math"]},"1521:D":{"contestId":1521,"index":"D","name":"Nastia Plays with a Tree","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["constructive algorithms","data structures","dfs and similar","dp","dsu","greedy","implementation","trees"]},"1521:E":{"contestId":1521,"index":"E","name":"Nastia and a Beautiful Matrix","type":"PROGRAMMING","points":2750,"rating":2700,"tags":["binary search","constructive algorithms","dp","greedy"]},"1523:G":{"contestId":1523,"index":"G","name":"Try Booking","type":"PROGRAMMING","points":3250,"rating":3200,"tags":["data structures","divide and conquer"]},"1523:F":{"contestId":1523,"index":"F","name":"Favorite Game","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["bitmasks","dp"]},"1523:C":{"contestId":1523,"index":"C","name":"Compression and Expansion","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["brute force","data structures","greedy","implementation","trees"]},"1523:D":{"contestId":1523,"index":"D","name":"Love-Hate","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["bitmasks","brute force","dp","probabilities"]},"1523:E":{"contestId":1523,"index":"E","name":"Crypto Lights","type":"PROGRAMMING","points":2250,"rating":2600,"tags":["combinatorics","dp","math","probabilities"]},"1525:C":{"contestId":1525,"index":"C","name":"Robot Collisions","type":"PROGRAMMING","rating":2000,"tags":["data structures","greedy","implementation","sortings"]},"1525:D":{"contestId":1525,"index":"D","name":"Armchairs","type":"PROGRAMMING","rating":1800,"tags":["dp","flows","graph matchings","greedy"]},"1525:E":{"contestId":1525,"index":"E","name":"Assimilation IV","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","dp","math","probabilities","two pointers"]},"1526:B":{"contestId":1526,"index":"B","name":"I Hate 1111","type":"PROGRAMMING","points":1000,"rating":1400,"tags":["dp","math","number theory"]},"1526:A":{"contestId":1526,"index":"A","name":"Mean Inequality","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","sortings"]},"1526:C1":{"contestId":1526,"index":"C1","name":"Potions (Easy Version)","type":"PROGRAMMING","points":750,"rating":1500,"tags":["brute force","data structures","dp","greedy"]},"1526:C2":{"contestId":1526,"index":"C2","name":"Potions (Hard Version)","type":"PROGRAMMING","points":1000,"rating":1600,"tags":["data structures","greedy"]},"1841:F":{"contestId":1841,"index":"F","name":"Monocarp and a Strategic Game","type":"PROGRAMMING","rating":2700,"tags":["geometry","sortings","two pointers"]},"1526:E":{"contestId":1526,"index":"E","name":"Oolimry and Suffix Array","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["combinatorics","constructive algorithms","math"]},"1527:B1":{"contestId":1527,"index":"B1","name":"Palindrome Game (easy version)","type":"PROGRAMMING","points":750,"rating":1200,"tags":["constructive algorithms","games"]},"1527:B2":{"contestId":1527,"index":"B2","name":"Palindrome Game (hard version)","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["constructive algorithms","games"]},"1527:C":{"contestId":1527,"index":"C","name":"Sequence Pair Weight","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["hashing","implementation","math"]},"1527:D":{"contestId":1527,"index":"D","name":"MEX Tree","type":"PROGRAMMING","points":2250,"rating":2400,"tags":["combinatorics","dfs and similar","implementation","math","trees"]},"1527:E":{"contestId":1527,"index":"E","name":"Partition Game","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["binary search","data structures","divide and conquer","dp"]},"1528:A":{"contestId":1528,"index":"A","name":"Parsa's Humongous Tree","type":"PROGRAMMING","points":750,"rating":1600,"tags":["dfs and similar","divide and conquer","dp","greedy","trees"]},"1528:C":{"contestId":1528,"index":"C","name":"Trees of Tranquillity","type":"PROGRAMMING","points":1750,"rating":2300,"tags":["data structures","dfs and similar","greedy","trees"]},"1528:B":{"contestId":1528,"index":"B","name":"Kavi on Pairing Duty","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["combinatorics","dp","math"]},"1528:D":{"contestId":1528,"index":"D","name":"It's a bird! No, it's a plane! No, it's AaParsa!","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["constructive algorithms","graphs","shortest paths"]},"1530:D":{"contestId":1530,"index":"D","name":"Secret Santa","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["constructive algorithms","flows","graphs","greedy","math"]},"1530:E":{"contestId":1530,"index":"E","name":"Minimax","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["constructive algorithms","greedy","strings"]},"1534:C":{"contestId":1534,"index":"C","name":"Little Alawn's Puzzle","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["combinatorics","dp","dsu","graphs","math"]},"1534:D":{"contestId":1534,"index":"D","name":"Lost Tree","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["constructive algorithms","interactive","trees"]},"1540:A":{"contestId":1540,"index":"A","name":"Great Graphs","type":"PROGRAMMING","points":500,"rating":1400,"tags":["constructive algorithms","graphs","greedy","shortest paths","sortings"]},"1540:C2":{"contestId":1540,"index":"C2","name":"Converging Array (Hard Version)","type":"PROGRAMMING","points":750,"rating":2900,"tags":["dp","math"]},"1540:C1":{"contestId":1540,"index":"C1","name":"Converging Array (Easy Version)","type":"PROGRAMMING","points":1500,"rating":2700,"tags":["dp","math"]},"1535:C":{"contestId":1535,"index":"C","name":"Unstable String","type":"PROGRAMMING","rating":1400,"tags":["binary search","dp","greedy","implementation","strings","two pointers"]},"1535:D":{"contestId":1535,"index":"D","name":"Playoff Tournament","type":"PROGRAMMING","rating":1800,"tags":["data structures","dfs and similar","dp","implementation","trees"]},"1535:E":{"contestId":1535,"index":"E","name":"Gold Transfer","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures","dp","greedy","interactive","trees"]},"1536:C":{"contestId":1536,"index":"C","name":"Diluc and Kaeya","type":"PROGRAMMING","points":1500,"rating":1500,"tags":["data structures","dp","hashing","number theory"]},"1536:D":{"contestId":1536,"index":"D","name":"Omkar and Medians","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["data structures","greedy","implementation"]},"1536:E":{"contestId":1536,"index":"E","name":"Omkar and Forest","type":"PROGRAMMING","points":2250,"rating":2300,"tags":["combinatorics","graphs","math","shortest paths"]},"1537:D":{"contestId":1537,"index":"D","name":"Deleting Divisors","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["games","math","number theory"]},"1537:E1":{"contestId":1537,"index":"E1","name":"Erase and Extend (Easy Version)","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["binary search","brute force","dp","greedy","hashing","implementation","string suffix structures","strings","two pointers"]},"1537:E2":{"contestId":1537,"index":"E2","name":"Erase and Extend (Hard Version)","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["binary search","data structures","greedy","hashing","string suffix structures","strings","two pointers"]},"1537:F":{"contestId":1537,"index":"F","name":"Figure Fixing","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","math"]},"1538:F":{"contestId":1538,"index":"F","name":"Interesting Function","type":"PROGRAMMING","rating":1500,"tags":["binary search","dp","math","number theory"]},"1538:E":{"contestId":1538,"index":"E","name":"Funny Substrings","type":"PROGRAMMING","rating":2100,"tags":["data structures","hashing","implementation","matrices","strings"]},"1538:G":{"contestId":1538,"index":"G","name":"Gift Set","type":"PROGRAMMING","rating":2100,"tags":["binary search","greedy","math","ternary search"]},"1539:A":{"contestId":1539,"index":"A","name":"Contest Start","type":"PROGRAMMING","points":500,"rating":1000,"tags":["combinatorics","geometry","greedy","math"]},"1539:C":{"contestId":1539,"index":"C","name":"Stable Groups","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["greedy","sortings"]},"1539:D":{"contestId":1539,"index":"D","name":"PriceFixed","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["binary search","greedy","implementation","sortings","two pointers"]},"1539:E":{"contestId":1539,"index":"E","name":"Game with Cards","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["binary search","constructive algorithms","data structures","dp","greedy","implementation"]},"1542:B":{"contestId":1542,"index":"B","name":"Plus and Multiply","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["constructive algorithms","math","number theory"]},"1542:C":{"contestId":1542,"index":"C","name":"Strange Function","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["math","number theory"]},"1542:D":{"contestId":1542,"index":"D","name":"Priority Queue","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["combinatorics","dp","implementation","math","ternary search"]},"1542:E2":{"contestId":1542,"index":"E2","name":"Abnormal Permutation Pairs (hard version)","type":"PROGRAMMING","points":1000,"rating":2700,"tags":["combinatorics","dp","fft","math"]},"1542:E1":{"contestId":1542,"index":"E1","name":"Abnormal Permutation Pairs (easy version)","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["combinatorics","dp","fft","math"]},"1543:D1":{"contestId":1543,"index":"D1","name":"RPD and Rap Sheet (Easy Version)","type":"PROGRAMMING","points":1000,"rating":1700,"tags":["bitmasks","constructive algorithms","interactive","math"]},"1543:D2":{"contestId":1543,"index":"D2","name":"RPD and Rap Sheet (Hard Version)","type":"PROGRAMMING","points":1250,"rating":2200,"tags":["brute force","constructive algorithms","interactive","math"]},"1543:E":{"contestId":1543,"index":"E","name":"The Final Pursuit","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["bitmasks","constructive algorithms","divide and conquer","graphs","greedy","math"]},"1545:D":{"contestId":1545,"index":"D","name":"AquaMoon and Wrong Coordinate","type":"PROGRAMMING","points":2250,"rating":3000,"tags":["constructive algorithms","interactive","math"]},"1545:A":{"contestId":1545,"index":"A","name":"AquaMoon and Strange Sort","type":"PROGRAMMING","points":500,"rating":1500,"tags":["sortings"]},"1545:B":{"contestId":1545,"index":"B","name":"AquaMoon and Chess","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["combinatorics","math"]},"1545:C":{"contestId":1545,"index":"C","name":"AquaMoon and Permutations","type":"PROGRAMMING","points":1500,"rating":2800,"tags":["2-sat","brute force","combinatorics","constructive algorithms","graph matchings","graphs"]},"1547:F":{"contestId":1547,"index":"F","name":"Array Stabilization (GCD version)","type":"PROGRAMMING","rating":1900,"tags":["binary search","brute force","data structures","divide and conquer","number theory","two pointers"]},"1034:C":{"contestId":1034,"index":"C","name":"Region Separation","type":"PROGRAMMING","points":1500,"rating":2700,"tags":["combinatorics","dp","number theory","trees"]},"1291:F":{"contestId":1291,"index":"F","name":"Coffee Varieties (easy version)","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["graphs","interactive"]},"1290:D":{"contestId":1290,"index":"D","name":"Coffee Varieties (hard version)","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["constructive algorithms","graphs","interactive"]},"1279:F":{"contestId":1279,"index":"F","name":"New Year and Handle Change","type":"PROGRAMMING","rating":2800,"tags":["binary search","dp"]},"713:C":{"contestId":713,"index":"C","name":"Sonya and Problem Wihtout a Legend","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["dp","sortings"]},"510:E":{"contestId":510,"index":"E","name":"Fox And Dinner","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["flows"]},"1129:D":{"contestId":1129,"index":"D","name":"Isolation","type":"PROGRAMMING","points":2250,"rating":2900,"tags":["data structures","dp"]},"1237:F":{"contestId":1237,"index":"F","name":"Balanced Domino Placements","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["combinatorics","dp"]},"1034:B":{"contestId":1034,"index":"B","name":"Little C Loves 3 II","type":"PROGRAMMING","points":1000,"rating":2200,"tags":["brute force","constructive algorithms","flows","graph matchings"]},"1198:E":{"contestId":1198,"index":"E","name":"Rectangle Painting 2","type":"PROGRAMMING","points":1750,"rating":2500,"tags":["flows","graph matchings","graphs"]},"786:C":{"contestId":786,"index":"C","name":"Till I Collapse","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["data structures","divide and conquer"]},"1603:E":{"contestId":1603,"index":"E","name":"A Perfect Problem","type":"PROGRAMMING","points":3500,"rating":3200,"tags":["combinatorics","dp","math"]},"1097:G":{"contestId":1097,"index":"G","name":"Vladislav and a Great Legend","type":"PROGRAMMING","points":3500,"rating":3000,"tags":["combinatorics","dp","trees"]},"1392:H":{"contestId":1392,"index":"H","name":"ZS Shuffles Cards","type":"PROGRAMMING","points":3500,"rating":3000,"tags":["combinatorics","dp","math","probabilities"]},"100212:C":{"contestId":100212,"index":"C","name":"Order-Preserving Codes","type":"PROGRAMMING","tags":[]},"1179:D":{"contestId":1179,"index":"D","name":"Fedor Runs for President","type":"PROGRAMMING","points":1750,"rating":2700,"tags":["data structures","dp","trees"]},"932:F":{"contestId":932,"index":"F","name":"Escape Through Leaf","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["data structures","dp","geometry"]},"1264:D1":{"contestId":1264,"index":"D1","name":"Beautiful Bracket Sequence (easy version)","type":"PROGRAMMING","points":1000,"rating":2600,"tags":["combinatorics","dp","probabilities"]},"1264:D2":{"contestId":1264,"index":"D2","name":"Beautiful Bracket Sequence (hard version)","type":"PROGRAMMING","points":1000,"rating":2900,"tags":["combinatorics","probabilities"]},"1033:E":{"contestId":1033,"index":"E","name":"Hidden Bipartite Graph","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["binary search","constructive algorithms","dfs and similar","graphs","interactive"]},"660:F":{"contestId":660,"index":"F","name":"Bear and Bowling 4","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","divide and conquer","geometry","ternary search"]},"1416:D":{"contestId":1416,"index":"D","name":"Graph and Queries","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["data structures","dsu","graphs","implementation","trees"]},"809:E":{"contestId":809,"index":"E","name":"Surprise me!","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["divide and conquer","math","number theory","trees"]},"123:D":{"contestId":123,"index":"D","name":"String","type":"PROGRAMMING","points":2000,"rating":2300,"tags":["string suffix structures"]},"958:B2":{"contestId":958,"index":"B2","name":"Maximum Control (medium)","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","graphs","greedy","trees"]},"1146:G":{"contestId":1146,"index":"G","name":"Zoning Restrictions","type":"PROGRAMMING","points":3250,"rating":2700,"tags":["dp","flows","graphs"]},"873:F":{"contestId":873,"index":"F","name":"Forbidden Indices","type":"PROGRAMMING","rating":2400,"tags":["dsu","string suffix structures","strings"]},"653:F":{"contestId":653,"index":"F","name":"Paper task","type":"PROGRAMMING","points":3500,"rating":2600,"tags":["data structures","string suffix structures","strings"]},"536:E":{"contestId":536,"index":"E","name":"Tavas on the Path","type":"PROGRAMMING","points":2500,"rating":3100,"tags":["data structures","divide and conquer","trees"]},"102059:A":{"contestId":102059,"index":"A","name":"Coloring Roads","type":"PROGRAMMING","tags":[]},"696:E":{"contestId":696,"index":"E","name":"...Wait for it...","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["data structures","dsu","trees"]},"1583:G":{"contestId":1583,"index":"G","name":"Omkar and Time Travel","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","math"]},"1583:H":{"contestId":1583,"index":"H","name":"Omkar and Tours","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["data structures","divide and conquer","sortings","trees"]},"1832:E":{"contestId":1832,"index":"E","name":"Combinatorics Problem","type":"PROGRAMMING","rating":2200,"tags":["brute force","combinatorics","dp"]},"1826:D":{"contestId":1826,"index":"D","name":"Running Miles","type":"PROGRAMMING","points":2000,"rating":1700,"tags":["brute force","dp","greedy"]},"793:F":{"contestId":793,"index":"F","name":"Julia the snail","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["data structures","divide and conquer","dp"]},"1559:B":{"contestId":1559,"index":"B","name":"Mocha and Red and Blue","type":"PROGRAMMING","points":750,"rating":900,"tags":["dp","greedy"]},"1559:A":{"contestId":1559,"index":"A","name":"Mocha and Math","type":"PROGRAMMING","points":500,"rating":900,"tags":["bitmasks","constructive algorithms","math"]},"960:G":{"contestId":960,"index":"G","name":"Bandit Blues","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["combinatorics","dp","fft","math"]},"1178:G":{"contestId":1178,"index":"G","name":"The Awesomest Vertex","type":"PROGRAMMING","points":3250,"rating":3000,"tags":["data structures","dfs and similar"]},"1215:F":{"contestId":1215,"index":"F","name":"Radio Stations","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["2-sat"]},"995:F":{"contestId":995,"index":"F","name":"Cowmpany Cowmpensation","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["combinatorics","dp","math","trees"]},"1404:C":{"contestId":1404,"index":"C","name":"Fixed Point Removal","type":"PROGRAMMING","points":1500,"rating":2300,"tags":["binary search","constructive algorithms","data structures","greedy","two pointers"]},"1038:F":{"contestId":1038,"index":"F","name":"Wrap Around","type":"PROGRAMMING","points":2750,"rating":2900,"tags":["dp","strings"]},"1528:F":{"contestId":1528,"index":"F","name":"AmShZ Farm","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["combinatorics","fft","math"]},"1096:G":{"contestId":1096,"index":"G","name":"Lucky Tickets","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","fft"]},"286:E":{"contestId":286,"index":"E","name":"Ladies' Shop","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["constructive algorithms","fft","math"]},"1368:H1":{"contestId":1368,"index":"H1","name":"Breadboard Capacity (easy version)","type":"PROGRAMMING","points":3000,"rating":3300,"tags":["dp","flows","greedy"]},"1368:H2":{"contestId":1368,"index":"H2","name":"Breadboard Capacity (hard version)","type":"PROGRAMMING","points":1500,"rating":3500,"tags":[]},"724:E":{"contestId":724,"index":"E","name":"Goods transportation","type":"PROGRAMMING","points":2500,"rating":2900,"tags":["dp","flows","greedy"]},"362:E":{"contestId":362,"index":"E","name":"Petya and Pipes","type":"PROGRAMMING","points":3000,"rating":2300,"tags":["flows","graphs","shortest paths"]},"277:E":{"contestId":277,"index":"E","name":"Binary Tree on Plane","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["flows","trees"]},"1082:G":{"contestId":1082,"index":"G","name":"Petya and Graph","type":"PROGRAMMING","rating":2400,"tags":["flows","graphs"]},"757:E":{"contestId":757,"index":"E","name":"Bash Plays with Functions","type":"PROGRAMMING","points":2500,"rating":2500,"tags":["brute force","combinatorics","dp","number theory"]},"757:D":{"contestId":757,"index":"D","name":"Felicity's Big Secret Revealed","type":"PROGRAMMING","points":2000,"rating":2200,"tags":["bitmasks","dp"]},"757:C":{"contestId":757,"index":"C","name":"Felicity is Coming!","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["data structures","hashing","sortings","strings"]},"757:F":{"contestId":757,"index":"F","name":"Team Rocket Rises Again","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["data structures","graphs","shortest paths"]},"919:E":{"contestId":919,"index":"E","name":"Congruence Equation","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["chinese remainder theorem","math","number theory"]},"102501:D":{"contestId":102501,"index":"D","name":"Gnalcats","type":"PROGRAMMING","tags":[]},"103438:E":{"contestId":103438,"index":"E","name":"Replace Sort","type":"PROGRAMMING","tags":[]},"915:D":{"contestId":915,"index":"D","name":"Almost Acyclic Graph","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","graphs"]},"915:F":{"contestId":915,"index":"F","name":"Imbalance Value of a Tree","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},"915:E":{"contestId":915,"index":"E","name":"Physical Education Lessons","type":"PROGRAMMING","rating":2300,"tags":["data structures","implementation","sortings"]},"1708:B":{"contestId":1708,"index":"B","name":"Difference of GCDs","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","math"]},"1708:A":{"contestId":1708,"index":"A","name":"Difference Operations","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"979:C":{"contestId":979,"index":"C","name":"Kuro and Walking Route","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["dfs and similar","trees"]},"979:B":{"contestId":979,"index":"B","name":"Treasure Hunt","type":"PROGRAMMING","points":1000,"rating":1800,"tags":["greedy"]},"979:A":{"contestId":979,"index":"A","name":"Pizza, Pizza, Pizza!!!","type":"PROGRAMMING","points":500,"rating":1000,"tags":["math"]},"979:D":{"contestId":979,"index":"D","name":"Kuro and GCD and XOR and SUM","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["binary search","bitmasks","brute force","data structures","dp","dsu","greedy","math","number theory","strings","trees"]},"868:C":{"contestId":868,"index":"C","name":"Qualification Rounds","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["bitmasks","brute force","constructive algorithms","dp"]},"868:B":{"contestId":868,"index":"B","name":"Race Against Time","type":"PROGRAMMING","points":500,"rating":1400,"tags":["implementation"]},"868:A":{"contestId":868,"index":"A","name":"Bark to Unlock","type":"PROGRAMMING","points":250,"rating":900,"tags":["brute force","implementation","strings"]},"976:D":{"contestId":976,"index":"D","name":"Degree Set","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","graphs","implementation"]},"976:C":{"contestId":976,"index":"C","name":"Nested Segments","type":"PROGRAMMING","rating":1500,"tags":["greedy","implementation","sortings"]},"976:B":{"contestId":976,"index":"B","name":"Lara Croft and the New Game","type":"PROGRAMMING","rating":1300,"tags":["implementation","math"]},"976:A":{"contestId":976,"index":"A","name":"Minimum Binary Number","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1644:B":{"contestId":1644,"index":"B","name":"Anti-Fibonacci Permutation","type":"PROGRAMMING","rating":800,"tags":["brute force","constructive algorithms","implementation"]},"1644:A":{"contestId":1644,"index":"A","name":"Doors and Keys","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1008:C":{"contestId":1008,"index":"C","name":"Reorder the Array","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["combinatorics","math"]},"1008:B":{"contestId":1008,"index":"B","name":"Turn the Rectangles","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["greedy","sortings"]},"1008:A":{"contestId":1008,"index":"A","name":"Romaji","type":"PROGRAMMING","points":500,"rating":900,"tags":["implementation","strings"]},"788:B":{"contestId":788,"index":"B","name":"Weird journey","type":"PROGRAMMING","points":1250,"rating":2100,"tags":["combinatorics","constructive algorithms","dfs and similar","dsu","graphs"]},"1225:D":{"contestId":1225,"index":"D","name":"Power Products","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["hashing","math","number theory"]},"13:E":{"contestId":13,"index":"E","name":"Holes","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu"]},"1042:D":{"contestId":1042,"index":"D","name":"Petya and Array","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["data structures","divide and conquer","two pointers"]},"1250:J":{"contestId":1250,"index":"J","name":"The Parade","type":"PROGRAMMING","rating":1800,"tags":["binary search","greedy"]},"939:E":{"contestId":939,"index":"E","name":"Maximize!","type":"PROGRAMMING","points":2500,"rating":1800,"tags":["binary search","greedy","ternary search","two pointers"]},"1223:C":{"contestId":1223,"index":"C","name":"Save the Nature","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["binary search","greedy"]},"1530:C":{"contestId":1530,"index":"C","name":"Pursuit","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["binary search","brute force","greedy","sortings"]},"1201:C":{"contestId":1201,"index":"C","name":"Maximum Median","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["binary search","greedy","math","sortings"]},"439:D":{"contestId":439,"index":"D","name":"Devu and his Brother","type":"PROGRAMMING","points":2000,"rating":1700,"tags":["binary search","sortings","ternary search","two pointers"]},"914:D":{"contestId":914,"index":"D","name":"Bash and a Tough Math Puzzle","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["data structures","number theory"]},"455:D":{"contestId":455,"index":"D","name":"Serega and Fun","type":"PROGRAMMING","points":2000,"rating":2700,"tags":["data structures"]},"1295:E":{"contestId":1295,"index":"E","name":"Permutation Separation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer"]},"1320:C":{"contestId":1320,"index":"C","name":"World of Darkraft: Battle for Azathoth","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["brute force","data structures","sortings"]},"1616:E":{"contestId":1616,"index":"E","name":"Lexicographically Small Enough","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["brute force","data structures","greedy","strings"]},"1426:F":{"contestId":1426,"index":"F","name":"Number of Subsequences","type":"PROGRAMMING","rating":2000,"tags":["combinatorics","dp","strings"]},"1408:C":{"contestId":1408,"index":"C","name":"Discrete Acceleration","type":"PROGRAMMING","points":1250,"rating":1500,"tags":["binary search","dp","implementation","math","two pointers"]},"1370:C":{"contestId":1370,"index":"C","name":"Number Game","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["games","math","number theory"]},"1420:B":{"contestId":1420,"index":"B","name":"Rock and Lever","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["bitmasks","math"]},"1389:A":{"contestId":1389,"index":"A","name":"LCM Problem","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy","math","number theory"]},"1360:C":{"contestId":1360,"index":"C","name":"Similar Pairs","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","graph matchings","greedy","sortings"]},"1367:A":{"contestId":1367,"index":"A","name":"Short Substrings","type":"PROGRAMMING","rating":800,"tags":["implementation","strings"]},"1338:A":{"contestId":1338,"index":"A","name":"Powered Addition","type":"PROGRAMMING","points":500,"rating":1500,"tags":["greedy","math"]},"1286:A":{"contestId":1286,"index":"A","name":"Garland","type":"PROGRAMMING","points":500,"rating":1800,"tags":["dp","greedy","sortings"]},"1107:G":{"contestId":1107,"index":"G","name":"Vasya and Maximum Profit","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","data structures","dp","dsu"]},"160:E":{"contestId":160,"index":"E","name":"Buses and People","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["binary search","data structures","sortings"]},"1321:E":{"contestId":1321,"index":"E","name":"World of Darkraft: Battle for Azathoth","type":"PROGRAMMING","points":2250,"rating":2000,"tags":["data structures","sortings","two pointers"]},"1144:G":{"contestId":1144,"index":"G","name":"Two Merged Sequences","type":"PROGRAMMING","rating":2400,"tags":["dp","greedy"]},"1288:E":{"contestId":1288,"index":"E","name":"Messenger Simulator","type":"PROGRAMMING","rating":2000,"tags":["data structures"]},"1208:D":{"contestId":1208,"index":"D","name":"Restore Permutation","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["binary search","data structures","greedy","implementation"]},"1543:C":{"contestId":1543,"index":"C","name":"Need for Pink Slips","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["bitmasks","brute force","dfs and similar","implementation","math","probabilities"]},"103145:K":{"contestId":103145,"index":"K","name":"City","type":"PROGRAMMING","tags":[]},"960:B":{"contestId":960,"index":"B","name":"Minimize the error","type":"PROGRAMMING","points":1000,"rating":1500,"tags":["data structures","greedy","sortings"]},"1353:B":{"contestId":1353,"index":"B","name":"Two Arrays And Swaps","type":"PROGRAMMING","rating":800,"tags":["greedy","sortings"]},"1579:D":{"contestId":1579,"index":"D","name":"Productive Meeting","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","graphs","greedy"]},"1656:A":{"contestId":1656,"index":"A","name":"Good Pairs","type":"PROGRAMMING","points":500,"rating":800,"tags":["math","sortings"]},"1649:B":{"contestId":1649,"index":"B","name":"Game of Ball Passing","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["greedy","implementation"]},"1649:A":{"contestId":1649,"index":"A","name":"Game","type":"PROGRAMMING","points":500,"rating":800,"tags":["implementation"]},"1676:G":{"contestId":1676,"index":"G","name":"White-Black Balanced Subtrees","type":"PROGRAMMING","rating":1300,"tags":["dfs and similar","dp","graphs","trees"]},"1676:H1":{"contestId":1676,"index":"H1","name":"Maximum Crossings (Easy Version)","type":"PROGRAMMING","rating":1400,"tags":["brute force"]},"1676:H2":{"contestId":1676,"index":"H2","name":"Maximum Crossings (Hard Version)","type":"PROGRAMMING","rating":1500,"tags":["data structures","divide and conquer","sortings"]},"1676:F":{"contestId":1676,"index":"F","name":"Longest Strike","type":"PROGRAMMING","rating":1300,"tags":["data structures","greedy","implementation","sortings","two pointers"]},"1676:E":{"contestId":1676,"index":"E","name":"Eating Queries","type":"PROGRAMMING","rating":1100,"tags":["binary search","greedy","sortings"]},"1676:C":{"contestId":1676,"index":"C","name":"Most Similar Words","type":"PROGRAMMING","rating":800,"tags":["brute force","greedy","implementation","implementation","math","strings"]},"1676:B":{"contestId":1676,"index":"B","name":"Equal Candies","type":"PROGRAMMING","rating":800,"tags":["greedy","math","sortings"]},"1676:A":{"contestId":1676,"index":"A","name":"Lucky?","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1715:F":{"contestId":1715,"index":"F","name":"Crop Squares","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["constructive algorithms","geometry","interactive","math"]},"1184:C1":{"contestId":1184,"index":"C1","name":"Heidi and the Turing Test (Easy)","type":"PROGRAMMING","rating":1600,"tags":["implementation"]},"1364:E":{"contestId":1364,"index":"E","name":"X-OR","type":"PROGRAMMING","points":2500,"rating":2700,"tags":["bitmasks","constructive algorithms","divide and conquer","interactive","probabilities"]},"1765:L":{"contestId":1765,"index":"L","name":"Project Manager","type":"PROGRAMMING","rating":2400,"tags":["brute force","data structures","implementation"]},"1717:F":{"contestId":1717,"index":"F","name":"Madoka and The First Session","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["constructive algorithms","flows","graph matchings","graphs","implementation"]},"1762:F":{"contestId":1762,"index":"F","name":"Good Pairs ","type":"PROGRAMMING","points":2750,"rating":2600,"tags":["binary search","data structures","dp"]},"1765:C":{"contestId":1765,"index":"C","name":"Card Guessing","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","dp","probabilities"]},"1771:E":{"contestId":1771,"index":"E","name":"Hossam and a Letter","type":"PROGRAMMING","points":2750,"rating":2500,"tags":["brute force","dp","implementation","two pointers"]},"1114:D":{"contestId":1114,"index":"D","name":"Flood Fill","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["dp"]},"1773:D":{"contestId":1773,"index":"D","name":"Dominoes","type":"PROGRAMMING","rating":2600,"tags":["combinatorics","flows","graph matchings","greedy"]},"1773:I":{"contestId":1773,"index":"I","name":"Interactive Factorial Guessing","type":"PROGRAMMING","rating":2500,"tags":["brute force","games","implementation","interactive"]},"1773:B":{"contestId":1773,"index":"B","name":"BinCoin","type":"PROGRAMMING","rating":2200,"tags":["binary search","divide and conquer","hashing","implementation","probabilities","trees"]},"1773:H":{"contestId":1773,"index":"H","name":"Hot and Cold","type":"PROGRAMMING","rating":2600,"tags":["binary search","interactive"]},"1739:E":{"contestId":1739,"index":"E","name":"Cleaning Robot","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","dp"]},"1746:E1":{"contestId":1746,"index":"E1","name":"Joking (Easy Version)","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["binary search","constructive algorithms","interactive","ternary search"]},"1758:A":{"contestId":1758,"index":"A","name":"SSeeeeiinngg DDoouubbllee","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","strings"]},"1758:B":{"contestId":1758,"index":"B","name":"XOR = Average","type":"PROGRAMMING","points":1000,"rating":900,"tags":["constructive algorithms"]},"1758:C":{"contestId":1758,"index":"C","name":"Almost All Multiples","type":"PROGRAMMING","points":1500,"rating":1400,"tags":["greedy","number theory"]},"1286:C1":{"contestId":1286,"index":"C1","name":"Madhouse (Easy version)","type":"PROGRAMMING","points":750,"rating":2400,"tags":["brute force","constructive algorithms","interactive","math"]},"1753:A1":{"contestId":1753,"index":"A1","name":"Make Nonzero Sum (easy version)","type":"PROGRAMMING","points":500,"rating":1300,"tags":["constructive algorithms","dp","greedy"]},"1738:F":{"contestId":1738,"index":"F","name":"Connectivity Addicts","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["constructive algorithms","dsu","graphs","greedy","interactive","shortest paths","trees"]},"104090:I":{"contestId":104090,"index":"I","name":"Guess Cycle Length","type":"PROGRAMMING","tags":[]},"104090:G":{"contestId":104090,"index":"G","name":"Subgraph Isomorphism","type":"PROGRAMMING","tags":[]},"1758:D":{"contestId":1758,"index":"D","name":"Range = √Sum","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["binary search","brute force","constructive algorithms","math","two pointers"]},"1758:E":{"contestId":1758,"index":"E","name":"Tick, Tock","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["combinatorics","dfs and similar","dsu","graphs"]},"104068:D":{"contestId":104068,"index":"D","name":"泽瑞拉","type":"PROGRAMMING","tags":[]},"104068:C":{"contestId":104068,"index":"C","name":"小水獭的 Codeforces Rating","type":"PROGRAMMING","tags":[]},"104068:B":{"contestId":104068,"index":"B","name":"最大差值","type":"PROGRAMMING","tags":[]},"104068:A":{"contestId":104068,"index":"A","name":"疯狂星期四，V 我 50！","type":"PROGRAMMING","tags":[]},"1702:F":{"contestId":1702,"index":"F","name":"Equate Multisets","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","data structures","greedy","math","number theory"]},"1305:G":{"contestId":1305,"index":"G","name":"Kuroni and Antihype","type":"PROGRAMMING","points":3250,"rating":3500,"tags":["bitmasks","brute force","dp","dsu","graphs"]},"463:C":{"contestId":463,"index":"C","name":"Gargari and Bishops","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["greedy","hashing","implementation"]},"1869:B":{"contestId":1869,"index":"B","name":"2D Traveling","type":"PROGRAMMING","points":750,"rating":1100,"tags":["geometry","math","shortest paths","sortings"]},"1869:A":{"contestId":1869,"index":"A","name":"Make It Zero","type":"PROGRAMMING","points":500,"rating":900,"tags":["constructive algorithms"]},"103446:K":{"contestId":103446,"index":"K","name":"Circle of Life","type":"PROGRAMMING","tags":[]},"1860:E":{"contestId":1860,"index":"E","name":"Fast Travel Text Editor","type":"PROGRAMMING","rating":2400,"tags":["data structures","dfs and similar","graphs","shortest paths"]},"559:C":{"contestId":559,"index":"C","name":"Gerald and Giant Chess","type":"PROGRAMMING","points":1500,"rating":2200,"tags":["combinatorics","dp","math","number theory"]},"1856:D":{"contestId":1856,"index":"D","name":"More Wrong","type":"PROGRAMMING","points":2000,"rating":2100,"tags":["divide and conquer","interactive"]},"1855:B":{"contestId":1855,"index":"B","name":"Longest Divisors Interval","type":"PROGRAMMING","points":1000,"rating":900,"tags":["brute force","combinatorics","greedy","math","number theory"]},"1855:A":{"contestId":1855,"index":"A","name":"Dalton the Teacher","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"1853:B":{"contestId":1853,"index":"B","name":"Fibonaccharsis","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["binary search","brute force","math"]},"1853:A":{"contestId":1853,"index":"A","name":"Desorting","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy","math"]},"1701:C":{"contestId":1701,"index":"C","name":"Schedule Management","type":"PROGRAMMING","rating":1400,"tags":["binary search","greedy","implementation","two pointers"]},"1725:G":{"contestId":1725,"index":"G","name":"Garage","type":"PROGRAMMING","rating":1500,"tags":["binary search","geometry","math"]},"1725:H":{"contestId":1725,"index":"H","name":"Hot Black Hot White","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","math"]},"1606:F":{"contestId":1606,"index":"F","name":"Tree Queries","type":"PROGRAMMING","rating":2800,"tags":["brute force","dp","trees"]},"1848:E":{"contestId":1848,"index":"E","name":"Vika and Stone Skipping","type":"PROGRAMMING","points":2250,"rating":2600,"tags":["brute force","implementation","math","number theory"]},"1848:F":{"contestId":1848,"index":"F","name":"Vika and Wiki","type":"PROGRAMMING","points":2750,"rating":2400,"tags":["binary search","bitmasks","combinatorics","divide and conquer","dp","math"]},"1836:A":{"contestId":1836,"index":"A","name":"Destroyer","type":"PROGRAMMING","points":750,"rating":800,"tags":["implementation","sortings"]},"1776:J":{"contestId":1776,"index":"J","name":"Italian Data Centers","type":"PROGRAMMING","rating":2500,"tags":["graphs","shortest paths"]},"1776:L":{"contestId":1776,"index":"L","name":"Controllers","type":"PROGRAMMING","rating":1500,"tags":["binary search","math"]},"1776:H":{"contestId":1776,"index":"H","name":"Beppa and SwerChat","type":"PROGRAMMING","rating":1300,"tags":["two pointers"]},"1776:B":{"contestId":1776,"index":"B","name":"Vittorio Plays with LEGO Bricks","type":"PROGRAMMING","rating":2200,"tags":["dp","geometry"]},"1776:F":{"contestId":1776,"index":"F","name":"Train Splitting","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","graphs","greedy"]},"1776:A":{"contestId":1776,"index":"A","name":"Walking Boy","type":"PROGRAMMING","rating":800,"tags":["greedy"]},"1776:G":{"contestId":1776,"index":"G","name":"Another Wine Tasting Event","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","constructive algorithms","math","strings"]},"1776:C":{"contestId":1776,"index":"C","name":"Library game","type":"PROGRAMMING","rating":2500,"tags":["games","greedy","interactive","sortings"]},"1777:A":{"contestId":1777,"index":"A","name":"Everybody Likes Good Arrays!","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"1777:B":{"contestId":1777,"index":"B","name":"Emordnilap","type":"PROGRAMMING","points":1000,"rating":900,"tags":["combinatorics","greedy","math"]},"1777:D":{"contestId":1777,"index":"D","name":"Score of a Tree","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["bitmasks","combinatorics","dfs and similar","dp","math","probabilities","trees"]},"1778:B":{"contestId":1778,"index":"B","name":"The Forbidden Permutation","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["greedy","math"]},"1778:C":{"contestId":1778,"index":"C","name":"Flexible String","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["bitmasks","brute force","strings"]},"1778:D":{"contestId":1778,"index":"D","name":"Flexible String Revisit","type":"PROGRAMMING","points":1750,"rating":2100,"tags":["combinatorics","dp","math","probabilities"]},"1779:A":{"contestId":1779,"index":"A","name":"Hall of Fame","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy","strings"]},"1779:B":{"contestId":1779,"index":"B","name":"MKnez's ConstructiveForces Task","type":"PROGRAMMING","points":750,"rating":900,"tags":["constructive algorithms","math"]},"1779:C":{"contestId":1779,"index":"C","name":"Least Prefix Sum","type":"PROGRAMMING","points":1250,"rating":1600,"tags":["data structures","greedy"]},"1779:D":{"contestId":1779,"index":"D","name":"Boris and His Amazing Haircut","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["constructive algorithms","data structures","dp","dsu","greedy","sortings"]},"1780:A":{"contestId":1780,"index":"A","name":"Hayato and School","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","greedy"]},"1780:B":{"contestId":1780,"index":"B","name":"GCD Partition","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["brute force","greedy","math","number theory"]},"1780:D":{"contestId":1780,"index":"D","name":"Bit Guessing Game","type":"PROGRAMMING","points":1500,"rating":1800,"tags":["binary search","bitmasks","constructive algorithms","interactive"]},"1780:E":{"contestId":1780,"index":"E","name":"Josuke and Complete Graph","type":"PROGRAMMING","points":1750,"rating":2400,"tags":["binary search","brute force","data structures","math","number theory"]},"1781:A":{"contestId":1781,"index":"A","name":"Parallel Projection","type":"PROGRAMMING","points":500,"rating":800,"tags":["geometry","math"]},"1781:B":{"contestId":1781,"index":"B","name":"Going to the Cinema","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["brute force","greedy","sortings"]},"1781:C":{"contestId":1781,"index":"C","name":"Equal Frequencies","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["brute force","constructive algorithms","greedy","implementation","sortings","strings"]},"1781:D":{"contestId":1781,"index":"D","name":"Many Perfect Squares","type":"PROGRAMMING","points":2000,"rating":1800,"tags":["brute force","math","number theory"]},"1781:E":{"contestId":1781,"index":"E","name":"Rectangle Shrinking","type":"PROGRAMMING","points":2750,"rating":2300,"tags":["binary search","brute force","data structures","greedy","implementation","two pointers"]},"1783:A":{"contestId":1783,"index":"A","name":"Make it Beautiful","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math","sortings"]},"1783:B":{"contestId":1783,"index":"B","name":"Matrix of Differences","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","math"]},"1783:C":{"contestId":1783,"index":"C","name":"Yet Another Tournament","type":"PROGRAMMING","rating":1700,"tags":["binary search","greedy","sortings"]},"1783:D":{"contestId":1783,"index":"D","name":"Different Arrays","type":"PROGRAMMING","rating":2000,"tags":["brute force","dp","implementation"]},"1783:E":{"contestId":1783,"index":"E","name":"Game of the Year","type":"PROGRAMMING","rating":2300,"tags":["brute force","data structures","math","number theory"]},"1784:A":{"contestId":1784,"index":"A","name":"Monsters (easy version)","type":"PROGRAMMING","points":500,"rating":1000,"tags":["brute force","greedy"]},"1784:B":{"contestId":1784,"index":"B","name":"Letter Exchange","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["constructive algorithms"]},"1787:A":{"contestId":1787,"index":"A","name":"Exponential Equation","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"1787:B":{"contestId":1787,"index":"B","name":"Number Factorization","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["greedy","math","number theory"]},"1787:D":{"contestId":1787,"index":"D","name":"Game on Axis","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["combinatorics","dfs and similar","dsu","graphs","implementation"]},"1788:A":{"contestId":1788,"index":"A","name":"One and Two","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","implementation","math"]},"1788:B":{"contestId":1788,"index":"B","name":"Sum of Two Numbers","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","greedy","implementation","math","probabilities"]},"1788:C":{"contestId":1788,"index":"C","name":"Matching Numbers","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["constructive algorithms","greedy","math"]},"1788:D":{"contestId":1788,"index":"D","name":"Moving Dots","type":"PROGRAMMING","points":2250,"rating":2000,"tags":["binary search","brute force","combinatorics","math","two pointers"]},"1790:A":{"contestId":1790,"index":"A","name":"Polycarp and the Day of Pi","type":"PROGRAMMING","rating":800,"tags":["implementation","math","strings"]},"1790:B":{"contestId":1790,"index":"B","name":"Taisia and Dice","type":"PROGRAMMING","rating":800,"tags":["greedy","greedy","math"]},"1790:C":{"contestId":1790,"index":"C","name":"Premutation","type":"PROGRAMMING","rating":1000,"tags":["brute force","implementation","math"]},"1790:D":{"contestId":1790,"index":"D","name":"Matryoshkas","type":"PROGRAMMING","rating":1200,"tags":["data structures","greedy","sortings"]},"1790:E":{"contestId":1790,"index":"E","name":"Vlad and a Pair of Numbers","type":"PROGRAMMING","rating":1400,"tags":["bitmasks","constructive algorithms"]},"1790:F":{"contestId":1790,"index":"F","name":"Timofey and Black-White Tree","type":"PROGRAMMING","rating":2100,"tags":["brute force","dfs and similar","divide and conquer","graphs","greedy","math","shortest paths","trees"]},"1790:G":{"contestId":1790,"index":"G","name":"Tokens on Graph","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},"1791:A":{"contestId":1791,"index":"A","name":"Codeforces Checking","type":"PROGRAMMING","rating":800,"tags":["implementation","strings"]},"1791:B":{"contestId":1791,"index":"B","name":"Following Directions","type":"PROGRAMMING","rating":800,"tags":["geometry","implementation"]},"1791:C":{"contestId":1791,"index":"C","name":"Prepend and Append","type":"PROGRAMMING","rating":800,"tags":["implementation","two pointers"]},"1791:D":{"contestId":1791,"index":"D","name":"Distinct Split","type":"PROGRAMMING","rating":1000,"tags":["brute force","greedy","strings"]},"1791:E":{"contestId":1791,"index":"E","name":"Negatives and Positives","type":"PROGRAMMING","rating":1100,"tags":["dp","greedy","sortings"]},"1791:F":{"contestId":1791,"index":"F","name":"Range Update Point Query","type":"PROGRAMMING","rating":1500,"tags":["binary search","brute force","data structures"]},"1791:G1":{"contestId":1791,"index":"G1","name":"Teleporters (Easy Version)","type":"PROGRAMMING","rating":1100,"tags":["greedy","sortings"]},"1792:A":{"contestId":1792,"index":"A","name":"GamingForces","type":"PROGRAMMING","rating":800,"tags":["greedy","sortings"]},"1792:C":{"contestId":1792,"index":"C","name":"Min Max Sort","type":"PROGRAMMING","rating":1500,"tags":["binary search","brute force","greedy","math","two pointers"]},"1792:D":{"contestId":1792,"index":"D","name":"Fixed Prefix Permutations","type":"PROGRAMMING","rating":1700,"tags":["binary search","bitmasks","data structures","hashing","math","sortings"]},"1793:A":{"contestId":1793,"index":"A","name":"Yet Another Promotion","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"1793:B":{"contestId":1793,"index":"B","name":"Fedya and Array","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","math"]},"1793:C":{"contestId":1793,"index":"C","name":"Dora and Search","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["constructive algorithms","data structures","two pointers"]},"1793:D":{"contestId":1793,"index":"D","name":"Moscow Gorillas","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["binary search","dp","greedy","implementation","math","two pointers"]},"1794:C":{"contestId":1794,"index":"C","name":"Scoring Subsequences","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["binary search","greedy","math","two pointers"]},"1794:D":{"contestId":1794,"index":"D","name":"Counting Factorizations","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["combinatorics","divide and conquer","dp","math","number theory"]},"1795:E":{"contestId":1795,"index":"E","name":"Explosions?","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures","dp","greedy","math"]},"1795:G":{"contestId":1795,"index":"G","name":"Removal Sequences","type":"PROGRAMMING","rating":2700,"tags":["bitmasks","dfs and similar","graphs"]},"1796:E":{"contestId":1796,"index":"E","name":"Colored Subgraphs","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","dp","games","greedy","trees"]},"1797:A":{"contestId":1797,"index":"A","name":"Li Hua and Maze","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","flows","graphs","greedy","implementation"]},"1797:B":{"contestId":1797,"index":"B","name":"Li Hua and Pattern","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["constructive algorithms","greedy"]},"1797:C":{"contestId":1797,"index":"C","name":"Li Hua and Chess","type":"PROGRAMMING","points":1500,"rating":1600,"tags":["constructive algorithms","greedy","interactive"]},"1797:D":{"contestId":1797,"index":"D","name":"Li Hua and Tree","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["brute force","data structures","dfs and similar","dp","implementation","trees"]},"1841:A":{"contestId":1841,"index":"A","name":"Game with Board","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","games"]},"1799:A":{"contestId":1799,"index":"A","name":"Recent Actions","type":"PROGRAMMING","points":500,"rating":800,"tags":["data structures","greedy","implementation","math"]},"1799:B":{"contestId":1799,"index":"B","name":"Equalize by Divide","type":"PROGRAMMING","points":1000,"rating":1200,"tags":["brute force","constructive algorithms","greedy","math"]},"1799:C":{"contestId":1799,"index":"C","name":"Double Lexicographically Minimum","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["greedy","strings"]},"1799:D1":{"contestId":1799,"index":"D1","name":"Hot Start Up (easy version)","type":"PROGRAMMING","points":1500,"rating":1900,"tags":["dp"]},"1799:G":{"contestId":1799,"index":"G","name":"Count Voting","type":"PROGRAMMING","points":3000,"rating":2600,"tags":["combinatorics","dp","math"]},"1800:B":{"contestId":1800,"index":"B","name":"Count the Number of Pairs","type":"PROGRAMMING","rating":1000,"tags":["greedy","strings"]},"1800:C1":{"contestId":1800,"index":"C1","name":"Powering the Hero (easy version)","type":"PROGRAMMING","rating":1000,"tags":["data structures","greedy"]},"1800:C2":{"contestId":1800,"index":"C2","name":"Powering the Hero (hard version)","type":"PROGRAMMING","rating":1100,"tags":["data structures","greedy"]},"1800:D":{"contestId":1800,"index":"D","name":"Remove Two Letters","type":"PROGRAMMING","rating":1200,"tags":["data structures","greedy","hashing","strings"]},"1800:E1":{"contestId":1800,"index":"E1","name":"Unforgivable Curse (easy version)","type":"PROGRAMMING","rating":1400,"tags":["brute force","constructive algorithms","dsu","graphs","greedy","strings"]},"1800:E2":{"contestId":1800,"index":"E2","name":"Unforgivable Curse (hard version)","type":"PROGRAMMING","rating":1500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","strings"]},"1800:F":{"contestId":1800,"index":"F","name":"Dasha and Nightmares","type":"PROGRAMMING","rating":1900,"tags":["bitmasks","hashing","meet-in-the-middle","strings"]},"1801:C":{"contestId":1801,"index":"C","name":"Music Festival","type":"PROGRAMMING","points":1250,"rating":1900,"tags":["binary search","data structures","dp","greedy","sortings"]},"1804:A":{"contestId":1804,"index":"A","name":"Lame King","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"1804:B":{"contestId":1804,"index":"B","name":"Vaccination","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["greedy","implementation"]},"1805:D":{"contestId":1805,"index":"D","name":"A Wide, Wide Graph","type":"PROGRAMMING","points":1750,"rating":1800,"tags":["dfs and similar","dp","graphs","greedy","trees"]},"1807:A":{"contestId":1807,"index":"A","name":"Plus or Minus","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1807:B":{"contestId":1807,"index":"B","name":"Grab the Candies","type":"PROGRAMMING","rating":800,"tags":["greedy"]},"1807:C":{"contestId":1807,"index":"C","name":"Find and Replace","type":"PROGRAMMING","rating":800,"tags":["greedy","implementation","strings"]},"1807:D":{"contestId":1807,"index":"D","name":"Odd Queries","type":"PROGRAMMING","rating":900,"tags":["data structures","implementation"]},"1807:E":{"contestId":1807,"index":"E","name":"Interview","type":"PROGRAMMING","rating":1300,"tags":["binary search","implementation","interactive"]},"1807:F":{"contestId":1807,"index":"F","name":"Bouncy Ball","type":"PROGRAMMING","rating":1700,"tags":["brute force","dfs and similar","implementation"]},"1807:G1":{"contestId":1807,"index":"G1","name":"Subsequence Addition (Easy Version)","type":"PROGRAMMING","rating":1100,"tags":["brute force","data structures","dp","greedy","implementation","sortings"]},"1807:G2":{"contestId":1807,"index":"G2","name":"Subsequence Addition (Hard Version)","type":"PROGRAMMING","rating":1100,"tags":["bitmasks","dp","greedy","implementation","sortings"]},"1809:A":{"contestId":1809,"index":"A","name":"Garland","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1809:B":{"contestId":1809,"index":"B","name":"Points on Plane","type":"PROGRAMMING","rating":1000,"tags":["binary search","greedy","math"]},"1809:C":{"contestId":1809,"index":"C","name":"Sum on Subarrays","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","greedy","math"]},"1809:D":{"contestId":1809,"index":"D","name":"Binary String Sorting","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy"]},"1809:E":{"contestId":1809,"index":"E","name":"Two Tanks","type":"PROGRAMMING","rating":2400,"tags":["binary search","dp","implementation","math"]},"1809:F":{"contestId":1809,"index":"F","name":"Traveling in Berland","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","graphs","greedy","implementation"]},"1810:A":{"contestId":1810,"index":"A","name":"Beautiful Sequence","type":"PROGRAMMING","points":500,"rating":800,"tags":["brute force","greedy"]},"1810:B":{"contestId":1810,"index":"B","name":"Candies","type":"PROGRAMMING","points":750,"rating":800,"tags":["constructive algorithms","math","number theory"]},"1810:C":{"contestId":1810,"index":"C","name":"Make It Permutation","type":"PROGRAMMING","points":1000,"rating":1300,"tags":["brute force","greedy","sortings"]},"1810:D":{"contestId":1810,"index":"D","name":"Climbing the Tree","type":"PROGRAMMING","points":1250,"rating":1700,"tags":["binary search","math"]},"1811:A":{"contestId":1811,"index":"A","name":"Insert Digit","type":"PROGRAMMING","rating":800,"tags":["greedy","math","strings"]},"1811:B":{"contestId":1811,"index":"B","name":"Conveyor Belts","type":"PROGRAMMING","rating":1000,"tags":["implementation","math"]},"1811:C":{"contestId":1811,"index":"C","name":"Restore the Array","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","greedy"]},"1811:D":{"contestId":1811,"index":"D","name":"Umka and a Long Flight","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","implementation","math"]},"1811:E":{"contestId":1811,"index":"E","name":"Living Sequence","type":"PROGRAMMING","rating":1500,"tags":["binary search","dp","math","number theory"]},"1811:F":{"contestId":1811,"index":"F","name":"Is It Flower?","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","graphs","implementation"]},"1811:G1":{"contestId":1811,"index":"G1","name":"Vlad and the Nice Paths (easy version)","type":"PROGRAMMING","rating":2100,"tags":["combinatorics","dp","math"]},"1812:E":{"contestId":1812,"index":"E","name":"Not a Geometry Problem","type":"PROGRAMMING","tags":["*special","*special","constructive algorithms","geometry","math"]},"1812:D":{"contestId":1812,"index":"D","name":"Trivial Conjecture","type":"PROGRAMMING","tags":["*special","constructive algorithms","math","number theory"]},"1812:C":{"contestId":1812,"index":"C","name":"Digits","type":"PROGRAMMING","tags":["*special"]},"1812:B":{"contestId":1812,"index":"B","name":"Was it Rated?","type":"PROGRAMMING","tags":["*special","*special","*special","brute force","implementation"]},"1814:A":{"contestId":1814,"index":"A","name":"Coins","type":"PROGRAMMING","rating":800,"tags":["implementation","math"]},"1814:B":{"contestId":1814,"index":"B","name":"Long Legs","type":"PROGRAMMING","rating":1700,"tags":["brute force","math"]},"1814:C":{"contestId":1814,"index":"C","name":"Search in Parallel","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","greedy","sortings"]},"1815:A":{"contestId":1815,"index":"A","name":"Ian and Array Sorting","type":"PROGRAMMING","points":500,"rating":1300,"tags":["greedy","math"]},"1815:C":{"contestId":1815,"index":"C","name":"Between","type":"PROGRAMMING","points":1750,"rating":2200,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},"1817:A":{"contestId":1817,"index":"A","name":"Almost Increasing Subsequence","type":"PROGRAMMING","points":500,"rating":1500,"tags":["binary search","data structures","greedy"]},"1817:B":{"contestId":1817,"index":"B","name":"Fish Graph","type":"PROGRAMMING","points":1000,"rating":1900,"tags":["brute force","constructive algorithms","dfs and similar","graphs"]},"1817:C":{"contestId":1817,"index":"C","name":"Similar Polynomials","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["combinatorics","math"]},"1821:A":{"contestId":1821,"index":"A","name":"Matching","type":"PROGRAMMING","rating":800,"tags":["combinatorics","math"]},"1821:B":{"contestId":1821,"index":"B","name":"Sort the Subarray","type":"PROGRAMMING","rating":1100,"tags":["brute force","greedy"]},"1821:C":{"contestId":1821,"index":"C","name":"Tear It Apart","type":"PROGRAMMING","rating":1300,"tags":["brute force","implementation","math","strings"]},"1821:D":{"contestId":1821,"index":"D","name":"Black Cells","type":"PROGRAMMING","rating":1900,"tags":["binary search","brute force","greedy","math"]},"1822:A":{"contestId":1822,"index":"A","name":"TubeTube Feed","type":"PROGRAMMING","rating":800,"tags":["brute force","implementation"]},"1822:B":{"contestId":1822,"index":"B","name":"Karina and Array","type":"PROGRAMMING","rating":800,"tags":["greedy","math","sortings"]},"1822:C":{"contestId":1822,"index":"C","name":"Bun Lover","type":"PROGRAMMING","rating":800,"tags":["math"]},"1822:D":{"contestId":1822,"index":"D","name":"Super-Permutation","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","math"]},"1822:E":{"contestId":1822,"index":"E","name":"Making Anti-Palindromes","type":"PROGRAMMING","rating":1600,"tags":["greedy","math","strings"]},"1822:F":{"contestId":1822,"index":"F","name":"Gardening Friends","type":"PROGRAMMING","rating":1700,"tags":["brute force","dfs and similar","dp","graphs","trees"]},"1822:G1":{"contestId":1822,"index":"G1","name":"Magic Triples (Easy Version)","type":"PROGRAMMING","rating":1700,"tags":["brute force","data structures","math","number theory"]},"1823:A":{"contestId":1823,"index":"A","name":"A-characteristic","type":"PROGRAMMING","points":500,"rating":800,"tags":["combinatorics","constructive algorithms","math"]},"1823:B":{"contestId":1823,"index":"B","name":"Sort with Step","type":"PROGRAMMING","points":1000,"rating":900,"tags":["brute force","math","sortings"]},"1823:C":{"contestId":1823,"index":"C","name":"Strongly Composite","type":"PROGRAMMING","points":1250,"rating":1300,"tags":["greedy","math","number theory"]},"1823:D":{"contestId":1823,"index":"D","name":"Unique Palindromes","type":"PROGRAMMING","points":2000,"rating":1900,"tags":["constructive algorithms","math","strings"]},"1823:E":{"contestId":1823,"index":"E","name":"Removing Graph","type":"PROGRAMMING","points":2000,"rating":2500,"tags":["brute force","dp","games","graphs","math"]},"1823:F":{"contestId":1823,"index":"F","name":"Random Walk","type":"PROGRAMMING","points":2500,"rating":2600,"tags":["dp","graphs","math","probabilities","trees"]},"1824:A":{"contestId":1824,"index":"A","name":"LuoTianyi and the Show","type":"PROGRAMMING","points":500,"rating":1400,"tags":["greedy","implementation"]},"1824:B1":{"contestId":1824,"index":"B1","name":"LuoTianyi and the Floating Islands (Easy Version)","type":"PROGRAMMING","points":500,"rating":1800,"tags":["combinatorics","math","probabilities","trees"]},"1824:B2":{"contestId":1824,"index":"B2","name":"LuoTianyi and the Floating Islands (Hard Version)","type":"PROGRAMMING","points":750,"rating":2300,"tags":["combinatorics","dfs and similar","math","probabilities","trees"]},"1826:A":{"contestId":1826,"index":"A","name":"Trust Nobody","type":"PROGRAMMING","points":500,"rating":1200,"tags":["brute force","greedy","implementation","sortings"]},"1826:B":{"contestId":1826,"index":"B","name":"Lunatic Never Content","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["math","number theory"]},"1826:C":{"contestId":1826,"index":"C","name":"Dreaming of Freedom","type":"PROGRAMMING","points":1500,"rating":1300,"tags":["greedy","math","number theory"]},"1829:A":{"contestId":1829,"index":"A","name":"Love Story","type":"PROGRAMMING","rating":800,"tags":["implementation","strings"]},"1829:B":{"contestId":1829,"index":"B","name":"Blank Space","type":"PROGRAMMING","rating":800,"tags":["implementation"]},"1829:C":{"contestId":1829,"index":"C","name":"Mr. Perfectly Fine","type":"PROGRAMMING","rating":800,"tags":["bitmasks","greedy","implementation"]},"1829:D":{"contestId":1829,"index":"D","name":"Gold Rush","type":"PROGRAMMING","rating":1000,"tags":["brute force","dfs and similar","dp","implementation"]},"1829:E":{"contestId":1829,"index":"E","name":"The Lakes","type":"PROGRAMMING","rating":1100,"tags":["dfs and similar","dsu","graphs","implementation"]},"1829:F":{"contestId":1829,"index":"F","name":"Forever Winter","type":"PROGRAMMING","rating":1300,"tags":["dfs and similar","graphs","math"]},"1831:A":{"contestId":1831,"index":"A","name":"Twin Permutations","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms"]},"1831:B":{"contestId":1831,"index":"B","name":"Array merging","type":"PROGRAMMING","points":750,"rating":1000,"tags":["constructive algorithms","greedy"]},"1832:A":{"contestId":1832,"index":"A","name":"New Palindrome","type":"PROGRAMMING","rating":800,"tags":["strings"]},"1832:B":{"contestId":1832,"index":"B","name":"Maximum Sum","type":"PROGRAMMING","rating":1100,"tags":["brute force","sortings","two pointers"]},"1832:C":{"contestId":1832,"index":"C","name":"Contrast Value","type":"PROGRAMMING","rating":1200,"tags":["greedy","implementation"]},"1833:A":{"contestId":1833,"index":"A","name":"Musical Puzzle","type":"PROGRAMMING","rating":800,"tags":["implementation","strings"]},"1833:B":{"contestId":1833,"index":"B","name":"Restore the Weather","type":"PROGRAMMING","rating":900,"tags":["greedy","sortings"]},"1833:C":{"contestId":1833,"index":"C","name":"Vlad Building Beautiful Array","type":"PROGRAMMING","rating":800,"tags":["greedy","math"]},"1838:A":{"contestId":1838,"index":"A","name":"Blackboard List","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"1840:A":{"contestId":1840,"index":"A","name":"Cipher Shifer","type":"PROGRAMMING","rating":800,"tags":["implementation","strings","two pointers"]},"1840:B":{"contestId":1840,"index":"B","name":"Binary Cafe","type":"PROGRAMMING","rating":1100,"tags":["bitmasks","combinatorics","math"]},"1840:C":{"contestId":1840,"index":"C","name":"Ski Resort","type":"PROGRAMMING","rating":1000,"tags":["combinatorics","math","two pointers"]},"1840:D":{"contestId":1840,"index":"D","name":"Wooden Toy Festival","type":"PROGRAMMING","rating":1400,"tags":["binary search","greedy","sortings"]},"1840:E":{"contestId":1840,"index":"E","name":"Character Blocking","type":"PROGRAMMING","rating":1600,"tags":["data structures","hashing","implementation"]},"1840:G1":{"contestId":1840,"index":"G1","name":"In Search of Truth (Easy Version)","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","interactive","math","meet-in-the-middle","probabilities"]},"1725:J":{"contestId":1725,"index":"J","name":"Journey","type":"PROGRAMMING","rating":2500,"tags":["dp","trees"]},"1769:D2":{"contestId":1769,"index":"D2","name":"Игра в Девятку II","type":"PROGRAMMING","rating":2200,"tags":["*special","brute force"]},"1769:D1":{"contestId":1769,"index":"D1","name":"Игра в Девятку I","type":"PROGRAMMING","rating":1800,"tags":["*special","brute force","dp"]},"1765:H":{"contestId":1765,"index":"H","name":"Hospital Queue","type":"PROGRAMMING","rating":2200,"tags":["binary search","graphs","greedy","implementation"]},"1495:E":{"contestId":1495,"index":"E","name":"Qingshan and Daniel","type":"PROGRAMMING","points":2500,"rating":3200,"tags":["brute force","data structures","greedy","implementation"]},"1779:F":{"contestId":1779,"index":"F","name":"Xorcerer's Stones","type":"PROGRAMMING","points":2250,"rating":2500,"tags":["bitmasks","constructive algorithms","dp","trees"]},"1731:D":{"contestId":1731,"index":"D","name":"Valiant's New Map","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["binary search","brute force","data structures","dp","two pointers"]},"1731:C":{"contestId":1731,"index":"C","name":"Even Subarrays","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["bitmasks","brute force","hashing","math","number theory"]},"1731:B":{"contestId":1731,"index":"B","name":"Kill Demodogs","type":"PROGRAMMING","points":1000,"rating":1100,"tags":["greedy","math"]},"1625:E2":{"contestId":1625,"index":"E2","name":"Cats on the Upgrade (hard version)","type":"PROGRAMMING","points":1250,"rating":2800,"tags":["binary search","data structures","dfs and similar","graphs","trees"]},"103469:G":{"contestId":103469,"index":"G","name":"Glory Graph","type":"PROGRAMMING","tags":[]},"1528:E":{"contestId":1528,"index":"E","name":"Mashtali and Hagh Trees","type":"PROGRAMMING","points":2750,"rating":2900,"tags":["combinatorics","dp","trees"]},"1753:E":{"contestId":1753,"index":"E","name":"N Machines","type":"PROGRAMMING","points":2500,"rating":3300,"tags":["binary search","brute force","greedy"]},"1400:F":{"contestId":1400,"index":"F","name":"x-prime Substrings","type":"PROGRAMMING","rating":2800,"tags":["brute force","dfs and similar","dp","string suffix structures","strings"]},"1603:D":{"contestId":1603,"index":"D","name":"Artistic Partition","type":"PROGRAMMING","points":2500,"rating":3000,"tags":["divide and conquer","dp","number theory"]},"1172:C1":{"contestId":1172,"index":"C1","name":"Nauuo and Pictures (easy version)","type":"PROGRAMMING","points":750,"rating":2300,"tags":["dp","probabilities"]},"1172:C2":{"contestId":1172,"index":"C2","name":"Nauuo and Pictures (hard version)","type":"PROGRAMMING","points":750,"rating":2600,"tags":["dp","probabilities"]},"1699:A":{"contestId":1699,"index":"A","name":"The Third Three Number Problem","type":"PROGRAMMING","points":500,"rating":800,"tags":["constructive algorithms","math"]},"1699:B":{"contestId":1699,"index":"B","name":"Almost Ternary Matrix","type":"PROGRAMMING","points":1000,"rating":900,"tags":["bitmasks","constructive algorithms","matrices"]},"1699:C":{"contestId":1699,"index":"C","name":"The Third Problem","type":"PROGRAMMING","points":1500,"rating":1700,"tags":["combinatorics","constructive algorithms","math"]},"1227:G":{"contestId":1227,"index":"G","name":"Not Same","type":"PROGRAMMING","points":3250,"rating":2600,"tags":["constructive algorithms"]},"1767:F":{"contestId":1767,"index":"F","name":"Two Subtrees","type":"PROGRAMMING","rating":3100,"tags":["data structures","trees"]},"1762:G":{"contestId":1762,"index":"G","name":"Unequal Adjacent Elements","type":"PROGRAMMING","points":3500,"rating":3100,"tags":["constructive algorithms","sortings"]},"1766:F":{"contestId":1766,"index":"F","name":"MCF","type":"PROGRAMMING","rating":2800,"tags":["flows"]},"1758:F":{"contestId":1758,"index":"F","name":"Decent Division","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["constructive algorithms","data structures"]},"1732:E":{"contestId":1732,"index":"E","name":"Location","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["data structures","dp","math","number theory"]},"1746:E2":{"contestId":1746,"index":"E2","name":"Joking (Hard Version)","type":"PROGRAMMING","points":1750,"rating":3200,"tags":["dp","interactive"]},"1743:G":{"contestId":1743,"index":"G","name":"Antifibonacci Cut","type":"PROGRAMMING","rating":3000,"tags":["bitmasks","combinatorics","constructive algorithms","data structures","dp","hashing","math"]},"1730:E":{"contestId":1730,"index":"E","name":"Maximums and Minimums","type":"PROGRAMMING","points":2250,"rating":2700,"tags":["combinatorics","data structures","divide and conquer","number theory"]},"1730:F":{"contestId":1730,"index":"F","name":"Almost Sorted","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["bitmasks","data structures","dp"]},"1882:E2":{"contestId":1882,"index":"E2","name":"Two Permutations (Hard Version)","type":"PROGRAMMING","points":2000,"tags":["constructive algorithms"]},"1882:E1":{"contestId":1882,"index":"E1","name":"Two Permutations (Easy Version)","type":"PROGRAMMING","points":2000,"tags":["brute force","constructive algorithms","greedy","number theory"]},"1879:F":{"contestId":1879,"index":"F","name":"Last Man Standing","type":"PROGRAMMING","rating":2800,"tags":["brute force","data structures","number theory"]},"1852:D":{"contestId":1852,"index":"D","name":"Miriany and Matchstick","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["constructive algorithms","dp","greedy"]},"1867:E2":{"contestId":1867,"index":"E2","name":"Salyg1n and Array (hard version)","type":"PROGRAMMING","points":1000,"rating":2200,"tags":["constructive algorithms","interactive"]},"1867:E1":{"contestId":1867,"index":"E1","name":"Salyg1n and Array (simple version)","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["constructive algorithms","interactive","math"]},"1856:E2":{"contestId":1856,"index":"E2","name":"PermuTree (hard version)","type":"PROGRAMMING","points":1500,"rating":2700,"tags":["bitmasks","dfs and similar","dp","fft","greedy","implementation","math","trees"]},"1852:C":{"contestId":1852,"index":"C","name":"Ina of the Mountain","type":"PROGRAMMING","points":1250,"rating":2400,"tags":["data structures","dp","greedy","math"]},"1847:F":{"contestId":1847,"index":"F","name":"The Boss's Identity","type":"PROGRAMMING","points":3000,"rating":2500,"tags":["binary search","bitmasks","data structures","dfs and similar","greedy","math","sortings"]},"1834:E":{"contestId":1834,"index":"E","name":"MEX of LCM","type":"PROGRAMMING","points":2500,"rating":2300,"tags":["binary search","data structures","implementation","math","number theory"]},"1834:D":{"contestId":1834,"index":"D","name":"Survey in Class","type":"PROGRAMMING","points":1750,"rating":1900,"tags":["brute force","data structures","greedy","implementation","sortings"]},"1834:C":{"contestId":1834,"index":"C","name":"Game with Reversing","type":"PROGRAMMING","points":1250,"rating":1200,"tags":["games","greedy","math","strings"]},"1834:B":{"contestId":1834,"index":"B","name":"Maximum Strength","type":"PROGRAMMING","points":1000,"rating":1000,"tags":["greedy","math"]},"1834:A":{"contestId":1834,"index":"A","name":"Unit Array","type":"PROGRAMMING","points":500,"rating":800,"tags":["greedy","math"]},"1511:F":{"contestId":1511,"index":"F","name":"Chainword","type":"PROGRAMMING","rating":2700,"tags":["brute force","data structures","dp","matrices","string suffix structures","strings"]},"103914:B":{"contestId":103914,"index":"B","name":"Puzzle: Patrick's Parabox","type":"PROGRAMMING","tags":[]},"616:F":{"contestId":616,"index":"F","name":"Expensive Strings","type":"PROGRAMMING","rating":2700,"tags":["string suffix structures","strings"]},"524:F":{"contestId":524,"index":"F","name":"And Yet Another Bracket Sequence","type":"PROGRAMMING","points":3000,"rating":2700,"tags":["data structures","greedy","hashing","string suffix structures","strings"]},"1207:G":{"contestId":1207,"index":"G","name":"Indie Album","type":"PROGRAMMING","rating":2700,"tags":["data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},"235:C":{"contestId":235,"index":"C","name":"Cyclical Quest","type":"PROGRAMMING","points":1500,"rating":2700,"tags":["data structures","string suffix structures","strings"]},"1437:G":{"contestId":1437,"index":"G","name":"Death DBMS","type":"PROGRAMMING","rating":2600,"tags":["data structures","string suffix structures","strings","trees"]},"316:G1":{"contestId":316,"index":"G1","name":"Good Substrings","type":"PROGRAMMING","points":30,"rating":1700,"tags":["hashing","strings"]},"316:G2":{"contestId":316,"index":"G2","name":"Good Substrings","type":"PROGRAMMING","points":40,"rating":2200,"tags":["string suffix structures"]},"316:G3":{"contestId":316,"index":"G3","name":"Good Substrings","type":"PROGRAMMING","points":30,"rating":2400,"tags":["string suffix structures"]},"452:E":{"contestId":452,"index":"E","name":"Three strings","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["data structures","dsu","string suffix structures","strings"]},"825:F":{"contestId":825,"index":"F","name":"String Compression","type":"PROGRAMMING","rating":2400,"tags":["dp","hashing","string suffix structures","strings"]},"102511:G":{"contestId":102511,"index":"G","name":"First of Her Name","type":"PROGRAMMING","tags":[]},"1202:E":{"contestId":1202,"index":"E","name":"You Are Given Some Strings...","type":"PROGRAMMING","rating":2400,"tags":["brute force","string suffix structures","strings"]},"1696:G":{"contestId":1696,"index":"G","name":"Fishingprince Plays With Array Again","type":"PROGRAMMING","points":3250,"rating":3300,"tags":["brute force","data structures","geometry","math"]},"1208:G":{"contestId":1208,"index":"G","name":"Polygons","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["greedy","math","number theory"]},"325:E":{"contestId":325,"index":"E","name":"The Red Button","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["combinatorics","dfs and similar","dsu","graphs","greedy"]},"830:D":{"contestId":830,"index":"D","name":"Singer House","type":"PROGRAMMING","points":2250,"rating":2800,"tags":["combinatorics","dp","graphs","trees"]},"102978:J":{"contestId":102978,"index":"J","name":"Japanese Knowledge","type":"PROGRAMMING","tags":[]},"102220:I":{"contestId":102220,"index":"I","name":"Temperature Survey","type":"PROGRAMMING","tags":[]},"1630:F":{"contestId":1630,"index":"F","name":"Making It Bipartite","type":"PROGRAMMING","points":3000,"rating":3400,"tags":["flows","graph matchings","graphs","number theory"]},"587:F":{"contestId":587,"index":"F","name":"Duff is Mad","type":"PROGRAMMING","points":2750,"rating":3000,"tags":["data structures","strings"]},"79:D":{"contestId":79,"index":"D","name":"Password","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["bitmasks","dp","shortest paths"]},"516:D":{"contestId":516,"index":"D","name":"Drazil and Morning Exercise","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["dfs and similar","dp","dsu","trees","two pointers"]},"521:D":{"contestId":521,"index":"D","name":"Shop","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["greedy"]},"104065:H":{"contestId":104065,"index":"H","name":"Life is Hard and Undecidable, but...","type":"PROGRAMMING","tags":[]},"104065:M":{"contestId":104065,"index":"M","name":"Rock-Paper-Scissors Pyramid","type":"PROGRAMMING","tags":[]},"104065:B":{"contestId":104065,"index":"B","name":"Call Me Call Me","type":"PROGRAMMING","tags":[]},"1697:F":{"contestId":1697,"index":"F","name":"Too Many Constraints","type":"PROGRAMMING","rating":2800,"tags":["2-sat","constructive algorithms","graphs","implementation"]},"1386:C":{"contestId":1386,"index":"C","name":"Joker","type":"PROGRAMMING","rating":2800,"tags":["*special","bitmasks","data structures","divide and conquer","dsu"]},"283:E":{"contestId":283,"index":"E","name":"Cow Tennis Tournament","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["combinatorics","data structures","math"]},"633:G":{"contestId":633,"index":"G","name":"Yash And Trees","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["bitmasks","data structures","dfs and similar","math","number theory"]},"1648:D":{"contestId":1648,"index":"D","name":"Serious Business","type":"PROGRAMMING","points":2000,"rating":2800,"tags":["data structures","divide and conquer","dp","implementation","shortest paths"]},"104090:D":{"contestId":104090,"index":"D","name":"Money Game","type":"PROGRAMMING","tags":[]},"104090:H":{"contestId":104090,"index":"H","name":"RPG Pro League","type":"PROGRAMMING","tags":[]},"104090:A":{"contestId":104090,"index":"A","name":"Modulo Ruins the Legend","type":"PROGRAMMING","tags":[]},"104090:C":{"contestId":104090,"index":"C","name":"No Bug No Game","type":"PROGRAMMING","tags":[]},"104090:F":{"contestId":104090,"index":"F","name":"Da Mi Lao Shi Ai Kan De","type":"PROGRAMMING","tags":[]},"104090:K":{"contestId":104090,"index":"K","name":"Master of Both","type":"PROGRAMMING","tags":[]},"104090:M":{"contestId":104090,"index":"M","name":"Please Save Pigeland","type":"PROGRAMMING","tags":[]},"101190:M":{"contestId":101190,"index":"M","name":"Mole Tunnels","type":"PROGRAMMING","tags":[]},"671:C":{"contestId":671,"index":"C","name":"Ultimate Weirdness of an Array","type":"PROGRAMMING","points":1500,"rating":2800,"tags":["data structures","number theory"]},"794:F":{"contestId":794,"index":"F","name":"Leha and security system","type":"PROGRAMMING","points":2750,"rating":2800,"tags":["data structures"]},"983:E":{"contestId":983,"index":"E","name":"NN country","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["binary search","data structures","trees"]},"549:F":{"contestId":549,"index":"F","name":"Yura and Developers","type":"PROGRAMMING","points":3000,"rating":2800,"tags":["data structures","divide and conquer"]},"702:F":{"contestId":702,"index":"F","name":"T-Shirts","type":"PROGRAMMING","rating":2800,"tags":["data structures"]},"104114:J":{"contestId":104114,"index":"J","name":"Joyful Death","type":"PROGRAMMING","tags":[]},"916:E":{"contestId":916,"index":"E","name":"Jamie and Tree","type":"PROGRAMMING","points":2500,"rating":2400,"tags":["data structures","trees"]},"468:D":{"contestId":468,"index":"D","name":"Tree","type":"PROGRAMMING","points":2000,"rating":3100,"tags":["graph matchings"]},"723:E":{"contestId":723,"index":"E","name":"One-Way Reform","type":"PROGRAMMING","points":2500,"rating":2200,"tags":["constructive algorithms","dfs and similar","flows","graphs","greedy"]},"104090:B":{"contestId":104090,"index":"B","name":"Useful Algorithm","type":"PROGRAMMING","tags":[]},"104090:E":{"contestId":104090,"index":"E","name":"Oscar is All You Need","type":"PROGRAMMING","tags":[]},"104090:J":{"contestId":104090,"index":"J","name":"Painting","type":"PROGRAMMING","tags":[]},"620:E":{"contestId":620,"index":"E","name":"New Year Tree","type":"PROGRAMMING","rating":2100,"tags":["bitmasks","data structures","trees"]},"104077:K":{"contestId":104077,"index":"K","name":"Streets","type":"PROGRAMMING","tags":[]},"103409:J":{"contestId":103409,"index":"J","name":"Suffix Automaton","type":"PROGRAMMING","tags":[]},"104064:B":{"contestId":104064,"index":"B","name":"Boredom Buster","type":"PROGRAMMING","tags":[]},"104053:B":{"contestId":104053,"index":"B","name":"Ayano and sequences","type":"PROGRAMMING","tags":[]},"475:D":{"contestId":475,"index":"D","name":"CGCDSSQ","type":"PROGRAMMING","points":2000,"rating":2000,"tags":["brute force","data structures","math"]},"914:F":{"contestId":914,"index":"F","name":"Substrings in a String","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["bitmasks","brute force","data structures","string suffix structures","strings"]},"104008:B":{"contestId":104008,"index":"B","name":"Code With No Forces","type":"PROGRAMMING","tags":[]},"932:G":{"contestId":932,"index":"G","name":"Palindrome Partition","type":"PROGRAMMING","points":3000,"rating":2900,"tags":["dp","string suffix structures","strings"]},"319:D":{"contestId":319,"index":"D","name":"Have You Ever Heard About the Word?","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["greedy","hashing","string suffix structures","strings"]},"204:E":{"contestId":204,"index":"E","name":"Little Elephant and Strings","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","implementation","string suffix structures","two pointers"]},"547:E":{"contestId":547,"index":"E","name":"Mike and Friends","type":"PROGRAMMING","points":2500,"rating":2800,"tags":["data structures","string suffix structures","strings","trees"]},"102787:E":{"contestId":102787,"index":"E","name":"Sneetches and Speeches 2","type":"PROGRAMMING","tags":[]},"102787:D":{"contestId":102787,"index":"D","name":"The Grim Treaper","type":"PROGRAMMING","tags":[]},"1556:H":{"contestId":1556,"index":"H","name":"DIY Tree","type":"PROGRAMMING","points":3500,"rating":3300,"tags":["graphs","greedy","math","probabilities"]},"1284:G":{"contestId":1284,"index":"G","name":"Seollal","type":"PROGRAMMING","points":4000,"rating":3300,"tags":["graphs"]},"1427:G":{"contestId":1427,"index":"G","name":"One Billion Shades of Grey","type":"PROGRAMMING","points":2250,"rating":3300,"tags":["flows","graphs"]},"1260:F":{"contestId":1260,"index":"F","name":"Colored Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","trees"]},"335:F":{"contestId":335,"index":"F","name":"Buy One, Get One Free","type":"PROGRAMMING","points":3000,"rating":3000,"tags":["dp","greedy"]},"1609:G":{"contestId":1609,"index":"G","name":"A Stroll Around the Matrix","type":"PROGRAMMING","points":3250,"rating":3000,"tags":["data structures","greedy","math"]},"605:C":{"contestId":605,"index":"C","name":"Freelancer's Dreams","type":"PROGRAMMING","points":1500,"rating":2400,"tags":["geometry"]},"1861:E":{"contestId":1861,"index":"E","name":"Non-Intersecting Subpermutations","type":"PROGRAMMING","rating":2300,"tags":["combinatorics","dp","implementation","math"]},"1861:C":{"contestId":1861,"index":"C","name":"Queries for the Array","type":"PROGRAMMING","rating":1600,"tags":["data structures","dfs and similar","implementation","strings","trees"]},"103931:C":{"contestId":103931,"index":"C","name":"Coffee Overdose","type":"PROGRAMMING","tags":[]},"104459:E":{"contestId":104459,"index":"E","name":"BaoBao Loves Reading","type":"PROGRAMMING","tags":[]},"104427:D":{"contestId":104427,"index":"D","name":"Lonely King","type":"PROGRAMMING","tags":[]},"1844:F1":{"contestId":1844,"index":"F1","name":"Min Cost Permutation (Easy Version)","type":"PROGRAMMING","points":2000,"rating":2600,"tags":["brute force","constructive algorithms","greedy","math"]},"104427:F":{"contestId":104427,"index":"F","name":"Beautiful Sequence","type":"PROGRAMMING","tags":[]},"104385:E":{"contestId":104385,"index":"E","name":"Segment-tree","type":"PROGRAMMING","tags":[]},"104385:B":{"contestId":104385,"index":"B","name":"Wonderful Array","type":"PROGRAMMING","tags":[]},"104385:G":{"contestId":104385,"index":"G","name":"Copy and Paste","type":"PROGRAMMING","tags":[]},"104385:D":{"contestId":104385,"index":"D","name":"Stack Out","type":"PROGRAMMING","tags":[]},"104385:F":{"contestId":104385,"index":"F","name":"Cities","type":"PROGRAMMING","tags":[]},"104385:K":{"contestId":104385,"index":"K","name":"Split","type":"PROGRAMMING","tags":[]},"104385:J":{"contestId":104385,"index":"J","name":"Function","type":"PROGRAMMING","tags":[]},"104385:H":{"contestId":104385,"index":"H","name":"Permutation","type":"PROGRAMMING","tags":[]},"104385:I":{"contestId":104385,"index":"I","name":"Tree","type":"PROGRAMMING","tags":[]},"104385:C":{"contestId":104385,"index":"C","name":"Battle","type":"PROGRAMMING","tags":[]},"104385:A":{"contestId":104385,"index":"A","name":"Drill Wood to Make Fire","type":"PROGRAMMING","tags":[]},"104385:L":{"contestId":104385,"index":"L","name":"Zhang Fei Threading Needles - Thick with Fine","type":"PROGRAMMING","tags":[]},"264:C":{"contestId":264,"index":"C","name":"Choosing Balls","type":"PROGRAMMING","points":1500,"rating":2000,"tags":["dp"]},"104065:C":{"contestId":104065,"index":"C","name":"Catch You Catch Me","type":"PROGRAMMING","tags":[]},"104065:A":{"contestId":104065,"index":"A","name":"Ban or Pick, What's the Trick","type":"PROGRAMMING","tags":[]},"104053:J":{"contestId":104053,"index":"J","name":"Math Exam","type":"PROGRAMMING","tags":[]},"277:C":{"contestId":277,"index":"C","name":"Game","type":"PROGRAMMING","points":2000,"rating":2400,"tags":["games","implementation"]},"104396:G":{"contestId":104396,"index":"G","name":"Moving Boxes","type":"PROGRAMMING","tags":[]},"104396:B":{"contestId":104396,"index":"B","name":"Honkai in TAIKULA","type":"PROGRAMMING","tags":[]},"104396:L":{"contestId":104396,"index":"L","name":"Architect","type":"PROGRAMMING","tags":[]},"104345:L":{"contestId":104345,"index":"L","name":"Village Planning","type":"PROGRAMMING","tags":[]}},"problemFreq":{"436:F":18,"1332:G":7,"960:H":7,"643:G":8,"1270:I":1,"704:E":2,"914:E":2,"1270:H":2,"1270:G":9,"1270:F":14,"1270:E":1,"1270:D":1,"1017:G":4,"432:D":2,"1726:E":9,"1344:E":7,"718:E":2,"1608:G":1,"986:E":20,"1721:D":5,"1721:E":12,"1721:C":2,"1721:B":2,"1721:A":2,"1721:F":20,"1043:G":1,"936:E":1,"1718:D":4,"1718:C":9,"1718:B":11,"1718:A2":9,"1718:A1":6,"1175:F":5,"1628:E":8,"1608:F":4,"1704:A":2,"526:D":1,"1707:D":14,"1707:C":4,"1707:A":3,"1707:B":5,"1654:F":12,"662:C":28,"150:E":9,"1446:D2":2,"1446:D1":10,"603:E":21,"464:E":2,"997:E":2,"526:F":2,"639:F":1,"103:E":4,"1603:C":14,"1073:G":26,"1209:F":10,"601:E":7,"1437:F":10,"712:E":10,"822:E":13,"1139:E":11,"191:D":9,"1684:C":2,"1684:B":1,"1684:D":3,"1684:E":24,"1684:F":23,"1684:G":10,"1684:A":1,"1806:E":8,"1844:G":13,"436:E":1,"1804:G":8,"321:D":7,"1019:C":28,"1870:E":2,"1870:G":12,"364:D":7,"1458:D":11,"1868:D":22,"1868:B1":1,"1868:C":1,"1868:B2":1,"1868:A":1,"11:E":4,"48:G":2,"101:E":1,"1863:D":2,"1863:E":2,"1863:C":2,"1863:A":2,"1863:B":2,"1864:A":2,"1864:B":2,"1864:D":2,"1864:C":2,"1863:G":21,"1864:E":2,"1864:F":6,"1864:H":18,"1864:G":21,"1716:F":20,"1716:E":18,"1709:D":2,"1709:E":5,"487:E":9,"1361:E":10,"1716:C":10,"1716:D":11,"1267:I":2,"1709:F":8,"1849:F":33,"1854:A1":1,"1854:A2":1,"1854:D":12,"1854:E":24,"1854:C":1,"1854:B":3,"1849:A":1,"1849:C":2,"1849:B":1,"1514:E":14,"685:D":4,"1709:C":4,"1709:B":1,"1709:A":1,"1036:G":7,"1153:F":4,"480:D":4,"848:C":13,"269:D":4,"83:E":9,"144:E":1,"1844:F2":18,"1844:E":1,"1844:D":1,"1844:C":1,"1844:B":1,"1735:D":7,"232:D":19,"1361:C":2,"1735:C":3,"1735:B":3,"1735:A":3,"1735:F":19,"1658:A":1,"1104:A":1,"1657:A":1,"1651:B":1,"814:E":4,"555:E":9,"1736:D":12,"1736:C2":18,"1736:E":12,"1736:C1":3,"1736:B":3,"1736:A":3,"1290:E":4,"1845:D":1,"1845:E":12,"1845:F":20,"855:E":1,"42:C":1,"538:E":1,"1674:E":1,"671:E":4,"568:D":9,"1621:H":1,"1842:G":31,"500:G":7,"117:E":10,"576:E":4,"1442:E":10,"351:D":7,"311:D":4,"140:F":4,"1842:E":15,"1842:H":16,"1539:F":13,"690:F2":7,"756:D":5,"359:E":1,"1768:D":1,"1768:E":2,"1768:F":21,"1768:A":1,"51:F":9,"336:E":7,"1778:A":2,"1778:E":9,"1778:F":4,"1795:B":2,"1795:C":2,"1795:D":2,"1795:A":2,"1789:C":2,"1789:D":8,"1789:B":2,"1789:A":2,"1789:F":16,"1796:F":11,"1796:D":10,"1796:C":3,"1796:B":3,"1796:A":3,"1794:B":2,"1794:A":2,"1794:E":21,"1804:H":13,"1801:G":6,"1810:H":17,"1841:E":8,"1841:D":3,"1841:C":2,"1841:B":2,"1801:F":16,"1801:E":20,"1801:D":8,"1801:B":4,"1801:A":2,"1811:G2":8,"1804:F":22,"1804:E":22,"1804:D":3,"1804:C":2,"1806:F1":17,"1806:D":22,"1806:C":2,"1806:B":2,"1806:A":2,"1806:F2":17,"888:G":5,"1822:G2":8,"1798:F":21,"1798:E":20,"1798:D":3,"1798:C":2,"1798:B":2,"1798:A":2,"1838:F":13,"1838:E":12,"1838:D":5,"1838:C":2,"1838:B":2,"1840:F":19,"1840:G2":22,"1839:E":20,"1839:D":5,"1839:C":2,"1839:B":2,"1839:A":2,"1808:E3":15,"1808:D":5,"1808:C":2,"1808:B":2,"1808:A":2,"1808:E2":21,"1805:F2":19,"1805:C":2,"1805:B":2,"1805:A":2,"1827:E":2,"1827:D":27,"1163:F":17,"1830:B":6,"1830:C":30,"1830:D":16,"1830:E":1,"1830:F":7,"1830:A":2,"1810:F":13,"1810:E":6,"1837:D":2,"1837:B":2,"1837:C":2,"1837:E":9,"1837:F":20,"1837:A":2,"1168:D":2,"1169:B":1,"1169:A":1,"1168:A":1,"1168:B":1,"1168:C":1,"1168:E":4,"1828:B":2,"1827:C":30,"1828:A":2,"1832:F":7,"1832:D2":11,"1832:D1":5,"1825:A":2,"1825:B":2,"1824:D":2,"1466:H":9,"1466:G":5,"1817:F":10,"1818:B":3,"1818:A":2,"1809:G":4,"103743:G":1,"103637:D":1,"1821:F":24,"1819:D":11,"1819:C":20,"1819:F":4,"1819:E":10,"1820:A":2,"1820:B":2,"1815:F":4,"1816:B":3,"1816:A":3,"1815:D":20,"1797:F":11,"1797:E":10,"1814:D":21,"1814:F":11,"1805:F1":11,"1812:I":1,"1812:G":1,"1810:G":9,"1799:H":9,"1802:A":3,"1802:B":3,"1800:G":8,"1789:E":19,"1785:F":2,"1793:F":4,"1793:E":6,"1788:F":12,"1785:E":9,"1782:G":7,"1785:D":8,"1786:A2":3,"1786:A1":3,"1786:B":3,"1534:H":1,"1787:H":4,"1614:E":11,"1787:I":2,"1787:G":10,"1534:G":5,"1534:F2":10,"1534:F1":12,"1792:B":2,"1458:E":10,"1777:F":14,"1777:E":8,"1781:G":9,"883:B":1,"551:B":1,"1774:F1":19,"1697:D":8,"1468:F":1,"852:A":1,"954:G":1,"1004:E":1,"903:D":1,"1006:B":1,"1029:D":1,"1029:A":1,"1770:G":9,"351:A":1,"762:A":1,"706:D":1,"567:F":1,"698:C":1,"1619:G":5,"799:C":1,"1166:D":1,"911:G":1,"505:C":1,"1671:F":4,"525:D":1,"1767:E":3,"1767:D":2,"1763:D":11,"1763:E":12,"1763:C":3,"1771:F":15,"1167:E":1,"1059:B":1,"1214:A":1,"906:B":1,"837:E":1,"862:C":1,"1010:B":1,"1061:D":1,"1622:E":10,"1700:E":15,"461:D":9,"1070:L":4,"1761:D":11,"1098:C":1,"633:E":1,"1741:G":1,"1536:F":10,"550:E":1,"837:F":1,"1468:J":3,"1695:D1":13,"1748:D":9,"1748:E":2,"1748:F":14,"109:E":2,"1750:G":11,"1251:F":5,"722:D":1,"1046:I":1,"1204:D2":1,"1740:F":22,"1238:E":1,"1201:E2":7,"1201:E1":4,"1468:L":1,"793:E":4,"103861:H":3,"1202:F":1,"57:E":7,"103994:A":1,"1186:E":1,"1310:F":9,"1749:F":12,"1100:F":1,"1407:E":1,"1734:F":1,"930:D":1,"1732:D2":9,"1732:D1":3,"1732:C2":11,"1732:C1":8,"1667:E":19,"1744:F":2,"1744:E2":4,"1574:F":2,"1396:E":9,"852:C":1,"1612:G":10,"1735:E":19,"20:C":1,"856:C":1,"622:E":2,"1188:A2":1,"1272:F":1,"1495:D":12,"1131:F":1,"1119:H":1,"1119:G":1,"1119:F":1,"1119:E":1,"1119:D":1,"1119:C":1,"1119:B":1,"1119:A":1,"990:G":10,"1716:B":2,"1716:A":2,"1704:E":7,"1704:D":5,"1704:B":1,"1704:C":2,"865:E":1,"568:B":2,"1710:C":16,"1710:B":16,"1710:A":1,"101242:A":1,"280:C":9,"1407:A":1,"101221:G":1,"101242:K":1,"101239:L":1,"101221:I":1,"1407:B":1,"914:H":1,"1305:F":18,"627:F":1,"101142:I":1,"1193:B":1,"101239:E":1,"101612:E":1,"1407:D":9,"1407:C":1,"101612:C":1,"1257:F":10,"1526:D":16,"1687:E":1,"1264:E":4,"1526:F":2,"1292:E":1,"804:E":1,"1268:D":1,"1477:D":9,"1033:G":1,"1442:F":1,"1464:F":1,"1286:E":1,"1696:F":18,"1696:E":13,"1696:D":9,"1696:C":2,"1696:B":2,"1696:A":2,"101190:I":1,"1129:E":1,"1012:F":1,"549:E":1,"1666:E":2,"1666:D":1,"1666:F":9,"1019:E":1,"896:E":1,"920:B":1,"920:F":10,"920:G":9,"920:A":1,"920:C":1,"920:D":4,"920:E":17,"1229:E2":2,"1229:E1":4,"1229:D":10,"1775:C":1,"1775:B":2,"1775:A2":1,"1775:A1":1,"1782:F":10,"104065:E":1,"1705:F":10,"104076:B":1,"1746:F":29,"103470:I":1,"1764:G3":2,"1704:F":11,"1750:F":20,"103470:B":1,"1083:F":2,"721:E":9,"1239:F":1,"643:C":2,"627:D":7,"623:B":1,"617:E":1,"724:G":7,"650:C":1,"643:E":9,"785:D":1,"749:E":2,"734:E":1,"819:E":20,"817:F":1,"808:G":1,"788:E":10,"840:D":7,"840:C":7,"833:B":1,"1770:H":1,"1770:F":20,"1770:E":23,"1770:D":2,"1770:C":2,"1770:B":2,"1770:A":2,"1774:H":1,"1774:F2":23,"1774:D":1,"1774:E":1,"1774:C":1,"1774:B":2,"1774:A":1,"886:E":4,"863:F":1,"906:D":10,"893:F":2,"894:E":1,"908:G":20,"908:D":1,"1534:E":11,"1580:B":28,"1313:D":7,"1491:H":3,"241:B":10,"25:E":1,"1764:G1":19,"1764:H":1,"1764:G2":7,"1764:F":16,"1764:A":2,"1764:B":2,"1764:C":12,"1764:D":6,"1764:E":21,"1761:G":1,"1761:F2":1,"1761:F1":5,"1761:E":28,"1761:C":3,"1761:B":1,"1761:A":1,"963:E":1,"865:C":9,"1151:F":7,"123:E":10,"398:B":1,"1540:B":16,"605:E":9,"1750:H":1,"1750:E":10,"1750:D":2,"1750:C":8,"1750:B":5,"1750:A":5,"1654:E":19,"1654:D":13,"1654:C":2,"1654:B":1,"1654:A":1,"1654:G":2,"93:E":9,"1371:F":4,"425:E":10,"898:F":1,"1866:G":1,"1866:E":4,"1866:K":1,"1866:I":1,"1866:L":1,"1866:J":7,"1866:M":1,"1863:F":20,"1866:F":10,"1866:D":3,"416:E":1,"1331:D":1,"727:A":1,"1081:G":7,"1672:G":7,"360:E":9,"1394:D":19,"830:E":9,"1175:G":10,"1158:F":1,"1250:D":10,"1556:G":2,"566:E":4,"925:E":10,"1316:E":1,"1681:E":18,"1774:G":4,"1835:D":18,"1835:B":31,"755:G":11,"438:E":9,"163:E":19,"1511:G":14,"1583:F":12,"1228:E":1,"1156:E":1,"213:E":7,"1322:C":1,"1693:D":19,"1815:B":3,"538:H":7,"1500:C":22,"1572:B":11,"1780:F":20,"103451:B":1,"1588:B":1,"1495:B":2,"1783:G":29,"1548:A":2,"860:D":2,"1508:B":2,"1685:C":11,"1290:C":6,"954:H":7,"1763:A":1,"1763:B":1,"845:E":4,"1073:F":7,"104023:F":1,"1379:F2":10,"1000:G":10,"908:F":4,"962:E":1,"1455:G":18,"612:F":9,"1340:D":9,"860:E":10,"1104:B":1,"963:D":11,"1731:F":4,"1334:F":4,"1766:E":13,"1766:D":9,"1766:C":2,"1766:B":2,"1766:A":1,"797:F":7,"1327:G":10,"710:F":6,"1763:F":18,"911:F":2,"961:F":9,"976:F":4,"1772:G":10,"1535:F":9,"1380:G":7,"845:F":4,"1622:F":10,"665:F":2,"1194:G":9,"1194:F":2,"1187:G":8,"102916:C":1,"1739:C":11,"1739:B":2,"1739:A":2,"1739:D":3,"1739:F":26,"1740:E":5,"1740:D":12,"1740:C":11,"1740:B":2,"1740:A":2,"103990:E":1,"103990:H":1,"102576:K":1,"1749:E":17,"1741:A":2,"1741:B":2,"1741:C":5,"1741:D":10,"1741:E":10,"1741:F":1,"1404:E":9,"1307:G":2,"1737:F":1,"1737:E":43,"1737:C":5,"1737:B":2,"1737:A":2,"1737:D":24,"1195:F":9,"582:E":4,"101161:J":1,"103861:D":1,"585:E":7,"100257:E":1,"1704:H1":1,"1706:E":10,"1706:D2":9,"1706:D1":1,"1777:C":2,"1783:F":29,"1712:E1":20,"1712:E2":16,"1562:D1":1,"1562:D2":10,"1562:C":1,"1562:B":1,"1676:D":2,"1782:E":12,"1782:D":2,"1722:E":2,"1722:F":3,"1722:G":2,"1726:C":2,"1713:A":1,"1713:B":1,"1713:C":1,"1713:F":1,"1713:D":1,"1713:E":10,"1715:A":1,"1715:B":1,"1715:C":1,"1769:A":1,"1715:D":2,"1715:E":10,"1773:F":1,"1720:E":4,"1775:F":13,"1725:B":1,"1775:E":8,"1726:B":1,"1726:A":1,"1728:B":1,"1728:A":1,"1725:A":1,"1729:D":2,"1729:C":2,"1729:B":2,"1729:A":2,"1717:D":4,"1717:E":10,"1720:D1":4,"1719:D2":7,"1726:D":9,"1779:E":17,"1638:D":9,"1638:A":1,"1728:C":1,"1728:D":4,"1728:E":9,"1729:G":10,"1729:F":7,"1730:A":1,"1730:C":1,"1730:B":1,"1730:D":17,"1732:B":1,"1732:A":1,"1734:C":1,"1734:B":1,"1734:A":1,"1733:C":1,"1733:B":1,"1733:A":1,"1733:E":15,"1733:D1":1,"1733:D2":10,"1731:E":10,"1734:E":10,"1729:E":8,"1734:D":8,"1743:D":4,"1772:F":10,"1772:E":4,"1772:D":1,"1772:C":1,"1772:B":1,"1767:C":9,"1772:A":1,"1738:B":1,"1762:E":17,"1762:D":7,"1747:D":10,"1738:A":1,"1673:F":1,"1738:C":11,"1738:D":2,"1738:E":15,"1742:C":1,"1742:B":1,"1742:D":4,"1742:E":7,"1742:F":11,"1742:G":10,"1742:A":1,"1743:F":11,"1743:C":4,"1743:B":1,"1743:A":1,"1744:E1":10,"1744:D":7,"1744:C":2,"1744:B":1,"1744:A":1,"1765:N":10,"1765:M":2,"1765:K":10,"1765:E":2,"1765:D":7,"1765:B":1,"1746:C":9,"1746:B":1,"1746:A":1,"1747:C":10,"1747:B":8,"1747:A":5,"1748:C":2,"1748:B":7,"1748:A":4,"1749:C":7,"1749:B":7,"1749:A":4,"1749:D":1,"1760:G":2,"1754:B":5,"4:A":4,"1759:G":1,"1759:F":1,"1759:E":1,"1759:D":2,"1759:C":9,"1759:B":9,"1759:A":9,"101021:1":1,"1753:C":5,"1753:B":2,"1753:A2":2,"1754:A":10,"1548:E":1,"1547:G":2,"1549:B":1,"1548:B":1,"1548:C":10,"1548:D1":7,"1833:D":2,"1833:E":2,"1833:F":2,"1833:G":2,"1550:D":7,"1550:C":1,"1550:E":10,"1551:E":1,"1551:F":4,"1552:H":1,"1552:D":1,"1552:E":7,"1552:F":4,"1827:B2":19,"1827:A":2,"1827:B1":3,"1553:F":7,"1553:B":1,"1553:C":1,"1553:D":1,"1553:E":2,"1553:G":9,"1553:H":4,"1554:C":1,"1554:D":1,"1554:E":17,"1555:B":1,"1555:C":1,"1555:D":1,"1555:E":2,"1555:F":9,"1556:C":1,"1556:D":1,"1556:E":4,"1556:F":10,"1557:C":1,"1557:D":4,"1560:F1":1,"1560:F2":2,"1559:E":4,"1559:D2":10,"1559:D1":1,"1824:C":20,"1558:D":10,"1558:C":1,"1558:B":2,"1558:A":1,"1561:D1":2,"1561:D2":1,"1829:H":2,"1829:G":2,"1562:E":16,"1817:D":10,"1826:F":9,"1826:E":18,"1566:D1":1,"1566:D2":1,"1566:E":1,"1566:F":10,"1567:D":1,"1567:E":2,"1567:F":10,"1569:E":10,"1569:D":1,"1572:E":4,"1572:A":1,"1572:C":10,"1574:E":16,"1574:D":1,"1580:D":4,"1580:C":5,"1580:A":1,"1582:D":1,"1582:E":2,"1582:F2":9,"1582:F1":1,"1586:H":1,"1584:D":1,"1582:G":10,"1583:C":1,"1583:D":1,"1583:E":4,"1584:E":7,"1584:F":10,"1585:D":1,"1585:F":19,"1585:E":9,"1592:F2":7,"1592:F1":10,"1593:F":2,"1593:D2":1,"1592:D":7,"1592:E":9,"1593:G":4,"1594:E1":1,"1594:E2":7,"1821:E":6,"1594:D":1,"1594:F":9,"1598:C":1,"1598:F":9,"1598:D":1,"1598:E":2,"1601:B":1,"1601:A":1,"1601:C":7,"1603:A":1,"1603:B":1,"1819:B":2,"1819:A":2,"1605:D":2,"1605:E":9,"1606:E":2,"1607:F":7,"1607:H":4,"1608:D":9,"1814:E":19,"1609:B":1,"1609:A":1,"1609:C":1,"1609:D":1,"1609:E":10,"1610:F":1,"1610:D":2,"1610:E":9,"1611:F":1,"1611:E2":1,"1611:E1":1,"1611:G":10,"1805:E":18,"1612:F":4,"1612:D":1,"1612:E":4,"1613:C":1,"1613:D":2,"1613:E":4,"1613:F":7,"1808:E1":16,"1614:D2":10,"1614:D1":7,"102992:K":1,"1615:D":9,"1619:F":4,"1615:E":10,"1616:D":4,"1617:D1":1,"1617:D2":10,"1620:C":1,"1618:G":9,"1619:H":10,"1621:C":1,"1620:D":4,"1620:F":12,"1620:E":2,"1620:G":10,"1621:D":7,"1621:E":10,"1621:F":4,"1623:B":1,"1622:D":4,"1623:C":1,"1623:A":1,"1623:D":10,"1623:E":9,"1625:C":1,"1625:D":20,"1625:E1":19,"1746:D":2,"1626:D":7,"1626:E":10,"1626:F":2,"1633:F":2,"1627:D":2,"1627:E":9,"1627:F":4,"1628:A":1,"1628:B":1,"1628:C":10,"1628:D1":7,"1628:D2":10,"1630:E":11,"1630:A":1,"1630:B":1,"1630:C":9,"1630:D":10,"1632:D":4,"1632:E2":4,"1632:E1":10,"1633:E":10,"1634:F":4,"1634:D":4,"1634:E":10,"1635:D":1,"1635:F":4,"1635:E":9,"1637:G":1,"1637:A":1,"1637:C":1,"1637:B":1,"1637:D":1,"1637:E":7,"1637:F":9,"1642:A":1,"1642:B":11,"1641:D":2,"1641:A":8,"1641:B":7,"1641:C":10,"1644:D":1,"1644:E":4,"1633:D":3,"1661:C":1,"1661:E":7,"1646:E":19,"1646:D":7,"1646:C":1,"1638:E":9,"1647:C":1,"1647:D":4,"1647:E":7,"1648:A":3,"1648:B":2,"1648:C":4,"1650:F":10,"1650:G":9,"1651:D":5,"1656:C":1,"1656:F":4,"1656:E":10,"1656:D":4,"1657:C":1,"1657:D":7,"1657:E":10,"1657:F":4,"1658:D1":1,"1658:D2":10,"1658:E":7,"1659:E":10,"1659:D":4,"1800:A":2,"1660:F1":1,"1660:F2":9,"1743:E":19,"1661:D":4,"1661:F":4,"1799:F":9,"1799:D2":13,"1799:E":19,"1663:A":1,"1665:C":1,"1665:D":7,"1665:E":7,"1667:B":10,"1667:C":9,"1670:C":1,"1670:D":1,"1670:E":10,"1670:F":9,"1671:C":1,"1671:E":9,"1671:D":1,"1672:H":9,"1672:C":1,"1673:B":1,"1673:C":5,"1672:F2":1,"1672:D":1,"1672:F1":7,"1672:E":10,"1673:D":4,"1673:E":7,"1675:G":10,"1678:B1":1,"1678:B2":2,"1677:A":1,"1677:B":1,"1677:C":4,"1677:D":16,"1679:F":4,"1679:D":4,"1679:E":9,"1690:G":8,"1680:A":1,"1680:B":1,"1680:D":19,"1680:C":1,"1682:C":1,"1680:E":7,"1680:F":4,"1681:D":1,"1681:F":10,"1682:D":7,"1682:E":12,"1776:I":17,"1688:A":1,"1688:B":1,"1688:C":2,"1687:D":5,"1687:A":1,"1687:B":1,"1687:C":7,"1561:C":1,"1795:F":19,"1689:A":1,"1689:C":1,"1689:B":1,"1689:D":7,"1689:E":4,"1691:F":4,"1691:A":1,"1691:B":1,"1691:C":1,"1691:D":4,"1691:E":9,"1693:A":1,"1693:B":2,"1693:C":9,"1695:A":1,"1695:B":11,"1695:C":2,"1695:D2":13,"1695:E":1,"1699:E":18,"1697:A":1,"1697:B":2,"1725:L":7,"1697:C":3,"1788:E":17,"1537:C":1,"1697:E":7,"1686:A":1,"1686:B":1,"1685:A":1,"1685:D1":1,"1698:A":10,"1698:B":1,"1698:C":1,"1698:F":11,"1698:E":19,"1698:D":1,"1685:B":9,"1791:G2":8,"1785:C":10,"1785:B":7,"1699:D":29,"1700:C":1,"1700:D":4,"1719:C":1,"1719:B":1,"1719:A":1,"1720:C":1,"1720:B":1,"1720:A":1,"1722:D":2,"1722:C":2,"1722:B":2,"1722:A":2,"1787:C":2,"1787:E":13,"1787:F":7,"1701:D":5,"1701:F":7,"569:A":1,"1705:E":10,"1215:B":1,"1792:E":19,"1792:F1":11,"1705:C":1,"1705:B":1,"1705:A":1,"1705:D":3,"1703:G":1,"1712:D":7,"1450:B":1,"1451:C":1,"1878:G":1,"1451:D":1,"1451:E1":1,"1451:E2":1,"1451:F":9,"1452:G":9,"1452:D":1,"1452:E":4,"1455:D":1,"1870:F":29,"1453:C":1,"1453:D":1,"1453:E":2,"1453:F":10,"1454:E":1,"1454:F":1,"1455:E":4,"1458:A":1,"1867:F":20,"1458:B":1,"1458:C":10,"1463:B":1,"1461:F":10,"1461:A":1,"1461:B":1,"1461:E":1,"1461:D":1,"1461:C":1,"1462:E1":1,"1462:E2":1,"1462:F":1,"1463:C":1,"1468:A":1,"1463:D":1,"1463:E":9,"1466:F":2,"1466:E":1,"1466:D":1,"1466:C":1,"1467:D":4,"1467:C":1,"1467:E":10,"1468:H":4,"1468:M":7,"1468:C":1,"1468:K":1,"1468:N":1,"1469:F":10,"1860:F":4,"1469:C":1,"1469:D":1,"1469:E":13,"1470:E":1,"1470:A":1,"1470:B":1,"1470:C":10,"1470:D":4,"1859:F":1,"1859:E":10,"1472:F":2,"1472:G":2,"1473:A":1,"1473:B":1,"1473:C":1,"1473:G":7,"1473:E":9,"1473:D":1,"1474:C":1,"1474:B":1,"1474:D":4,"1474:E":10,"1475:D":1,"1475:E":1,"1475:F":1,"1475:G":1,"1476:C":1,"1476:E":7,"1476:F":2,"1476:D":1,"1477:B":1,"1477:C":11,"1477:A":1,"1479:A":1,"1479:B2":2,"1479:B1":1,"1479:C":10,"1479:D":4,"1481:C":1,"1481:D":1,"1481:E":10,"1481:F":1,"1483:A":1,"1483:B":1,"1483:C":2,"1483:D":9,"1485:C":1,"1638:C":1,"1485:D":4,"1485:E":10,"1485:F":9,"1486:C1":1,"1486:C2":1,"1486:D":9,"1486:E":4,"1486:F":10,"1487:C":1,"1487:D":1,"1487:E":1,"1487:G":9,"1490:G":1,"1491:G":17,"1491:C":1,"1491:D":1,"1491:E":9,"1491:F":9,"1492:C":1,"1492:D":1,"1492:E":10,"1493:C":1,"1493:D":2,"1493:E":10,"1493:F":10,"1494:A":1,"1494:C":1,"1494:D":7,"1494:E":9,"1494:F":4,"1495:A":1,"1495:C":7,"1497:C1":1,"1497:C2":1,"1497:D":10,"1497:E2":10,"1497:E1":1,"1498:D":4,"1498:E":4,"1498:F":10,"1499:D":4,"1499:E":10,"1499:F":10,"1500:A":1,"1500:B":7,"1503:D":18,"1503:C":7,"1503:B":1,"1503:A":1,"1506:F":2,"1847:E":6,"1506:G":2,"1508:C":10,"1508:E":1,"1508:D":1,"1508:A":1,"1509:C":1,"1511:C":1,"1511:D":1,"1511:E":4,"1512:G":1,"1512:F":1,"1513:C":1,"1513:D":2,"1513:E":9,"1513:F":10,"1514:C":1,"1514:D":2,"1515:B":1,"1515:A":1,"1515:C":1,"1515:D":1,"1515:E":7,"1515:F":9,"1515:G":7,"1516:C":1,"1516:B":1,"1516:A":1,"1516:D":4,"1516:E":10,"1517:C":1,"1517:B":1,"1517:A":1,"1517:D":1,"1517:E":10,"1517:F":1,"1842:D":3,"1842:F":38,"1519:D":1,"1519:E":7,"1520:F1":1,"1520:F2":7,"1520:G":7,"1521:C":2,"1835:E":1,"1836:B":3,"1835:C":28,"1834:F":20,"1521:D":10,"1521:E":7,"1523:G":1,"1523:F":1,"1523:C":1,"1523:D":10,"1523:E":18,"1525:C":2,"1525:D":1,"1525:E":4,"1526:B":1,"1526:A":1,"1526:C1":1,"1526:C2":1,"1841:F":23,"1526:E":10,"1527:B1":1,"1527:B2":1,"1527:C":1,"1527:D":10,"1527:E":10,"1528:A":1,"1528:C":9,"1528:B":1,"1528:D":10,"1530:D":1,"1530:E":4,"1534:C":1,"1534:D":1,"1540:A":1,"1540:C2":2,"1540:C1":7,"1535:C":1,"1535:D":1,"1535:E":7,"1536:C":1,"1536:D":2,"1536:E":9,"1537:D":1,"1537:E1":1,"1537:E2":7,"1537:F":7,"1538:F":1,"1538:E":4,"1538:G":4,"1539:A":1,"1539:C":1,"1539:D":1,"1539:E":10,"1542:B":1,"1542:C":1,"1542:D":7,"1542:E2":7,"1542:E1":10,"1543:D1":1,"1543:D2":7,"1543:E":7,"1545:D":1,"1545:A":1,"1545:B":1,"1545:C":4,"1547:F":1,"1034:C":9,"1291:F":10,"1290:D":9,"1279:F":20,"713:C":1,"510:E":1,"1129:D":10,"1237:F":7,"1034:B":1,"1198:E":4,"786:C":2,"1603:E":4,"1097:G":9,"1392:H":9,"100212:C":1,"1179:D":9,"932:F":9,"1264:D1":7,"1264:D2":10,"1033:E":10,"660:F":4,"1416:D":9,"809:E":4,"123:D":2,"958:B2":1,"1146:G":10,"873:F":8,"653:F":18,"536:E":7,"102059:A":1,"696:E":9,"1583:G":7,"1583:H":1,"1832:E":8,"1826:D":2,"793:F":10,"1559:B":1,"1559:A":1,"960:G":10,"1178:G":10,"1215:F":9,"995:F":9,"1404:C":1,"1038:F":10,"1528:F":2,"1096:G":2,"286:E":10,"1368:H1":2,"1368:H2":1,"724:E":10,"362:E":1,"277:E":2,"1082:G":2,"757:E":4,"757:D":10,"757:C":7,"757:F":1,"919:E":10,"102501:D":1,"103438:E":1,"915:D":7,"915:F":2,"915:E":4,"1708:B":1,"1708:A":1,"979:C":4,"979:B":9,"979:A":1,"979:D":7,"868:C":2,"868:B":1,"868:A":1,"976:D":1,"976:C":2,"976:B":1,"976:A":1,"1644:B":1,"1644:A":1,"1008:C":1,"1008:B":1,"1008:A":1,"788:B":7,"1225:D":1,"13:E":1,"1042:D":1,"1250:J":1,"939:E":1,"1223:C":2,"1530:C":10,"1201:C":7,"439:D":1,"914:D":1,"455:D":1,"1295:E":1,"1320:C":1,"1616:E":1,"1426:F":1,"1408:C":4,"1370:C":7,"1420:B":10,"1389:A":4,"1360:C":10,"1367:A":4,"1338:A":4,"1286:A":1,"1107:G":1,"160:E":1,"1321:E":1,"1144:G":1,"1288:E":1,"1208:D":1,"1543:C":1,"103145:K":1,"960:B":1,"1353:B":9,"1579:D":2,"1656:A":9,"1649:B":4,"1649:A":9,"1676:G":1,"1676:H1":1,"1676:H2":1,"1676:F":1,"1676:E":1,"1676:C":1,"1676:B":1,"1676:A":1,"1715:F":4,"1184:C1":1,"1364:E":4,"1765:L":10,"1717:F":9,"1762:F":16,"1765:C":17,"1771:E":16,"1114:D":2,"1773:D":7,"1773:I":9,"1773:B":9,"1773:H":7,"1739:E":10,"1746:E1":19,"1758:A":1,"1758:B":1,"1758:C":1,"1286:C1":10,"1753:A1":1,"1738:F":27,"104090:I":2,"104090:G":2,"1758:D":1,"1758:E":9,"104068:D":1,"104068:C":1,"104068:B":1,"104068:A":1,"1702:F":1,"1305:G":1,"463:C":4,"1869:B":2,"1869:A":2,"103446:K":1,"1860:E":4,"559:C":1,"1856:D":1,"1855:B":2,"1855:A":2,"1853:B":2,"1853:A":2,"1701:C":1,"1725:G":1,"1725:H":1,"1606:F":19,"1848:E":20,"1848:F":7,"1836:A":2,"1776:J":10,"1776:L":1,"1776:H":1,"1776:B":7,"1776:F":1,"1776:A":1,"1776:G":4,"1776:C":10,"1777:A":1,"1777:B":1,"1777:D":1,"1778:B":1,"1778:C":1,"1778:D":4,"1779:A":1,"1779:B":1,"1779:C":1,"1779:D":1,"1780:A":1,"1780:B":1,"1780:D":1,"1780:E":10,"1781:A":1,"1781:B":1,"1781:C":1,"1781:D":1,"1781:E":16,"1783:A":1,"1783:B":1,"1783:C":1,"1783:D":2,"1783:E":10,"1784:A":1,"1784:B":1,"1787:A":1,"1787:B":1,"1787:D":1,"1788:A":1,"1788:B":1,"1788:C":1,"1788:D":2,"1790:A":1,"1790:B":1,"1790:C":1,"1790:D":1,"1790:E":1,"1790:F":4,"1790:G":9,"1791:A":1,"1791:B":1,"1791:C":1,"1791:D":1,"1791:E":1,"1791:F":1,"1791:G1":1,"1792:A":1,"1792:C":1,"1792:D":1,"1793:A":1,"1793:B":1,"1793:C":1,"1793:D":1,"1794:C":1,"1794:D":1,"1795:E":7,"1795:G":7,"1796:E":10,"1797:A":1,"1797:B":1,"1797:C":1,"1797:D":1,"1841:A":1,"1799:A":1,"1799:B":1,"1799:C":1,"1799:D1":1,"1799:G":9,"1800:B":1,"1800:C1":1,"1800:C2":1,"1800:D":1,"1800:E1":1,"1800:E2":1,"1800:F":1,"1801:C":1,"1804:A":1,"1804:B":1,"1805:D":1,"1807:A":1,"1807:B":1,"1807:C":1,"1807:D":1,"1807:E":1,"1807:F":1,"1807:G1":1,"1807:G2":1,"1809:A":1,"1809:B":1,"1809:C":1,"1809:D":1,"1809:E":10,"1809:F":10,"1810:A":1,"1810:B":1,"1810:C":1,"1810:D":1,"1811:A":1,"1811:B":1,"1811:C":1,"1811:D":1,"1811:E":1,"1811:F":4,"1811:G1":4,"1812:E":1,"1812:D":1,"1812:C":1,"1812:B":1,"1814:A":1,"1814:B":1,"1814:C":1,"1815:A":1,"1815:C":7,"1817:A":1,"1817:B":1,"1817:C":10,"1821:A":1,"1821:B":1,"1821:C":1,"1821:D":1,"1822:A":1,"1822:B":1,"1822:C":1,"1822:D":1,"1822:E":1,"1822:F":1,"1822:G1":1,"1823:A":1,"1823:B":1,"1823:C":1,"1823:D":1,"1823:E":10,"1823:F":9,"1824:A":1,"1824:B1":1,"1824:B2":9,"1826:A":1,"1826:B":1,"1826:C":1,"1829:A":1,"1829:B":1,"1829:C":1,"1829:D":1,"1829:E":1,"1829:F":1,"1831:A":2,"1831:B":2,"1832:A":1,"1832:B":1,"1832:C":1,"1833:A":1,"1833:B":1,"1833:C":1,"1838:A":1,"1840:A":1,"1840:B":1,"1840:C":1,"1840:D":1,"1840:E":1,"1840:G1":11,"1725:J":10,"1769:D2":7,"1769:D1":1,"1765:H":9,"1495:E":1,"1779:F":10,"1731:D":1,"1731:C":1,"1731:B":1,"1625:E2":7,"103469:G":1,"1528:E":4,"1753:E":2,"1400:F":17,"1603:D":1,"1172:C1":9,"1172:C2":9,"1699:A":1,"1699:B":1,"1699:C":1,"1227:G":9,"1767:F":7,"1762:G":7,"1766:F":10,"1758:F":7,"1732:E":10,"1746:E2":2,"1743:G":7,"1730:E":10,"1730:F":10,"1882:E2":1,"1882:E1":1,"1879:F":10,"1852:D":10,"1867:E2":1,"1867:E1":1,"1856:E2":10,"1852:C":9,"1847:F":10,"1834:E":7,"1834:D":1,"1834:C":1,"1834:B":1,"1834:A":1,"1511:F":10,"103914:B":1,"616:F":10,"524:F":10,"1207:G":10,"235:C":10,"1437:G":9,"316:G1":1,"316:G2":1,"316:G3":4,"452:E":4,"825:F":4,"102511:G":1,"1202:E":4,"1696:G":1,"1208:G":10,"325:E":10,"830:D":10,"102978:J":1,"102220:I":1,"1630:F":1,"587:F":9,"79:D":10,"516:D":10,"521:D":10,"104065:H":2,"104065:M":1,"104065:B":1,"1697:F":10,"1386:C":10,"283:E":10,"633:G":10,"1648:D":10,"104090:D":1,"104090:H":1,"104090:A":1,"104090:C":1,"104090:F":1,"104090:K":1,"104090:M":1,"101190:M":1,"671:C":10,"794:F":10,"983:E":10,"549:F":10,"702:F":10,"104114:J":1,"916:E":4,"468:D":4,"723:E":1,"104090:B":1,"104090:E":1,"104090:J":1,"620:E":1,"104077:K":1,"103409:J":1,"104064:B":1,"104053:B":1,"475:D":1,"914:F":4,"104008:B":1,"932:G":7,"319:D":10,"204:E":10,"547:E":10,"102787:E":1,"102787:D":1,"1556:H":1,"1284:G":1,"1427:G":1,"1260:F":10,"335:F":7,"1609:G":7,"605:C":9,"1861:E":2,"1861:C":1,"103931:C":1,"104459:E":1,"104427:D":1,"1844:F1":9,"104427:F":1,"104385:E":1,"104385:B":1,"104385:G":1,"104385:D":1,"104385:F":1,"104385:K":1,"104385:J":1,"104385:H":1,"104385:I":1,"104385:C":1,"104385:A":1,"104385:L":1,"264:C":4,"104065:C":1,"104065:A":1,"104053:J":1,"277:C":10,"104396:G":1,"104396:B":1,"104396:L":1,"104345:L":1},"skippedUsers":[{"country":"China","lastOnlineTimeSeconds":1695733037,"city":"Shanghai","rating":2812,"friendOfCount":21,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"20333333333","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"","rank":"international grandmaster","maxRating":2812,"registrationTimeSeconds":1615703773,"maxRank":"international grandmaster"},{"country":"Japan","lastOnlineTimeSeconds":1695694814,"city":"Tokyo","rating":3125,"friendOfCount":746,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"maspy","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"","rank":"legendary grandmaster","maxRating":3163,"registrationTimeSeconds":1621878251,"maxRank":"legendary grandmaster"},{"lastName":"Korotkevich","country":"Belarus","lastOnlineTimeSeconds":1695745703,"city":"Gomel","rating":3751,"friendOfCount":58730,"titlePhoto":"https://userpic.codeforces.org/422/title/50a270ed4a722867.jpg","handle":"tourist","avatar":"https://userpic.codeforces.org/422/avatar/2b5dbe87f0d859a2.jpg","firstName":"Gennady","contribution":0,"organization":"ITMO University","rank":"legendary grandmaster","maxRating":3979,"registrationTimeSeconds":1265987288,"maxRank":"legendary grandmaster"},{"lastName":"Kaviani","country":"Iran","lastOnlineTimeSeconds":1695748007,"city":"Tehran","rating":2811,"friendOfCount":702,"titlePhoto":"https://userpic.codeforces.org/638924/title/68826f92daccbefa.jpg","handle":"alireza_kaviani","avatar":"https://userpic.codeforces.org/638924/avatar/a1e0f95db56a4015.jpg","firstName":"Alireza","contribution":0,"organization":"Allame Helli","rank":"international grandmaster","maxRating":2898,"registrationTimeSeconds":1508494021,"maxRank":"international grandmaster"},{"country":"Japan","lastOnlineTimeSeconds":1695500942,"rating":3085,"friendOfCount":774,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"heno239","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"Kyoto University","rank":"legendary grandmaster","maxRating":3385,"registrationTimeSeconds":1522850054,"maxRank":"legendary grandmaster"},{"lastName":"Esin","country":"Russia","lastOnlineTimeSeconds":1695693000,"city":"Sochi","rating":2936,"friendOfCount":615,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"Vercingetorix","avatar":"https://userpic.codeforces.org/no-avatar.jpg","firstName":"Aleksei","contribution":0,"organization":"","rank":"international grandmaster","maxRating":3213,"registrationTimeSeconds":1396696219,"email":"imbard7@gmail.com","maxRank":"legendary grandmaster"},{"lastName":"Jiang","country":"China","lastOnlineTimeSeconds":1695693759,"city":"Chongqing","rating":3632,"friendOfCount":19012,"titlePhoto":"https://userpic.codeforces.org/887306/title/6bdbf0688dc4dc03.jpg","handle":"jiangly","avatar":"https://userpic.codeforces.org/887306/avatar/af00ced3c14f5ba7.jpg","firstName":"Lingyu","contribution":0,"organization":"Jiangly Fan Club","rank":"legendary grandmaster","maxRating":3859,"registrationTimeSeconds":1547985852,"maxRank":"legendary grandmaster"},{"lastName":"Op de Beek","country":"Netherlands","lastOnlineTimeSeconds":1695741495,"city":"Delft","rating":2771,"friendOfCount":364,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"jeroenodb","avatar":"https://userpic.codeforces.org/no-avatar.jpg","firstName":"Jeroen","contribution":0,"organization":"Delft University of Technology","rank":"international grandmaster","maxRating":2844,"registrationTimeSeconds":1589797475,"maxRank":"international grandmaster"},{"lastName":"Romashov","country":"Russia","lastOnlineTimeSeconds":1695638818,"city":"Barnaul","vkId":"259250989","rating":3261,"friendOfCount":1209,"titlePhoto":"https://userpic.codeforces.org/1250517/title/d3b47822f3860824.jpg","handle":"Ormlis","avatar":"https://userpic.codeforces.org/1250517/avatar/5b32008c179f4f98.jpg","firstName":"Fedor","contribution":0,"organization":"Higher School of Economics","rank":"legendary grandmaster","maxRating":3410,"registrationTimeSeconds":1568806149,"email":"rom.fedor@bk.ru","maxRank":"legendary grandmaster"},{"contribution":0,"lastOnlineTimeSeconds":1695691422,"organization":"UESTC","rating":2575,"friendOfCount":120,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","rank":"grandmaster","handle":"chen_zexing","maxRating":2575,"avatar":"https://userpic.codeforces.org/no-avatar.jpg","registrationTimeSeconds":1589416856,"maxRank":"grandmaster"},{"lastName":"Mustafin","country":"Russia","lastOnlineTimeSeconds":1695742067,"city":"Moscow","rating":2736,"friendOfCount":199,"titlePhoto":"https://userpic.codeforces.org/313383/title/47a09f0c6d1721b3.jpg","handle":"Kapt","avatar":"https://userpic.codeforces.org/313383/avatar/5da7eaa91af4d935.jpg","firstName":"Denis","contribution":0,"organization":"Moscow IPT","rank":"international grandmaster","maxRating":2882,"registrationTimeSeconds":1435332260,"maxRank":"international grandmaster"},{"country":"Japan","lastOnlineTimeSeconds":1695658526,"rating":2637,"friendOfCount":200,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"emthrm","avatar":"https://userpic.codeforces.org/no-avatar.jpg","contribution":0,"organization":"","rank":"international grandmaster","maxRating":2771,"registrationTimeSeconds":1548515959,"maxRank":"international grandmaster"},{"lastName":"Ivanov","country":"Russia","lastOnlineTimeSeconds":1695694585,"city":"Saint Petersburg","rating":2603,"friendOfCount":783,"titlePhoto":"https://userpic.codeforces.org/140199/title/5d6c156baba23056.jpg","handle":"orz","avatar":"https://userpic.codeforces.org/140199/avatar/e33a2a1cb55f5065.jpg","firstName":"Mikhail","contribution":0,"organization":"Saint-Petersburg SU","rank":"international grandmaster","maxRating":2818,"registrationTimeSeconds":1382191994,"maxRank":"international grandmaster"},{"country":"United States","lastOnlineTimeSeconds":1695731572,"rating":2681,"friendOfCount":154,"titlePhoto":"https://userpic.codeforces.org/789615/title/166c3d5edc92ca3c.jpg","handle":"Xylenox","avatar":"https://userpic.codeforces.org/789615/avatar/d21c3e5bbf4adc39.jpg","contribution":0,"organization":"University of Central Florida","rank":"international grandmaster","maxRating":2761,"registrationTimeSeconds":1536086497,"maxRank":"international grandmaster"},{"lastName":"Lee","country":"South Korea","lastOnlineTimeSeconds":1695748787,"city":"Seoul","rating":2591,"friendOfCount":184,"titlePhoto":"https://userpic.codeforces.org/2000943/title/c9ea259579f14eef.jpg","handle":"windva","avatar":"https://userpic.codeforces.org/2000943/avatar/db5bce09881351d8.jpg","firstName":"Sungho","contribution":0,"organization":"Gyeonggi Science High School","rank":"grandmaster","maxRating":2630,"registrationTimeSeconds":1616399030,"maxRank":"international grandmaster"},{"lastName":"jiang","country":"China","lastOnlineTimeSeconds":1695722353,"city":"Shanghai","rating":2631,"friendOfCount":202,"titlePhoto":"https://userpic.codeforces.org/2293686/title/d24a81d86878e2f1.jpg","handle":"jiangbowen","avatar":"https://userpic.codeforces.org/2293686/avatar/39ecea97452e4f1b.jpg","firstName":"bowen","contribution":0,"organization":"wang old boss make big money","rank":"international grandmaster","maxRating":2631,"registrationTimeSeconds":1635680930,"maxRank":"international grandmaster"},{"contribution":0,"lastOnlineTimeSeconds":1695735654,"organization":"","rating":2673,"friendOfCount":179,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","rank":"international grandmaster","handle":"Potassium","maxRating":2724,"avatar":"https://userpic.codeforces.org/no-avatar.jpg","registrationTimeSeconds":1514484253,"maxRank":"international grandmaster"},{"lastName":"Lee","country":"South Korea","lastOnlineTimeSeconds":1695666512,"rating":2705,"friendOfCount":480,"titlePhoto":"https://userpic.codeforces.org/no-title.jpg","handle":"dlalswp25","avatar":"https://userpic.codeforces.org/no-avatar.jpg","firstName":"Minje","contribution":0,"organization":"Seoul National University","rank":"international grandmaster","maxRating":2972,"registrationTimeSeconds":1490436572,"maxRank":"international grandmaster"},{"lastName":"Safin","country":"Slovakia","lastOnlineTimeSeconds":1695575233,"city":"Michalovce","rating":2621,"friendOfCount":1471,"titlePhoto":"https://userpic.codeforces.org/69675/title/b850d11d7f6816ce.jpg","handle":"Xellos","avatar":"https://userpic.codeforces.org/69675/avatar/8526bcfc8e687b43.jpg","firstName":"Jakub","contribution":0,"organization":"KSP Slovakia","rank":"international grandmaster","maxRating":2865,"registrationTimeSeconds":1350749788,"email":"jakub.safin@gmail.com","maxRank":"international grandmaster"},{"lastName":"Plyushkin","country":"Russia","lastOnlineTimeSeconds":1695694694,"city":"Moscow","rating":2559,"friendOfCount":150,"titlePhoto":"https://userpic.codeforces.org/204116/title/1f2f303a956b80e8.jpg","handle":"maxplus","avatar":"https://userpic.codeforces.org/204116/avatar/82f0a9a26d40a4bd.jpg","firstName":"Maxim","contribution":0,"organization":"MAI","rank":"grandmaster","maxRating":2637,"registrationTimeSeconds":1395666009,"maxRank":"international grandmaster"}]}